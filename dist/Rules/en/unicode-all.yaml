---

 - "a": 
    - test: 
        if: "$TTS='none'"
        then: {t: eigh}                          # long "a" sound in all speech engines I tested (espeak, MS SAPI, eloquence,
        else: {spell: a}                         #    AWS Polly, ReadSpeaker, NaturalReader, google cloud, nuance, ibm watson)
 - "A":
    - test: 
        if: "$TTS='none'"
        then: {t: Eigh}                          # long "a" sound in all speech engines I tested (see above)
        else: {spell: a}

 - "!": [t: factorial]                           # 0x21
 - "\"": [t: quotation mark]                     # 0x22
 - "#": [t: number]                              # 0x23
 - "$": [t: dollars]                             # 0x24
 - "%": [t: percent]                             # 0x25
 - "&": [t: ampersand]                           # 0x26
 - "'": [t: apostrophe]                          # 0x27
 - "(":                                          # 0x28
    - test:
        if: $SpeechStyle = 'ClearSpeak' or $SpeechStyle = 'SimpleSpeak'
        then: [test: {if: "$Verbosity='Terse'", then: {t: open}, else: {t: open paren}}]
        else: [t: left paren]                            
 - ")":                                          # 0x29
    - test:
        if: $SpeechStyle = 'ClearSpeak' or $SpeechStyle = 'SimpleSpeak'
        then: [test: {if: "$Verbosity='Terse'", then: {t: close}, else: {t: close paren}}]
        else: [t: right paren]                            

 - "*": [t: times]                               # 0x2a
 - "+": [t: plus]                                # 0x2b
 - ",":                                          # 0x2c
    # the following deals with the interaction of "," with "…" which sometimes wants the ',' to be silent
    # that this test is here and not with "…" is not ideal, but seems simplest
     test:
        if:
            - "$SpeechStyle != 'ClearSpeak' or $ClearSpeak_Ellipses = 'Auto' or "
               # must be ClearSpeak and $ClearSpeak_Ellipses = 'AndSoOn'
               # speak "comma" when not adjacent to '…'
            - "( following-sibling::*[1][text()!= '…'] and preceding-sibling::*[1][text()!='…']  ) or "
               # except if expression starts with '…'
            - " ../*[1][text()='…'] "
        then: [t: comma]
        # else silent

 - "-": [t: minus]                               # 0x2d
 - ".": [t: point]                               # 0x2e
 - "/": [t: divided by]                          # 0x2f
 - ":": [t: colon]                               # 0x3a
 - ";": [t: semicolon]                           # 0x3b
 - "<":                                          # 0x3c
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: less than
 - "=": [t: equals]                              # 0x3d
 - ">":                                          # 0x3e
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: greater than
 - "?": [t: question mark]                       # 0x3f
 - "@": [t: at sign]                             # 0x40
 - "[":                                          # 0x5b
    - test:
        if: $SpeechStyle = 'ClearSpeak' or $SpeechStyle = 'SimpleSpeak'
        then: [t: open bracket]
        else: [t: left bracket]                            
 - "\\": [t: back slash]                         # 0x5c
 - "]":                                          # 0x5d
    - test:
        if: $SpeechStyle = 'ClearSpeak' or $SpeechStyle = 'SimpleSpeak'
        then: [t: close bracket]
        else: [t: right bracket]
 - "^": [t: to the]                              # 0x5e
 - "_": [t: under bar]                           # 0x5f
 - "`": [t: grave accent]                        # 0x60
 - "{":                                          # 0x7b
    - test:
        if: $SpeechStyle = 'ClearSpeak' or $SpeechStyle = 'SimpleSpeak'
        then: [t: open brace]
        else: [t: left brace]                            
 - "|":                                          # 0x7c
    # note: for ClearSpeak and SimpleSpeak, "|" in side of sets is handled at the mrow level, same for 'sets'
     - test:
        - if: $SpeechStyle != 'ClearSpeak'
          then: [t: vertical line]
        - else_if: "$ClearSpeak_VerticalLine = 'SuchThat'"
          then: [t: such that]
        - else_if: "$ClearSpeak_VerticalLine = 'Given'"  
          then: [t: given] 
        - else: [t: divides]                   

 - "}":                                          # 0x7d
    - test:
        if: $SpeechStyle = 'ClearSpeak' or $SpeechStyle = 'SimpleSpeak'
        then: [t: close brace]
        else: [t: right brace]                            

 - "~": [t: tilde]                               # 0x7e
 - " ": [t: ""]                                  # 0xa0
 - "¢": [t: cents]                               # 0xa2
 - "£": [t: pounds]                              # 0xa3
 - "¤": [t: currency sign]                       # 0xa4
 - "¥": [t: yen]                                 # 0xa5
 - "¦": [t: broken bar]                          # 0xa6
 - "§": [t: section]                             # 0xa7
 - "¨": [t: diaeresis]                           # 0xa8
 - "©": [t: copyright]                           # 0xa9
 - "ª": [t: feminine ordinal indicator]          # 0xaa
 - "¬": [t: not]                                 # 0xac
 - "«": [t: left-pointing double angle quote mark] # 0xab
 - "°": [t: "degrees"]                           # 0xb0
 - "±": [t: plus or minus]                       # 0xb1
 - "²": [t: "two"]                               # 0xb2
 - "³": [t: "three"]                             # 0xb3
 - "´": [t: "accute"]                            # 0xb4
 - "µ": [t: micro]                               # 0xb5
 - "¹": [t: one]                                 # 0xb9
 - "º": [t: masculine ordinal indicator]                                 # 0xb9
 - "·":
    - test:
        if: "$SpeechStyle != 'ClearSpeak' or $ClearSpeak_MultSymbolDot = 'Auto'"
        then: [t: times]
        else: [t: dot]
 - "×":                                          # 0xd7
    - test:
        if: "$SpeechStyle != 'ClearSpeak' or $ClearSpeak_MultSymbolX = 'Auto'"
        then: [t: times]
        else_test:
            if: $ClearSpeak_MultSymbolX = 'By'
            then: [t: by]
            else: [t: cross]
 - "÷": [t: divided by]                          # 0xf7
 - "ʰ": [t: modifier small h]                    # 0x2b0
 - "ʱ": [t: modifier small h with hook]          # 0x2b1
 - "ʲ": [t: modifier small j]                    # 0x2b2
 - "ʳ": [t: modifier small r]                    # 0x2b3
 - "ʴ": [t: modifier small turned r]             # 0x2b4
 - "ʵ": [t: modifier small turned r with hook]   # 0x2b5
 - "ʶ":                                          # 0x2b6
     - t: modifier small
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: inverted r
 - "ʷ": [t: modifier small w]                    # 0x2b7
 - "ʸ": [t: modifier small y]                    # 0x2b8
 - "ʹ": [t: modifier prime]                      # 0x2b9
 - "ʺ": [t: modifier double prime]               # 0x2ba
 - "ʻ": [t: modifier turned comma]               # 0x2bb
 - "ʼ": [t: modifier apostrophe]                 # 0x2bc
 - "ʽ": [t: modifier reversed comma]             # 0x2bd
 - "ʾ": [t: modifier right half ring]            # 0x2be
 - "ʿ": [t: modifier left half ring]             # 0x2bf
 - "ˀ": [t: modifier glottal stop]               # 0x2c0
 - "ˁ": [t: modifier reversed glottal stop]      # 0x2c1
 - "˂": [t: modifier left arrowhead]             # 0x2c2
 - "˃": [t: modifier right arrowhead]            # 0x2c3
 - "˄": [t: modifier up arrowhead]               # 0x2c4
 - "˅": [t: modifier down arrowhead]             # 0x2c5
 - "ˆ": [t: modifier circumflex accent]          # 0x2c6
 - "ˇ": [t: caron]                               # 0x2c7
 - "ˈ": [t: modifier vertical line]              # 0x2c8
 - "ˉ": [t: modifier macron]                     # 0x2c9
 - "ˊ": [t: modifier acute accent]               # 0x2ca
 - "ˋ": [t: modifier grave accent]               # 0x2cb
 - "ˌ": [t: modifier low vertical line]          # 0x2cc
 - "ˍ": [t: modifier low macron]                 # 0x2cd
 - "ˎ": [t: modifier low grave accent]           # 0x2ce
 - "ˏ": [t: modifier low acute accent]           # 0x2cf
 - "ː": [t: modifier triangular colon]           # 0x2d0
 - "ˑ": [t: modifier half triangular colon]      # 0x2d1
 - "˒": [t: modifier centered right half ring]   # 0x2d2
 - "˓": [t: modifier centered left half ring]    # 0x2d3
 - "˔": [t: modifier up tadck]                   # 0x2d4
 - "˕": [t: modifier down tack]                  # 0x2d5
 - "˖": [t: modifier plus sign]                  # 0x2d6
 - "˗": [t: modifier minus sign]                 # 0x2d7
 - "˘": [t: breve]                               # 0x2d8
 - "˙": [t: dot above]                           # 0x2d9
 - "˚": [t: ring above]                          # 0x2da
 - "˛": [t: ogonek]                              # 0x2db
 - "˜": [t: small tilde]                         # 0x2dc
 - "˝": [t: double acute accent]                 # 0x2dd
 - "˞": [t: modifier rhotic hook]                # 0x2de
 - "˟": [t: modifier cross accent]               # 0x2df
 - "ˠ": [t: modifier small gamma]                # 0x2e0
 - "ˡ": [t: modifier small l]                    # 0x2e1
 - "ˢ": [t: modifier small s]                    # 0x2e2
 - "ˣ": [t: modifier small x]                    # 0x2e3
 - "ˤ": [t: modifier small reversed glottal stop] # 0x2e4
 - "˥": [t: modifier extra-high tone bar]        # 0x2e5
 - "˦": [t: modifier high tone bar]              # 0x2e6
 - "˧": [t: modifier mid tone bar]               # 0x2e7
 - "˨": [t: modifier low tone bar]               # 0x2e8
 - "˩": [t: modifier extra-low tone bar]         # 0x2e9
 - "˪": [t: modifier yin departing tone mark]    # 0x2ea
 - "˫": [t: modifier yang departing tone mark]   # 0x2eb
 - "ˬ": [t: modifier voicing]                    # 0x2ec
 - "˭": [t: modifier unaspirated]                # 0x2ed
 - "ˮ": [t: modifier double apostrophe]          # 0x2ee
 - "˯": [t: modifier low down arrowhead]         # 0x2ef
 - "˰": [t: modifier low up arrowhead]           # 0x2f0
 - "˱": [t: modifier low left arrowhead]         # 0x2f1
 - "˲": [t: modifier low right arrowhead]        # 0x2f2
 - "˳": [t: modifier low ring]                   # 0x2f3
 - "˴": [t: modifier middle grave accent]        # 0x2f4
 - "˵": [t: modifier middle double grave accent] # 0x2f5
 - "˶": [t: modifier middle double acute accent] # 0x2f6
 - "˷": [t: modifier low tilde]                  # 0x2f7
 - "˸": [t: modifier raised colon]               # 0x2f8
 - "˹": [t: modifier begin high tone]            # 0x2f9
 - "˺": [t: modifier end high tone]              # 0x2fa
 - "˻": [t: modifier begin low tone]             # 0x2fb
 - "˼": [t: modifier end low tone]               # 0x2fc
 - "˽": [t: modifier shelf]                      # 0x2fd
 - "˾": [t: modifier open shelf]                 # 0x2fe
 - "˿": [t: modifier low left arrow]             # 0x2ff
 - "̀": [t: grave accent embellishment]          # 0x300
 - "́": [t: acute accent embellishment]          # 0x301
 - "̂": [t: circumflex accent embellishment]     # 0x302
 - "̃": [t: tilde embellishment]                 # 0x303
 - "̄": [t: macron embellishment]                # 0x304
 - "̅": [t: overbar embellishment]               # 0x305
 - "̆": [t: breve embellishment]                 # 0x306
 - "̇": [t: dot above embellishment]             # 0x307
 - "̈": [t: diaeresis embellishment]             # 0x308
 - "̉": [t: hook above embellishment]            # 0x309
 - "̊": [t: ring above embellishment]            # 0x30a
 - "̋": [t: double acute accent embellishment]   # 0x30b
 - "̌": [t: caron embellishment]                 # 0x30c
 - "̍": [t: vertical line above embellishment]   # 0x30d
 - "̎": [t: double vertical line above embellishment] # 0x30e
 - "̏": [t: double grave accent embellishment]   # 0x30f
 - "̐": [t: candrabindu embellishment]           # 0x310
 - "̑": [t: inverted breve embellishment]        # 0x311
 - "̒": [t: turned comma above embellishment]    # 0x312
 - "̓": [t: comma above embellishment]           # 0x313
 - "̔": [t: reversed comma above embellishment]  # 0x314
 - "̕": [t: comma above right embellishment]     # 0x315
 - "̖": [t: grave accent below embellishment]    # 0x316
 - "̗": [t: acute accent below embellishment]    # 0x317
 - "̘": [t: left tack below embellishment]       # 0x318
 - "̙": [t: right tack below embellishment]      # 0x319
 - "̚": [t: left angle above embellishment]      # 0x31a
 - "̛": [t: horn embellishment]                  # 0x31b
 - "̜": [t: left half ring below embellishment]  # 0x31c
 - "̝": [t: up tack below embellishment]         # 0x31d
 - "̞": [t: down tack below embellishment]       # 0x31e
 - "̟": [t: plus sign below embellishment]       # 0x31f
 - "̠": [t: minus sign below embellishment]      # 0x320
 - "̡": [t: palatalized hook below embellishment] # 0x321
 - "̢": [t: retroflex hook below embellishment]  # 0x322
 - "̣": [t: dot below embellishment]             # 0x323
 - "̤": [t: diaeresis below embellishment]       # 0x324
 - "̥": [t: ring below embellishment]            # 0x325
 - "̦": [t: comma below embellishment]           # 0x326
 - "̧": [t: cedilla embellishment]               # 0x327
 - "̨": [t: ogonek embellishment]                # 0x328
 - "̩": [t: vertical line below embellishment]   # 0x329
 - "̪": [t: bridge below embellishment]          # 0x32a
 - "̫": [t: inverted double arch below embellishment] # 0x32b
 - "̬": [t: caron below embellishment]           # 0x32c
 - "̭": [t: circumflex accent below embellishment] # 0x32d
 - "̮": [t: breve below embellishment]           # 0x32e
 - "̯": [t: inverted breve below embellishment]  # 0x32f
 - "̰": [t: tilde below embellishment]           # 0x330
 - "̱": [t: macron below embellishment]          # 0x331
 - "̲": [t: low line embellishment]              # 0x332
 - "̳": [t: double low line embellishment]       # 0x333
 - "̴": [t: tilde overlay embellishment]         # 0x334
 - "̵": [t: short stroke overlay embellishment]  # 0x335
 - "̶": [t: long stroke overlay embellishment]   # 0x336
 - "̷": [t: short solidus overlay embellishment] # 0x337
 - "̸": [t: long solidus overlay embellishment]  # 0x338
 - "̹": [t: right half ring below embellishment] # 0x339
 - "̺": [t: inverted bridge below embellishment] # 0x33a
 - "̻": [t: square below embellishment]          # 0x33b
 - "̼": [t: seagull below embellishment]         # 0x33c
 - "̽": [t: x above embellishment]               # 0x33d
 - "̾": [t: vertical tilde embellishment]        # 0x33e
 - "̿": [t: double overline embellishment]       # 0x33f
 - "̀": [t: grave tone mark embellishment]       # 0x340
 - "́": [t: acute tone mark embellishment]       # 0x341
 - "Α":                                          # 0x391
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: alpha
 - "Β":                                          # 0x392
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: beta
 - "Γ":                                          # 0x393
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: gamma

    # Note: ClearSpeak has pref TriangleSymbol for this character, but that is wrong
 - "Δ":                                          # 0x394
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: delta
 - "Ε":                                          # 0x395
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: epsilon
 - "Ζ":                                          # 0x396
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: zeta
 - "Η":                                          # 0x397
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: eta
 - "Θ":                                          # 0x398
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: theta
 - "Ι":                                          # 0x399
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: iota
 - "Κ":                                          # 0x39a
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: kappa
 - "Λ":                                          # 0x39b
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: lamda
 - "Μ":                                          # 0x39c
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: mu
 - "Ν":                                          # 0x39d
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: nu
 - "Ξ":                                          # 0x39e
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: zai
 - "Ο":                                          # 0x39f
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: omicron
 - "Π":                                          # 0x3a0
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: pi
 - "Ρ":                                          # 0x3a1
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: rho
 - "Σ":                                          # 0x3a3
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: sigma
 - "Τ":                                          # 0x3a4
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: tau
 - "Υ":                                          # 0x3a5
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: upsilon
 - "Φ":                                          # 0x3a6
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: phi
 - "Χ":                                          # 0x3a7
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: chi
 - "Ψ":                                          # 0x3a8
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: psi
 - "Ω":                                          # 0x3a9
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: omega
 - "Ϊ":                                          # 0x3aa
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: iota with dialytika
 - "Ϋ":                                          # 0x3ab
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: upsilon with dialytika
 - "α": [t: alpha]                               # 0x3b1
 - "β": [t: beta]                                # 0x3b2
 - "γ": [t: gamma]                               # 0x3b3
 - "δ": [t: delta]                               # 0x3b4
 - "ε": [t: epsilon]                             # 0x3b5
 - "ζ": [t: zeta]                                # 0x3b6
 - "η": [t: eta]                                 # 0x3b7
 - "θ": [t: theta]                               # 0x3b8
 - "ι": [t: iota]                                # 0x3b9
 - "κ": [t: kappa]                               # 0x3ba
 - "λ": [t: lamda]                               # 0x3bb
 - "μ": [t: mu]                                  # 0x3bc
 - "ν": [t: nu]                                  # 0x3bd
 - "ξ": [t: zai]                                 # 0x3be
 - "ο": [t: omicron]                             # 0x3bf
 - "π": [t: pi]                                  # 0x3c0
 - "ρ": [t: rho]                                 # 0x3c1
 - "ς": [t: final sigma]                         # 0x3c2
 - "σ": [t: sigma]                               # 0x3c3
 - "τ": [t: tau]                                 # 0x3c4
 - "υ": [t: upsilon]                             # 0x3c5
 - "φ": [t: phi]                                 # 0x3c6
 - "χ": [t: chi]                                 # 0x3c7
 - "ψ": [t: psi]                                 # 0x3c8
 - "ω": [t: omega]                               # 0x3c9
 - "ϊ": [t: iota with dialytika]                 # 0x3ca
 - "ϋ": [t: upsilon with dialytika]              # 0x3cb
 - "ό": [t: omicron with tonos]                  # 0x3cc
 - "ύ": [t: upsilon with tonos]                  # 0x3cd
 - "ώ": [t: omega with tonos]                    # 0x3ce
 - "Ϗ":                                          # 0x3cf
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: kai
 - "ϐ": [t: beta]                                # 0x3d0
 - "ϑ": [t: theta]                               # 0x3d1
 - "ϒ": [t: upsilon with hook]                   # 0x3d2
 - "ϓ": [t: upsilon with acute and hook]         # 0x3d3
 - "ϔ": [t: upsilon with diaeresis and hook]     # 0x3d4
 - "ϕ": [t: phi]                                 # 0x3d5
 - "ϖ": [t: pi]                                  # 0x3d6
 - "ϗ": [t: kai]                                 # 0x3d7
 - "ϵ": [t: epsilon]                             # 0x3f5
 - "϶": [t: reversed epsilon]                    # 0x3f6
 - "А":                                          # 0x410
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: a
 - "Б":                                          # 0x411
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: be
 - "В":                                          # 0x412
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: ve
 - "Г":                                          # 0x413
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: ghe
 - "Д":                                          # 0x414
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: de
 - "Е":                                          # 0x415
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: ie
 - "Ж":                                          # 0x416
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: zhe
 - "З":                                          # 0x417
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: ze
 - "И":                                          # 0x418
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: i
 - "Й":                                          # 0x419
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: short i
 - "К":                                          # 0x41a
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: ka
 - "Л":                                          # 0x41b
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: el
 - "М":                                          # 0x41c
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: em
 - "Н":                                          # 0x41d
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: en
 - "О":                                          # 0x41e
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: o
 - "П":                                          # 0x41f
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: pe
 - "Р":                                          # 0x420
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: er
 - "С":                                          # 0x421
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: es
 - "Т":                                          # 0x422
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: te
 - "У":                                          # 0x423
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: u
 - "Ф":                                          # 0x424
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: ef
 - "Х":                                          # 0x425
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: ha
 - "Ц":                                          # 0x426
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: tse
 - "Ч":                                          # 0x427
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: che
 - "Ш":                                          # 0x428
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: sha
 - "Щ":                                          # 0x429
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: shcha
 - "Ъ":                                          # 0x42a
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: hard sign
 - "Ы":                                          # 0x42b
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: yeru
 - "Ь":                                          # 0x42c
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: soft sign
 - "Э":                                          # 0x42d
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: e
 - "Ю":                                          # 0x42e
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: yu
 - "Я":                                          # 0x42f
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: ya
 - "а": [t: a]                                   # 0x430
 - "б": [t: be]                                  # 0x431
 - "в": [t: ve]                                  # 0x432
 - "г": [t: ghe]                                 # 0x433
 - "д": [t: de]                                  # 0x434
 - "е": [t: ie]                                  # 0x435
 - "ж": [t: zhe]                                 # 0x436
 - "з": [t: ze]                                  # 0x437
 - "и": [t: i]                                   # 0x438
 - "й": [t: short i]                             # 0x439
 - "к": [t: ka]                                  # 0x43a
 - "л": [t: el]                                  # 0x43b
 - "м": [t: em]                                  # 0x43c
 - "н": [t: en]                                  # 0x43d
 - "о": [t: o]                                   # 0x43e
 - "п": [t: pe]                                  # 0x43f
 - "р": [t: er]                                  # 0x440
 - "с": [t: es]                                  # 0x441
 - "т": [t: te]                                  # 0x442
 - "у": [t: u]                                   # 0x443
 - "ф": [t: ef]                                  # 0x444
 - "х": [t: ha]                                  # 0x445
 - "ц": [t: tse]                                 # 0x446
 - "ч": [t: che]                                 # 0x447
 - "ш": [t: sha]                                 # 0x448
 - "щ": [t: shcha]                               # 0x449
 - "ъ": [t: hard sign]                           # 0x44a
 - "ы": [t: yeru]                                # 0x44b
 - "ь": [t: soft sign]                           # 0x44c
 - "э": [t: e]                                   # 0x44d
 - "ю": [t: yu]                                  # 0x44e
 - "я": [t: ya]                                  # 0x44f
 - "‐": [t: hyphen]                              # 0x2010
 - "‑": [t: hyphen]                              # 0x2011
 - "‒": [t: figure dash]                         # 0x2012
 - "–": [t: en dash]                             # 0x2013
 - "—": [t: em dash]                             # 0x2014
 - "―": [t: horizontal bar]                      # 0x2015
 - "‖": [t: double vertical line]                # 0x2016
 - "•": [t: bullet]                              # 0x2022
 - "…":                                          # 0x2026
    test:
        if:
            - "$SpeechStyle != 'ClearSpeak' or $ClearSpeak_Ellipses = 'Auto' or"
               # must be ClearSpeak and $ClearSpeak_Ellipses = 'AndSoOn'
               # speak '…' as 'and so on...' unless expr starts with '…'
            - "../*[1][text()='…']"
        then: [t: dot dot dot]
        else_test:  # must have $ClearSpeak_Ellipses = 'AndSoOn'
            if: "count(following-sibling::*) = 0"
            then: [t: and so on]
            else: [t: and so on up to]

 - "‰": [t: per mille]                           # 0x2030
 - "‱": [t: per ten thousand]                    # 0x2031
 - "′": [t: prime]                               # 0x2032
 - "″": [t: double prime]                        # 0x2033
 - "‴": [t: triple prime]                        # 0x2034
 - "‵": [t: reversed prime]                      # 0x2035
 - "‶": [t: reversed double prime]               # 0x2036
 - "‷": [t: reversed triple prime]               # 0x2037
 - "‸": [t: to the]                              # 0x2038
 - "‹": [t: single left pointing angle quote mark] # 0x2039
 - "›": [t: single right pointing angle quote mark] # 0x203a
 - "‼": [t: double factorial]                    # 0x203c
 - "⁄": [t: divided by]                          # 0x2044
 - "⁅": [t: left square bracket with quill]      # 0x2045
 - "⁆": [t: right square bracket with quill]     # 0x2046
 - "⁗": [t: quadruple prime]                     # 0x2057
 - "⁠": [t: ""]                                   # 0x2060
 - "⁡": [t: of]                                   # 0x2061
 - "⁢": [t: ""]                                   # 0x2062
 - "⁣": [t: ""]                                   # 0x2063
 - "⁤": [t: "and"]                                # 0x2064
 - "⁰": [t: to the zeroth power]                 # 0x2070
 - "ⁱ": [t: to the eihth power]                  # 0x2071
 - "⁴": [t: to the fourth power]                 # 0x2074
 - "⁵": [t: to the fifth power]                  # 0x2075
 - "⁶": [t: to the sixth power]                  # 0x2076
 - "⁷": [t: to the seventh power]                # 0x2077
 - "⁸": [t: to the eighth power]                 # 0x2078
 - "⁹": [t: to the ninth power]                  # 0x2079
 - "⁺": [t: superscript plus sign]               # 0x207a
 - "⁻": [t: superscript minus]                   # 0x207b
 - "⁼": [t: superscript equals sign]             # 0x207c
 - "⁽": [t: superscript left parenthesis]        # 0x207d
 - "⁾": [t: superscript right parenthesis]       # 0x207e
 - "ⁿ": [t: to the ennth power]                  # 0x207f
 - "₀": [t: sub zero]                            # 0x2080
 - "₁": [t: sub one]                             # 0x2081
 - "₂": [t: sub two]                             # 0x2082
 - "₃": [t: sub three]                           # 0x2083
 - "₄": [t: sub four]                            # 0x2084
 - "₅": [t: sub five]                            # 0x2085
 - "₆": [t: sub six]                             # 0x2086
 - "₇": [t: sub seven]                           # 0x2087
 - "₈": [t: sub eight]                           # 0x2088
 - "₉": [t: sub nine]                            # 0x2089
 - "₊": [t: subscript plus sign]                 # 0x208a
 - "₋": [t: subscript minus sign]                # 0x208b
 - "₌": [t: subscript equals sign]               # 0x208c
 - "₍": [t: subscript left parenthesis]          # 0x208d
 - "₎": [t: subscript right parenthesis]         # 0x208e
 - "ₐ": [t: sub A]                               # 0x2090
 - "ₑ": [t: sub E]                               # 0x2091
 - "ₒ": [t: sub O]                               # 0x2092
 - "ₓ": [t: sub X]                               # 0x2093
 - "ₕ": [t: sub H]                               # 0x2095
 - "ₖ": [t: sub K]                               # 0x2096
 - "ₗ": [t: sub L]                               # 0x2097
 - "ₘ": [t: sub M]                               # 0x2098
 - "ₙ": [t: sub N]                               # 0x2099
 - "ₚ": [t: sub P]                               # 0x209a
 - "ₛ": [t: sub S]                               # 0x209b
 - "ₜ": [t: sub T]                               # 0x209c
 - "₠": [t: european currenty units]             # 0x20a0
 - "₡": [t: colons]                              # 0x20a1
 - "₢": [t: cruzeiro]                            # 0x20a2
 - "₣": [t: franc]                               # 0x20a3
 - "₤": [t: lira]                                # 0x20a4
 - "₥": [t: mills]                               # 0x20a5
 - "₦": [t: naira]                               # 0x20a6
 - "₧": [t: peseta]                              # 0x20a7
 - "₨": [t: rupees]                              # 0x20a8
 - "₩": [t: won]                                 # 0x20a9
 - "₪": [t: new sheqels]                         # 0x20aa
 - "₫": [t: dong]                                # 0x20ab
 - "€": [t: euros]                               # 0x20ac
 - "₭": [t: kip]                                 # 0x20ad
 - "₮": [t: tugrik]                              # 0x20ae
 - "₯": [t: drachma]                             # 0x20af
 - "₰": [t: german pennies]                      # 0x20b0
 - "₱": [t: pesos]                               # 0x20b1
 - "₲": [t: guaranis]                            # 0x20b2
 - "₳": [t: australs]                            # 0x20b3
 - "₴": [t: hryvnias]                            # 0x20b4
 - "₵": [t: cedis]                               # 0x20b5
 - "₶": [t: livre tournois]                      # 0x20b6
 - "₷": [t: spesmilos]                           # 0x20b7
 - "₸": [t: tenges]                              # 0x20b8
 - "₹": [t: indian rupees]                       # 0x20b9
 - "₺": [t: turkish liras]                       # 0x20ba
 - "⃐": [t: left harpoon above embellishment]    # 0x20d0
 - "⃑": [t: right harpoon above embellishment]   # 0x20d1
 - "⃒": [t: long vertical line overlay embellishment] # 0x20d2
 - "⃓": [t: short vertical line overlay embellishment] # 0x20d3
 - "⃔": [t: anticlockwise arrow above embellishment] # 0x20d4
 - "⃕": [t: clockwise arrow above embellishment] # 0x20d5
 - "⃖": [t: left arrow above embellishment]      # 0x20d6
 - "⃗": [t: right arrow above embellishment]     # 0x20d7
 - "⃘": [t: ring overlay embellishment]          # 0x20d8
 - "⃙": [t: clockwise ring overlay embellishment] # 0x20d9
 - "⃚": [t: anticlockwise ring overlay embellishment] # 0x20da
 - "⃛": [t: three dots above embellishment]      # 0x20db
 - "⃜": [t: four dots above embellishment]       # 0x20dc
 - "⃝": [t: enclosing circle embellishment]      # 0x20dd
 - "⃞": [t: enclosing square embellishment]      # 0x20de
 - "⃟": [t: enclosing diamond embellishment]     # 0x20df
 - "⃠": [t: enclosing circle backslash embellishment] # 0x20e0
 - "⃡": [t: left right arrow above embellishment] # 0x20e1
 - "⃢": [t: enclosing screen embellishment]      # 0x20e2
 - "⃣": [t: enclosing keycap embellishment]      # 0x20e3
 - "⃤": [t: enclosing upward pointing triangle embellishment] # 0x20e4
 - "⃥": [t: reverse solidus overlay embellishment] # 0x20e5
 - "⃦": [t: double verticle stroke embellishment] # 0x20e6
 - "⃧": [t: annuity symbol embellishment]        # 0x20e7
 - "⃨": [t: triple underdot embellishment]       # 0x20e8
 - "⃩": [t: wide bridge above embellishment]     # 0x20e9
 - "⃪": [t: leftwards arrow overlay embellishment] # 0x20ea
 - "⃫": [t: long double solidus overlay embellishment] # 0x20eb
 - "⃬": [t: rightwards harpoon with barb downwards embellishment] # 0x20ec
 - "⃭": [t: leftwards harpoon with barb downwards embellishment] # 0x20ed
 - "⃮": [t: left arrow below embellishment]      # 0x20ee
 - "⃯": [t: right arrow below embellishment]     # 0x20ef
 - "⃰": [t: astersik above embellishment]        # 0x20f0
 - "ℂ":                                          # 0x2102
     - t: double-struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: C
 - "℃": [t: degrees celsius]                     # 0x2103
 - "℄": [t: center line symbol]                  # 0x2104
 - "℅": [t: care of]                             # 0x2105
 - "℆": [t: cada una]                            # 0x2106
 - "ℇ": [t: "euler's constant"]                  # 0x2107
 - "℈": [t: scruples]                            # 0x2108
 - "℉": [t: degrees fahrenheit]                  # 0x2109
 - "ℊ": [t: script g]                            # 0x210a
 - "ℋ":                                          # 0x210b
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: h
 - "ℌ":                                          # 0x210c
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: h
 - "ℍ":                                          # 0x210d
     - t: double-struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: h
 - "ℎ": [t: planck constant]                     # 0x210e
 - "ℏ":                                          # 0x210f
     - test: 
         if: "($Verbosity!='Terse')"
         then: {t: h bar}
     - test: 
         if: "($Verbosity!='Terse')"
         then: {t: reduced planck constant}
 - "ℐ":                                          # 0x2110
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: i
 - "ℑ":                                          # 0x2111
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: i
 - "ℒ":                                          # 0x2112
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: l
 - "ℓ": [t: script l]                            # 0x2113
 - "℔": [t: pounds]                              # 0x2114
 - "ℕ":                                          # 0x2115
     - t: double-struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: n
 - "№": [t: number]                              # 0x2116
 - "℘":                                          # 0x2118
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: p
 - "ℙ":                                          # 0x2119
     - t: double-struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: p
 - "ℚ":                                          # 0x211a
     - t: double-struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: q
 - "ℛ":                                          # 0x211b
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: r
 - "ℜ":                                          # 0x211c
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: r
 - "ℝ":                                          # 0x211d
     - t: double-struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: r
 - "ℤ":                                          # 0x2124
     - t: double-struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: z
 - "℥": [t: ounces]                              # 0x2125
 - "Ω": [t: ohms]                                # 0x2126
 - "℧": [t: mhos]                                # 0x2127
 - "ℨ":                                          # 0x2128
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: z
 - "℩": [t: turned iota]                         # 0x2129
 - "K": [t: kelvin]                              # 0x212a
 - "Å": [t: angstroms]                           # 0x212b
 - "ℬ":                                          # 0x212c
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: b
 - "ℭ":                                          # 0x212d
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: c
 - "ℯ": [t: script e]                            # 0x212f
 - "ℰ":                                          # 0x2130
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: e
 - "ℱ":                                          # 0x2131
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: f
 - "Ⅎ":                                          # 0x2132
     - t: turned
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: f
 - "ℳ":                                          # 0x2133
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: m
 - "ℴ": [t: script o]                             # 0x2134
 - "ℵ": [t: first transfinite cardinal]           # 0x2135
 - "ℶ": [t: second transfinite cardinal]          # 0x2136
 - "ℷ": [t: third transfinite cardinal]           # 0x2137
 - "ℸ": [t: fourth transfinite cardinal]          # 0x2138
 - "℺":                                          # 0x213a
     - t: rotated
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: q
 - "ℼ": [t: double struck pi]                    # 0x213c
 - "ℽ": [t: double struck gamma]                 # 0x213d
 - "ℾ":                                          # 0x213e
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: gamma
 - "ℿ":                                          # 0x213f
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: pi
 - "⅀": [t: double struck n-ary summation]       # 0x2140
 - "⅁":                                          # 0x2141
     - t: turned sans-serif
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: G
 - "⅂":                                          # 0x2142
     - t: turned sans-serif
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: L
 - "⅃":                                          # 0x2143
     - t: reversed sans-serif
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: L
 - "⅄":                                          # 0x2144
     - t: turned sans-serif
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: Y
 - "ⅅ":                                          # 0x2145
     - t: double-struck italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: D
 - "ⅆ": [t: double-struck italic D]              # 0x2146
 - "ⅇ": [t: double-struck italic E]              # 0x2147
 - "ⅈ": [t: double-struck italic I]              # 0x2148
 - "ⅉ": [t: double-struck italic J]              # 0x2149
 - "⅋": [t: turned ampersand]                    # 0x214b
 - "⅌": [t: per]                                 # 0x214c
 - "ⅎ": [t: turned F]                            # 0x214e
 - "⅐": [t: one seventh]                         # 0x2150
 - "⅑": [t: one ninth]                           # 0x2151
 - "⅒": [t: one tenth]                           # 0x2152
 - "⅓": [t: one third]                           # 0x2153
 - "⅔": [t: two thirds]                          # 0x2154
 - "⅕": [t: one fifth]                           # 0x2155
 - "⅖": [t: two fifths]                          # 0x2156
 - "⅗": [t: three fifths]                        # 0x2157
 - "⅘": [t: four fifths]                         # 0x2158
 - "⅙": [t: one sixth]                           # 0x2159
 - "⅚": [t: five sixths]                         # 0x215a
 - "⅛": [t: one eighth]                          # 0x215b
 - "⅜": [t: three eighths]                       # 0x215c
 - "⅝": [t: five eighths]                        # 0x215d
 - "⅞": [t: seven eighths]                       # 0x215e
 - "⅟": [t: one over]                            # 0x215f
 - "Ⅰ": [t: I]                                   # 0x2160
 - "Ⅱ": [t: I I]                                 # 0x2161
 - "Ⅲ": [t: I I I]                               # 0x2162
 - "Ⅳ": [t: I V]                                 # 0x2163
 - "Ⅴ": [t: V]                                   # 0x2164
 - "Ⅵ": [t: V I]                                 # 0x2165
 - "Ⅶ": [t: V I I]                               # 0x2166
 - "Ⅷ": [t: V I I I]                             # 0x2167
 - "Ⅸ": [t: I X]                                 # 0x2168
 - "Ⅹ": [t: X]                                   # 0x2169
 - "Ⅺ": [t: X I]                                 # 0x216a
 - "Ⅻ": [t: X I I]                               # 0x216b
 - "Ⅼ": [t: L]                                   # 0x216c
 - "Ⅽ": [t: C]                                   # 0x216d
 - "Ⅾ": [t: D]                                   # 0x216e
 - "Ⅿ": [t: M]                                   # 0x216f
 - "ⅰ": [t: I]                                   # 0x2170
 - "ⅱ": [t: I I]                                 # 0x2171
 - "ⅲ": [t: I I I]                               # 0x2172
 - "ⅳ": [t: I V]                                 # 0x2173
 - "ⅴ": [t: V]                                   # 0x2174
 - "ⅵ": [t: V I]                                 # 0x2175
 - "ⅶ": [t: V I I]                               # 0x2176
 - "ⅷ": [t: V I I I]                             # 0x2177
 - "ⅸ": [t: I X]                                 # 0x2178
 - "ⅹ": [t: X]                                   # 0x2179
 - "ⅺ": [t: X I]                                 # 0x217a
 - "ⅻ": [t: X I I]                               # 0x217b
 - "ⅼ": [t: L]                                   # 0x217c
 - "ⅽ": [t: C]                                   # 0x217d
 - "ⅾ": [t: D]                                   # 0x217e
 - "ⅿ": [t: M]                                   # 0x217f
 - "↉": [t: zero thirds]                         # 0x2189
 - "←": [t: leftwards arrow]                     # 0x2190
 - "↑": [t: upwards arrow]                       # 0x2191
 - "→": [t: rightwards arrow]                    # 0x2192
 - "↓": [t: downwards arrow]                     # 0x2193
 - "↔": [t: left right arrow]                    # 0x2194
 - "↕": [t: up down arrow]                       # 0x2195
 - "↖": [t: north west arrow]                    # 0x2196
 - "↗": [t: north east arrow]                    # 0x2197
 - "↘": [t: south east arrow]                    # 0x2198
 - "↙": [t: south west arrow]                    # 0x2199
 - "↚": [t: leftwards arrow with stroke]         # 0x219a
 - "↛": [t: rightwards arrow with stroke]        # 0x219b
 - "↜": [t: leftwards wave arrow]                # 0x219c
 - "↝": [t: rightwards wave arrow]               # 0x219d
 - "↞": [t: leftwards two headed arrow]          # 0x219e
 - "↟": [t: upwards two headed arrow]            # 0x219f
 - "↠": [t: rightwards two headed arrow]         # 0x21a0
 - "↡": [t: downwards two headed arrow]          # 0x21a1
 - "↢": [t: leftwards arrow with tail]           # 0x21a2
 - "↣": [t: rightwards arrow with tail]          # 0x21a3
 - "↤": [t: leftwards arrow from bar]            # 0x21a4
 - "↥": [t: upwards arrow from bar]              # 0x21a5
 - "↦": [t: rightwards arrow from bar]           # 0x21a6
 - "↧": [t: downwards arrow from bar]            # 0x21a7
 - "↨": [t: up down arrow with base]             # 0x21a8
 - "↩": [t: leftwards arrow with hook]           # 0x21a9
 - "↪": [t: rightwards arrow with hook]          # 0x21aa
 - "↫": [t: leftwards arrow with loop]           # 0x21ab
 - "↬": [t: rightwards arrow with loop]          # 0x21ac
 - "↭": [t: left right wave arrow]               # 0x21ad
 - "↮": [t: left right arrow with stroke]        # 0x21ae
 - "↯": [t: downwards zigzag arrow]              # 0x21af
 - "↰": [t: upwards arrow with tip leftwards]    # 0x21b0
 - "↱": [t: upwards arrow with tip rightwards]   # 0x21b1
 - "↲": [t: downwards arrow with tip leftwards]  # 0x21b2
 - "↳": [t: downwards arrow with tip rightwards] # 0x21b3
 - "↴": [t: rightwards arrow with corner downwards] # 0x21b4
 - "↵": [t: downwards arrow with corner leftwards] # 0x21b5
 - "↶": [t: anticlockwise top semicircle arrow]  # 0x21b6
 - "↷": [t: clockwise top semicircle arrow]      # 0x21b7
 - "↸": [t: north west arrow to long bar]        # 0x21b8
 - "↹": [t: leftwards arrow to bar over rightwards arrow to bar] # 0x21b9
 - "↺": [t: anticlockwise open circle arrow]     # 0x21ba
 - "↻": [t: clockwise open circle arrow]         # 0x21bb
 - "↼": [t: left harpoon up]                     # 0x21bc
 - "↽": [t: left harpoon down]                   # 0x21bd
 - "↾": [t: up harpoon right]                    # 0x21be
 - "↿": [t: up harpoon left]                     # 0x21bf
 - "⇀": [t: right harpoon up]                    # 0x21c0
 - "⇁": [t: right harpoon down]                  # 0x21c1
 - "⇂": [t: down harpoon right]                  # 0x21c2
 - "⇃": [t: down harpoon left]                   # 0x21c3
 - "⇄": [t: rightwards arrow over leftwards arrow] # 0x21c4
 - "⇅": [t: upwards arrow leftwards of downwards arrow] # 0x21c5
 - "⇆": [t: leftwards arrow over rightwards arrow] # 0x21c6
 - "⇇": [t: leftwards paired arrows]             # 0x21c7
 - "⇈": [t: upwards paired arrows]               # 0x21c8
 - "⇉": [t: rightwards paired arrows]            # 0x21c9
 - "⇊": [t: downwards paired arrows]             # 0x21ca
 - "⇋": [t: left harpoon over right harpoon]     # 0x21cb
 - "⇌": [t: right harpoon over left harpoon]     # 0x21cc
 - "⇍": [t: leftwards double arrow with stroke]  # 0x21cd
 - "⇎": [t: left right double arrow with stroke] # 0x21ce
 - "⇏": [t: rightwards double arrow with stroke] # 0x21cf
 - "⇐": [t: leftwards double arrow]              # 0x21d0
 - "⇑": [t: upwards double arrow]                # 0x21d1
 - "⇒": [t: rightwards double arrow]             # 0x21d2
 - "⇓": [t: downwards double arrow]              # 0x21d3
 - "⇔": [t: left right double arrow]             # 0x21d4
 - "⇕": [t: up down double arrow]                # 0x21d5
 - "⇖": [t: north west double arrow]             # 0x21d6
 - "⇗": [t: north east double arrow]             # 0x21d7
 - "⇘": [t: south east double arrow]             # 0x21d8
 - "⇙": [t: south west double arrow]             # 0x21d9
 - "⇚": [t: leftwards triple arrow]              # 0x21da
 - "⇛": [t: rightwards triple arrow]             # 0x21db
 - "⇜": [t: leftwards squiggle arrow]            # 0x21dc
 - "⇝": [t: rightwards squiggle arrow]           # 0x21dd
 - "⇞": [t: upwards arrow with double stroke]    # 0x21de
 - "⇟": [t: downwards arrow with double stroke]  # 0x21df
 - "⇠": [t: leftwards dashed arrow]              # 0x21e0
 - "⇡": [t: upwards dashed arrow]                # 0x21e1
 - "⇢": [t: rightwards dashed arrow]             # 0x21e2
 - "⇣": [t: downwards dashed arrow]              # 0x21e3
 - "⇤": [t: leftwards arrow to bar]              # 0x21e4
 - "⇥": [t: rightwards arrow to bar]             # 0x21e5
 - "⇦": [t: leftwards white arrow]               # 0x21e6
 - "⇧": [t: upwards white arrow]                 # 0x21e7
 - "⇨": [t: rightwards white arrow]              # 0x21e8
 - "⇩": [t: downwards white arrow]               # 0x21e9
 - "⇪": [t: upwards white arrow from bar]        # 0x21ea
 - "⇫": [t: upwards white arrow on pedestal]     # 0x21eb
 - "⇬": [t: upwards white arrow on pedestal with horizontal bar] # 0x21ec
 - "⇭": [t: upwards white arrow on pedestal with vertical bar] # 0x21ed
 - "⇮": [t: upwards white double arrow]          # 0x21ee
 - "⇯": [t: upwards white double arrow on pedestal] # 0x21ef
 - "⇰": [t: rightwards white arrow from wall]    # 0x21f0
 - "⇱": [t: north west arrow to corner]          # 0x21f1
 - "⇲": [t: south east arrow to corner]          # 0x21f2
 - "⇳": [t: up down white arrow]                 # 0x21f3
 - "⇴": [t: right arrow with small circle]       # 0x21f4
 - "⇵": [t: downwards arrow leftwards of upwards arrow] # 0x21f5
 - "⇶": [t: three rightwards arrows]             # 0x21f6
 - "⇷": [t: leftwards arrow with vertical stroke] # 0x21f7
 - "⇸": [t: rightwards arrow with vertical stroke] # 0x21f8
 - "⇹": [t: left right arrow with vertical stroke] # 0x21f9
 - "⇺": [t: leftwards arrow with double vertical stroke] # 0x21fa
 - "⇻": [t: rightwards arrow with double vertical stroke] # 0x21fb
 - "⇼": [t: left right arrow with double vertical stroke] # 0x21fc
 - "⇽": [t: leftwards open headed arrow]         # 0x21fd
 - "⇾": [t: rightwards open headed arrow]        # 0x21fe
 - "⇿": [t: left right open headed arrow]        # 0x21ff
 - "∀": [t: for all]                             # 0x2200
 - "∁":                                          # 0x2201
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: the}
     - t: complement of
 - "∂":                                          # 0x2202
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: partial}
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: the partial derivative of}
 - "∃": [t: there exists]                        # 0x2203
 - "∄": [t: there does not exist]                # 0x2204
 - "∅": [t: empty set]                           # 0x2205
 - "∆":                                          # 0x2206
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: the}
     - t: laplacion of
 - "∇":                                          # 0x2207
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: the}
     - t: gradient of
 - "∈":                                          # 0x2208
     - test:
        if: "$SpeechStyle != 'ClearSpeak'"
        then: [t: an element of]
        # Several options for speaking elements in ClearSpeak -- they split between being inside a set or not and then the option
        else_test:
            if: "IsBracketed(../.., '{', '}') or IsBracketed(../../.., '{', '}')" # inside a set
            then_test:
              - if: $ClearSpeak_SetMemberSymbol = 'Auto' or $ClearSpeak_SetMemberSymbol = 'In'
                then: [t: in]
              - else_if: $ClearSpeak_SetMemberSymbol = 'Member'
                then: [t: member of]
              - else_if: $ClearSpeak_SetMemberSymbol = 'Element'
                then: [t: element of]
              - else: [t: belonging to]             # $ClearSpeak_SetMemberSymbol = 'Belongs'
            else_test:
              - if: $ClearSpeak_SetMemberSymbol = 'Auto' or $ClearSpeak_SetMemberSymbol = 'Member'
                then: [t: is a member of]
              - else_if: $ClearSpeak_SetMemberSymbol = 'Element'
                then: [t: is an element of]
              - else_if: $ClearSpeak_SetMemberSymbol = 'In'
                then: [t: is in]
              - else: [t: belongs to]              # $ClearSpeak_SetMemberSymbol = 'Belongs'
 - "∉":                                          # 0x2209
    # rule is identical to 0x2208
     - test:
        if: "$SpeechStyle != 'ClearSpeak'"
        then: [t: is not an element of]
        # Several options for speaking elements in ClearSpeak -- they split between being inside a set or not and then the option
        else_test:
            if: "IsBracketed(../.., '{', '}') or IsBracketed(../../.., '{', '}')" # inside a set
            then_test:
              - if: $ClearSpeak_SetMemberSymbol = 'Auto' or $ClearSpeak_SetMemberSymbol = 'In'
                then: [t: not in]
              - else_if: $ClearSpeak_SetMemberSymbol = 'Member'
                then: [t: not member of]
              - else_if: $ClearSpeak_SetMemberSymbol = 'Element'
                then: [t: not element of]
              - else: [t: not belonging to]             # $ClearSpeak_SetMemberSymbol = 'Belongs'
            else_test:
              - if: $ClearSpeak_SetMemberSymbol = 'Auto' or $ClearSpeak_SetMemberSymbol = 'Member'
                then: [t: is not a member of]
              - else_if: $ClearSpeak_SetMemberSymbol = 'Element'
                then: [t: is not an element of]
              - else_if: $ClearSpeak_SetMemberSymbol = 'In'
                then: [t: is not in]
              - else: [t: does not belong to]              # $ClearSpeak_SetMemberSymbol = 'Belongs'
 - "∊":                                          # 0x220a
     - test:
        if: "$SpeechStyle != 'ClearSpeak'"
        then: [t: is an element of]
        # Several options for speaking elements in ClearSpeak -- they split between being inside a set or not and then the option
        else_test:
            if: "IsBracketed(../.., '{', '}') or IsBracketed(../../.., '{', '}')" # inside a set
            then_test:
              - if: $ClearSpeak_SetMemberSymbol = 'Auto' or $ClearSpeak_SetMemberSymbol = 'In'
                then: [t: in]
              - else_if: $ClearSpeak_SetMemberSymbol = 'Member'
                then: [t: member of]
              - else_if: $ClearSpeak_SetMemberSymbol = 'Element'
                then: [t: element of]
              - else: [t: belonging to]             # $ClearSpeak_SetMemberSymbol = 'Belongs'
            else_test:
              - if: $ClearSpeak_SetMemberSymbol = 'Auto' or $ClearSpeak_SetMemberSymbol = 'Member'
                then: [t: is a member of]
              - else_if: $ClearSpeak_SetMemberSymbol = 'Element'
                then: [t: is an element of]
              - else_if: $ClearSpeak_SetMemberSymbol = 'In'
                then: [t: is in]
              - else: [t: belongs to]              # $ClearSpeak_SetMemberSymbol = 'Belongs'
 - "∋": [t: contains the member]                 # 0x220b
 - "∌": [t: does not contain the member]         # 0x220c
 - "∍": [t: contains the member]                 # 0x220d
 - "∎": [t: end of proof]                        # 0x220e
 - "∏": [t: product]                             # 0x220f
 - "∐": [t: coproduct]                           # 0x2210
 - "∑": [t: sum]                                 # 0x2211
 - "−": [t: minus]                               # 0x2212
 - "∓": [t: minus or plus]                       # 0x2213
 - "∔": [t: dot plus]                            # 0x2214
 - "∕": [t: divided by]                          # 0x2215
 - "∖": [t: set minus]                           # 0x2216
 - "∗": [t: times]                               # 0x2217
 - "∘": [t: composed with]                       # 0x2218
 - "∙": [t: times]                               # 0x2219
 - "√":                                          # 0x221a
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: the}
     - t: square root of
 - "∛":                                          # 0x221b
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: the}
     - t: cube root of
 - "∜":                                          # 0x221c
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: the}
     - t: fourth root of
 - "∝":                                          # 0x221d
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: proportional to
 - "∞": [t: "infinity"]                          # 0x221e
 - "∟": [t: right angle]                         # 0x221f
 - "∠": [t: angle]                               # 0x2220
 - "∡": [t: measured angle]                      # 0x2221
 - "∢": [t: spherical angle]                     # 0x2222
 - "∣": [t: divides]                              # 0x2223
 - "∤": [t: does not divide]                      # 0x2224
 - "∥":                                           # 0x2225
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is parallel to}
 - "∦":                                           # 0x2226
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: not parallel to
 - "∧": [t: and]                                 # 0x2227
 - "∨": [t: or]                                  # 0x2228
 - "∩": [t: intersection]                        # 0x2229
 - "∪": [t: union]                               # 0x222a
 - "∫": [t: integral]                            # 0x222b
 - "∬": [t: double integral]                     # 0x222c
 - "∭": [t: triple integral]                     # 0x222d
 - "∮": [t: contour integral]                    # 0x222e
 - "∯": [t: surface integral]                    # 0x222f
 - "∰": [t: volume integral]                     # 0x2230
 - "∱": [t: clockwise integral]                  # 0x2231
 - "∲": [t: clockwise contour integral]          # 0x2232
 - "∳": [t: anticlockwise contour integral]      # 0x2233
 - "∴": [t: therefore]                           # 0x2234
 - "∵": [t: because]                             # 0x2235
 - "∶":                                          # 0x2236
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: to
 - "∷": [t: as]                                  # 0x2237
 - "∸": [t: dot minus]                           # 0x2238
 - "∹": [t: has excess compared to]              # 0x2239
 - "∺":                                          # 0x223a
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is geometrically proportinal to}
 - "∻":                                          # 0x223b
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is homothetic to}
 - "∼": [t: varies with]                         # 0x223c
 - "∽": [t: reversed tilde]                      # 0x223d
 - "∾":                                          # 0x223e
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: most positive
 - "∿": [t: sine wave]                           # 0x223f
 - "≀": [t: wreath product]                      # 0x2240
 - "≁": [t: not tilde]                           # 0x2241
 - "≂": [t: minus tilde]                         # 0x2242
 - "≃":                                          # 0x2243
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is asymptotically equal to}
 - "≄":                                          # 0x2244
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: not asymptotically equal to
 - "≅":                                          # 0x2245
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is approximately equal to}
 - "≆":                                          # 0x2246
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: approximately but not actually equal to
 - "≇":                                          # 0x2247
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: neither approximately nor actually equal to
 - "≈":                                          # 0x2248
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is almost equal to}
 - "≉":                                          # 0x2249
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: not almost equal to
 - "≊":                                          # 0x224a
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is almost equal or equal to}
 - "≋": [t: triple tilde]                        # 0x224b
 - "≌": [t: are all equal to]                    # 0x224c
 - "≍":                                          # 0x224d
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is equivalent to}
 - "≎":                                          # 0x224e
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is geometrically equivalent to}
 - "≏":                                          # 0x224f
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: the}
     - t: difference between
 - "≐": [t: approaches the limit]                # 0x2250
 - "≑":                                          # 0x2251
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is geometrically equal to}
 - "≒":                                          # 0x2252
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is approximately equal to or the image of}
 - "≓":                                          # 0x2253
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is the image of or approximately equal to}
 - "≔": [t: colon equals]                        # 0x2254
 - "≕": [t: equals colon]                        # 0x2255
 - "≖": [t: ring in equal to]                    # 0x2256
 - "≗":                                          # 0x2257
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is approximately equal to}
 - "≘": [t: corresponds to]                      # 0x2258
 - "≙": [t: estimates]                           # 0x2259
 - "≚":                                          # 0x225a
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is equiangular to}
 - "≛": [t: star equals]                         # 0x225b
 - "≜": [t: delta equals]                        # 0x225c
 - "≝": [t: is defined to be]                    # 0x225d
 - "≞":                                          # 0x225e
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is measured by}
 - "≟": [t: has an unknown relationship with]    # 0x225f
 - "≠":                                          # 0x2260
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: not equal to
 - "≡":                                          # 0x2261
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is identical to}
 - "≢":                                          # 0x2262
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: not identical to
 - "≣":                                          # 0x2263
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is strictly equivalent to}
 - "≤":                                          # 0x2264
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is less than or equal to}
 - "≥":                                          # 0x2265
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is greater than or equal to}
 - "≦": [t: less than over equal to]             # 0x2266
 - "≧": [t: greater than over equal to]          # 0x2267
 - "≨":                                          # 0x2268
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is less than but not equal to}
 - "≩":                                          # 0x2269
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is greater than but not equal to}
 - "≪":                                          # 0x226a
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is much less than}
 - "≫":                                          # 0x226b
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is much greater than}
 - "≬":                                          # 0x226c
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is between}
 - "≭":                                          # 0x226d
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: not equivalent to
 - "≮":                                          # 0x226e
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: not less than
 - "≯":                                          # 0x226f
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: not greater than
 - "≰":                                          # 0x2270
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: neither less than nor equal to
 - "≱":                                          # 0x2271
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: neither greater than nor equal to
 - "≲":                                          # 0x2272
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is less than or equivalent to}
 - "≳":                                          # 0x2273
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is greater than or equivalent to}
 - "≴":                                          # 0x2274
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: neither less than nor equivalent to
 - "≵":                                          # 0x2275
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: neither greater than nor equivalent to
 - "≶":                                          # 0x2276
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is less than or greater than}
 - "≷":                                          # 0x2277
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is greater than or less than}
 - "≸":                                          # 0x2278
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: neither less than nor greater than
 - "≹":                                          # 0x2279
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: neither greater than nor less than
 - "≺": [t: precedes]                            # 0x227a
 - "≻": [t: succeeds]                            # 0x227b
 - "≼": [t: precedes or is equal to]             # 0x227c
 - "≽": [t: succeeds or is equal to]             # 0x227d
 - "≾": [t: precedes or is equivalent to]        # 0x227e
 - "≿": [t: succeeds or is equivalent to]        # 0x227f
 - "⊀": [t: does not precede]                    # 0x2280
 - "⊁": [t: does not succeed]                    # 0x2281
 - "⊂":                                          # 0x2282
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is a subset of}
 - "⊃":                                          # 0x2283
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is asuperset of}
 - "⊄":                                          # 0x2284
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: not a subset of
 - "⊅":                                          # 0x2285
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: not a superset of
 - "⊆":                                          # 0x2286
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is a subset of or equal to}
 - "⊇":                                          # 0x2287
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is a superset of or equal to}
 - "⊈":                                          # 0x2288
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: neither a subset of nor equal to
 - "⊉":                                          # 0x2289
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: neither a superset of nor equal to
 - "⊊": [t: subset of with not equal to]         # 0x228a
 - "⊋": [t: superset of with not equal to]       # 0x228b
 - "⊌": [t: multiset]                            # 0x228c
 - "⊍": [t: multiset multiplication]             # 0x228d
 - "⊎": [t: multiset union]                      # 0x228e
 - "⊏": [t: square image of]                     # 0x228f
 - "⊐": [t: square original of]                  # 0x2290
 - "⊑": [t: square image of or equal to]         # 0x2291
 - "⊒": [t: square original of or equal to]      # 0x2292
 - "⊓": [t: square cap]                          # 0x2293
 - "⊔": [t: square cup]                          # 0x2294
 - "⊕": [t: circled plus]                        # 0x2295
 - "⊖": [t: circled minus]                       # 0x2296
 - "⊗": [t: circled times]                       # 0x2297
 - "⊘": [t: circled slash]                       # 0x2298
 - "⊙": [t: circled dot operator]                # 0x2299
 - "⊚": [t: circled ring]                        # 0x229a
 - "⊛": [t: circled asterisk]                    # 0x229b
 - "⊜": [t: circled equals]                      # 0x229c
 - "⊝": [t: circled dash]                        # 0x229d
 - "⊞": [t: squared plus]                        # 0x229e
 - "⊟": [t: squared minus]                       # 0x229f
 - "⊠": [t: squared times]                       # 0x22a0
 - "⊡": [t: squared dot operator]                # 0x22a1
 - "⊢": [t: proves]                              # 0x22a2
 - "⊣": [t: does not yield]                      # 0x22a3
 - "⊤": [t: top]                                 # 0x22a4
 - "⊥":                                          # 0x22a5
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is bottom}
 - "⊦": [t: reduces to]                          # 0x22a6
 - "⊧": [t: models]                              # 0x22a7
 - "⊨":                                          # 0x22a8
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: "true"
 - "⊩": [t: forces]                              # 0x22a9
 - "⊪": [t: triple vertical bar right turnstile] # 0x22aa
 - "⊫": [t: double vertical bar double right turnstile] # 0x22ab
 - "⊬": [t: does not prove]                      # 0x22ac
 - "⊭":                                          # 0x22ad
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: not true
 - "⊮": [t: does not force]                      # 0x22ae
 - "⊯": [t: negated double vertical bar double right turnstile] # 0x22af
 - "⊰": [t: precedes under relation]             # 0x22b0
 - "⊱": [t: succeeds under relation]             # 0x22b1
 - "⊲":                                          # 0x22b2
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: a normal subgroup of
 - "⊳": [t: contains as a normal subgroup]       # 0x22b3
 - "⊴":                                          # 0x22b4
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: a normal subgroup of or equal to
 - "⊵": [t: contains as a normal subgroup or equal to] # 0x22b5
 - "⊶":                                          # 0x22b6
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: the original of
 - "⊷":                                          # 0x22b7
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: an image of
 - "⊸": [t: multimap]                            # 0x22b8
 - "⊹": [t: hermitian conjugate matrix]          # 0x22b9
 - "⊺": [t: intercalate]                         # 0x22ba
 - "⊻": [t: xor]                                 # 0x22bb
 - "⊼": [t: nand]                                # 0x22bc
 - "⊽": [t: nor]                                 # 0x22bd
 - "⊾": [t: right angle with arc]                # 0x22be
 - "⊿": [t: right triangle]                      # 0x22bf
 - "⋀": [t: logical and]                         # 0x22c0
 - "⋁": [t: logical or]                          # 0x22c1
 - "⋂": [t: intersection]                        # 0x22c2
 - "⋃": [t: union]                               # 0x22c3
 - "⋄": [t: diamond operator]                    # 0x22c4
 - "⋅": [t: times]                               # 0x22c5
 - "⋆": [t: times]                               # 0x22c6
 - "⋇": [t: division times]                      # 0x22c7
 - "⋈": [t: bowtie]                              # 0x22c8
 - "⋉":                                          # 0x22c9
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: the left normal factor semidirect product of
 - "⋊":                                          # 0x22ca
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: the right normal factor semidirect product of
 - "⋋":                                          # 0x22cb
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: the left semidirect product of
 - "⋌":                                          # 0x22cc
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: the right semidirect product of
 - "⋍": [t: reversed tilde equals]               # 0x22cd
 - "⋎": [t: curly logical or]                    # 0x22ce
 - "⋏": [t: curly logical and]                   # 0x22cf
 - "⋐":                                          # 0x22d0
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: a double subset of
 - "⋑":                                          # 0x22d1
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: a double superset of
 - "⋒":                                          # 0x22d2
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: the}
     - t: double intersection of
 - "⋓":                                          # 0x22d3
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: the}
     - t: double union of
 - "⋔":                                          # 0x22d4
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: the}
     - t: proper intersection of
 - "⋕":                                          # 0x22d5
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: equal to and parallel to
 - "⋖": [t: less than with dot]                  # 0x22d6
 - "⋗": [t: greater than with dot]               # 0x22d7
 - "⋘":                                          # 0x22d8
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: very much less than
 - "⋙":                                          # 0x22d9
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: very much greater than
 - "⋚":                                          # 0x22da
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: less than equal to or greater than
 - "⋛":                                          # 0x22db
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: greater than equal to or less than
 - "⋜":                                          # 0x22dc
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: equal to or less than
 - "⋝":                                          # 0x22dd
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: equal to or greater than
 - "⋞":                                          # 0x22de
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: equal to or precedes
 - "⋟":                                          # 0x22df
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: equal to or succeeds
 - "⋠": [t: does not precede nor is equal to]    # 0x22e0
 - "⋡": [t: does not succeed nor is equal to]    # 0x22e1
 - "⋢": [t: not square image of or equal to]     # 0x22e2
 - "⋣": [t: not square original of or equal to]  # 0x22e3
 - "⋤": [t: square image of or not equal to]     # 0x22e4
 - "⋥": [t: square original of or not equal to]  # 0x22e5
 - "⋦":                                          # 0x22e6
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: less than but not equivalent to
 - "⋧":                                          # 0x22e7
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: greater than but not equivalent to
 - "⋨": [t: precedes but is not equivalent to]   # 0x22e8
 - "⋩": [t: succeeds but is not equivalent to]   # 0x22e9
 - "⋪":                                          # 0x22ea
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: not a normal subgroup of
 - "⋫": [t: does not contain as a normal subgroup] # 0x22eb
 - "⋬":                                          # 0x22ec
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: not a normal subgroup of nor is equal to
 - "⋭": [t: does not contain as a normal subgroup nor is equal to] # 0x22ed
 - "⋮": [t: vertical ellipsis]                   # 0x22ee
 - "⋯": [t: dot dot dot]                         # 0x22ef
 - "⋰": [t: upwards diagonal ellipsis]           # 0x22f0
 - "⋱": [t: diagonal ellipsis]                   # 0x22f1
 - "⋲": [t: element of with long horizontal stroke] # 0x22f2
 - "⋳": [t: element of with vertical bar at end of horizontal stroke] # 0x22f3
 - "⋴": [t: element of with vertical bar at end of horizontal stroke] # 0x22f4
 - "⋵": [t: element of with dot above]           # 0x22f5
 - "⋶": [t: element of with overbar]             # 0x22f6
 - "⋷": [t: element of with overbar]             # 0x22f7
 - "⋸": [t: element of with underbar]            # 0x22f8
 - "⋹": [t: element of with two horizontal strokes] # 0x22f9
 - "⋺": [t: contains with long horizontal stroke] # 0x22fa
 - "⋻": [t: contains with vertical bar at end of horizontal stroke] # 0x22fb
 - "⋼": [t: contains with vertical bar at end of horizontal stroke] # 0x22fc
 - "⋽": [t: contains with overbar]               # 0x22fd
 - "⋾": [t: contains with overbar]               # 0x22fe
 - "⋿": [t: z notation bag membership]           # 0x22ff
 - "⌀": [t: diameter]                            # 0x2300
 - "⌁": [t: electric arrow]                      # 0x2301
 - "⌂": [t: house]                               # 0x2302
 - "⌃": [t: up arrowhead]                        # 0x2303
 - "⌄": [t: down arrowhead]                      # 0x2304
 - "⌅": [t: projective]                          # 0x2305
 - "⌆": [t: perspective]                         # 0x2306
 - "⌇": [t: wavy line]                           # 0x2307
 - "⌈": [t: left ceiling]                        # 0x2308
 - "⌉": [t: right ceiling]                       # 0x2309
 - "⌊": [t: left floor]                          # 0x230a
 - "⌋": [t: right floor]                         # 0x230b
 - "⌌": [t: bottom right crop]                   # 0x230c
 - "⌍": [t: bottom left crop]                    # 0x230d
 - "⌎": [t: top right crop]                      # 0x230e
 - "⌏": [t: top left crop]                       # 0x230f
 - "⌐": [t: reversed not sign]                   # 0x2310
 - "⌑": [t: square lozenge]                      # 0x2311
 - "⌒": [t: arc]                                 # 0x2312
 - "⌓": [t: segment]                             # 0x2313
 - "⌔": [t: sector]                              # 0x2314
 - "⌕": [t: telephone recorder]                  # 0x2315
 - "⌖": [t: position indicator crosshairs]       # 0x2316
 - "⌗": [t: viewdata square]                     # 0x2317
 - "⌘": [t: place of interest sign]              # 0x2318
 - "⌙": [t: turned not sign]                     # 0x2319
 - "⌚": [t: watch]                               # 0x231a
 - "⌛": [t: hourglass]                           # 0x231b
 - "⌜": [t: top left corner]                     # 0x231c
 - "⌝": [t: top right corner]                    # 0x231d
 - "⌞": [t: bottom left corner]                  # 0x231e
 - "⌟": [t: bottom right corner]                 # 0x231f
 - "⌠": [t: top half integral]                   # 0x2320
 - "⌡": [t: bottom half integral]                # 0x2321
 - "⌢": [t: frown]                               # 0x2322
 - "⌣": [t: smile]                               # 0x2323
 - "⌤": [t: up arrowhead between two horizontal bars] # 0x2324
 - "⌥": [t: option key]                          # 0x2325
 - "⌦": [t: erase to the right]                  # 0x2326
 - "⌧": [t: x in a rectangle box]                # 0x2327
 - "⌨": [t: keyboard]                            # 0x2328
 - "〈": [t: left pointing angle bracket]         # 0x2329
 - "〉": [t: right pointing angle bracket]        # 0x232a
 - "⌫": [t: erase to the left]                   # 0x232b
 - "⌬": [t: benzene ring]                        # 0x232c
 - "⌭": [t: cylindricity]                        # 0x232d
 - "⌮": [t: all around profile]                  # 0x232e
 - "⌯": [t: symmetry]                            # 0x232f
 - "⌰": [t: total runout]                        # 0x2330
 - "⌱": [t: dimension origin]                    # 0x2331
 - "⌲": [t: conical taper]                       # 0x2332
 - "⌳": [t: slope]                               # 0x2333
 - "⌴": [t: counterbore]                         # 0x2334
 - "⌵": [t: countersink]                         # 0x2335
 - "⍰": [t: unknown box]                         # 0x2370
 - "⎕": [t: box]                                 # 0x2395
 - "①": [t: circled one]                         # 0x2460
 - "②": [t: circled two]                         # 0x2461
 - "③": [t: circled three]                       # 0x2462
 - "④": [t: circled four]                        # 0x2463
 - "⑤": [t: circled five]                        # 0x2464
 - "⑥": [t: circled six]                         # 0x2465
 - "⑦": [t: circled seven]                       # 0x2466
 - "⑧": [t: circled eight]                       # 0x2467
 - "⑨": [t: circled nine]                        # 0x2468
 - "⑩": [t: circled ten]                         # 0x2469
 - "⑪": [t: circled eleven]                      # 0x246a
 - "⑫": [t: circled twelve]                      # 0x246b
 - "⑬": [t: circled thirteen]                    # 0x246c
 - "⑭": [t: circled fourteen]                    # 0x246d
 - "⑮": [t: circled fifteen]                     # 0x246e
 - "⑯": [t: circled sixteen]                     # 0x246f
 - "⑰": [t: circled seventeen]                   # 0x2470
 - "⑱": [t: circled eighteen]                    # 0x2471
 - "⑱": [t: circled nineteen]                    # 0x2471
 - "⑳": [t: circled twenty]                      # 0x2473
 - "⑴": [t: parenthesized one]                   # 0x2474
 - "⑵": [t: parenthesized two]                   # 0x2475
 - "⑶": [t: parenthesized three]                 # 0x2476
 - "⑷": [t: parenthesized four]                  # 0x2477
 - "⑸": [t: parenthesized five]                  # 0x2478
 - "⑹": [t: parenthesized six]                   # 0x2479
 - "⑺": [t: parenthesized seven]                 # 0x247a
 - "⑻": [t: parenthesized eight]                 # 0x247b
 - "⑼": [t: parenthesized nine]                  # 0x247c
 - "⑽": [t: parenthesized ten]                   # 0x247d
 - "⑾": [t: parenthesized eleven]                # 0x247e
 - "⑿": [t: parenthesized twelve]                # 0x247f
 - "⒀": [t: parenthesized thirteen]              # 0x2480
 - "⒁": [t: parenthesized fourteen]              # 0x2481
 - "⒂": [t: parenthesized fifteen]               # 0x2482
 - "⒃": [t: parenthesized sixteen]               # 0x2483
 - "⒄": [t: parenthesized seventeen]             # 0x2484
 - "⒅": [t: parenthesized eighteen]              # 0x2485
 - "⒆": [t: parenthesized nineteen]              # 0x2486
 - "⒇": [t: parenthesized twenty]                # 0x2487
 - "⒈": [t: one with period]                     # 0x2488
 - "⒉": [t: two with period]                     # 0x2489
 - "⒊": [t: three with period]                   # 0x248a
 - "⒋": [t: four with period]                    # 0x248b
 - "⒌": [t: five with period]                    # 0x248c
 - "⒍": [t: six with period]                     # 0x248d
 - "⒎": [t: seven with period]                   # 0x248e
 - "⒏": [t: eight with period]                   # 0x248f
 - "⒐": [t: nine with period]                    # 0x2490
 - "⒑": [t: ten with period]                     # 0x2491
 - "⒒": [t: eleven with period]                  # 0x2492
 - "⒓": [t: twelve with period]                  # 0x2493
 - "⒔": [t: thirteen with period]                # 0x2494
 - "⒕": [t: fourteen with period]                # 0x2495
 - "⒖": [t: fifteen with period]                 # 0x2496
 - "⒗": [t: sixteen with period]                 # 0x2497
 - "⒘": [t: seventeen with period]               # 0x2498
 - "⒙": [t: eighteen with period]                # 0x2499
 - "⒚": [t: nineteen with period]                # 0x249a
 - "⒛": [t: twenty with period]                  # 0x249b
 - "⒜": [t: parenthesized a]                     # 0x249c
 - "⒝": [t: parenthesized b]                     # 0x249d
 - "⒞": [t: parenthesized c]                     # 0x249e
 - "⒟": [t: parenthesized d]                     # 0x249f
 - "⒠": [t: parenthesized e]                     # 0x24a0
 - "⒡": [t: parenthesized f]                     # 0x24a1
 - "⒢": [t: parenthesized g]                     # 0x24a2
 - "⒣": [t: parenthesized h]                     # 0x24a3
 - "⒤": [t: parenthesized i]                     # 0x24a4
 - "⒥": [t: parenthesized j]                     # 0x24a5
 - "⒦": [t: parenthesized k]                     # 0x24a6
 - "⒧": [t: parenthesized l]                     # 0x24a7
 - "⒨": [t: parenthesized m]                     # 0x24a8
 - "⒩": [t: parenthesized n]                     # 0x24a9
 - "⒪": [t: parenthesized o]                     # 0x24aa
 - "⒫": [t: parenthesized p]                     # 0x24ab
 - "⒬": [t: parenthesized q]                     # 0x24ac
 - "⒭": [t: parenthesized r]                     # 0x24ad
 - "⒮": [t: parenthesized s]                     # 0x24ae
 - "⒯": [t: parenthesized t]                     # 0x24af
 - "⒰": [t: parenthesized u]                     # 0x24b0
 - "⒱": [t: parenthesized v]                     # 0x24b1
 - "⒲": [t: parenthesized w]                     # 0x24b2
 - "⒳": [t: parenthesized x]                     # 0x24b3
 - "⒴": [t: parenthesized y]                     # 0x24b4
 - "⒵": [t: parenthesized z]                     # 0x24b5
 - "Ⓐ":                                          # 0x24b6
     - t: circled
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: a
 - "Ⓑ":                                          # 0x24b7
     - t: circled
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: b
 - "Ⓒ":                                          # 0x24b8
     - t: circled
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: c
 - "Ⓓ":                                          # 0x24b9
     - t: circled
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: d
 - "Ⓔ":                                          # 0x24ba
     - t: circled
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: e
 - "Ⓕ":                                          # 0x24bb
     - t: circled
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: f
 - "Ⓖ":                                          # 0x24bc
     - t: circled
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: g
 - "Ⓗ":                                          # 0x24bd
     - t: circled
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: h
 - "Ⓘ":                                          # 0x24be
     - t: circled
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: i
 - "Ⓙ":                                          # 0x24bf
     - t: circled
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: j
 - "Ⓚ":                                          # 0x24c0
     - t: circled
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: k
 - "Ⓛ":                                          # 0x24c1
     - t: circled
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: l
 - "Ⓜ":                                          # 0x24c2
     - t: circled
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: m
 - "Ⓝ":                                          # 0x24c3
     - t: circled
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: n
 - "Ⓞ":                                          # 0x24c4
     - t: circled
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: o
 - "Ⓟ":                                          # 0x24c5
     - t: circled
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: p
 - "Ⓠ":                                          # 0x24c6
     - t: circled
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: q
 - "Ⓡ":                                          # 0x24c7
     - t: circled
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: r
 - "Ⓢ":                                          # 0x24c8
     - t: circled
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: s
 - "Ⓣ":                                          # 0x24c9
     - t: circled
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: t
 - "Ⓤ":                                          # 0x24ca
     - t: circled
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: u
 - "Ⓥ":                                          # 0x24cb
     - t: circled
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: v
 - "Ⓦ":                                          # 0x24cc
     - t: circled
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: w
 - "Ⓧ":                                          # 0x24cd
     - t: circled
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: x
 - "Ⓨ":                                          # 0x24ce
     - t: circled
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: y
 - "Ⓩ":                                          # 0x24cf
     - t: circled
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: z
 - "ⓐ": [t: circled a]                           # 0x24d0
 - "ⓑ": [t: circled b]                           # 0x24d1
 - "ⓒ": [t: circled c]                           # 0x24d2
 - "ⓓ": [t: circled d]                           # 0x24d3
 - "ⓔ": [t: circled e]                           # 0x24d4
 - "ⓕ": [t: circled f]                           # 0x24d5
 - "ⓖ": [t: circled g]                           # 0x24d6
 - "ⓗ": [t: circled h]                           # 0x24d7
 - "ⓘ": [t: circled i]                           # 0x24d8
 - "ⓙ": [t: circled j]                           # 0x24d9
 - "ⓚ": [t: circled k]                           # 0x24da
 - "ⓛ": [t: circled l]                           # 0x24db
 - "ⓜ": [t: circled m]                           # 0x24dc
 - "ⓝ": [t: circled n]                           # 0x24dd
 - "ⓞ": [t: circled o]                           # 0x24de
 - "ⓟ": [t: circled p]                           # 0x24df
 - "ⓠ": [t: circled q]                           # 0x24e0
 - "ⓡ": [t: circled r]                           # 0x24e1
 - "ⓢ": [t: circled s]                           # 0x24e2
 - "ⓣ": [t: circled t]                           # 0x24e3
 - "ⓤ": [t: circled u]                           # 0x24e4
 - "ⓥ": [t: circled v]                           # 0x24e5
 - "ⓦ": [t: circled w]                           # 0x24e6
 - "ⓧ": [t: circled x]                           # 0x24e7
 - "ⓨ": [t: circled y]                           # 0x24e8
 - "ⓩ": [t: circled z]                           # 0x24e9
 - "⓪": [t: circled zero]                        # 0x24ea
 - "⓫": [t: black circled eleven]                # 0x24eb
 - "⓬": [t: black circled twelve]                # 0x24ec
 - "⓭": [t: black circled thirteen]              # 0x24ed
 - "⓮": [t: black circled fourteen]              # 0x24ee
 - "⓯": [t: black circled fifteen]               # 0x24ef
 - "⓰": [t: black circled sixteen]               # 0x24f0
 - "⓱": [t: black circled seventeen]             # 0x24f1
 - "⓲": [t: black circled eighteen]              # 0x24f2
 - "⓳": [t: black circled nineteen]              # 0x24f3
 - "⓴": [t: black circled twenty]                # 0x24f4
 - "⓵": [t: double circled one]                  # 0x24f5
 - "⓶": [t: double circled two]                  # 0x24f6
 - "⓷": [t: double circled three]                # 0x24f7
 - "⓸": [t: double circled four]                 # 0x24f8
 - "⓹": [t: double circled five]                 # 0x24f9
 - "⓺": [t: double circled six]                  # 0x24fa
 - "⓻": [t: double circled seven]                # 0x24fb
 - "⓼": [t: double circled eight]                # 0x24fc
 - "⓽": [t: double circled nine]                 # 0x24fd
 - "⓾": [t: double circled ten]                  # 0x24fe
 - "⓿": [t: black circled zero]                  # 0x24ff
 - "■": [t: black square]                        # 0x25a0
 - "□": [t: white square]                        # 0x25a1
 - "▢": [t: white square with rounded corners]   # 0x25a2
 - "▣": [t: white square containing small black square] # 0x25a3
 - "▤": [t: square with horizontal fill]         # 0x25a4
 - "▥": [t: square with verticle fill]           # 0x25a5
 - "▦": [t: square with orthogonal crosshatch fill] # 0x25a6
 - "▧": [t: square with upper left to lower right fill] # 0x25a7
 - "▨": [t: square with upper right to lower left fill] # 0x25a8
 - "▩": [t: square with diagonal crosshatch fill] # 0x25a9
 - "▪": [t: black small square]                  # 0x25aa
 - "▫": [t: white small square]                  # 0x25ab
 - "▬": [t: black rectangle]                     # 0x25ac
 - "▭": [t: white rectangle]                     # 0x25ad
 - "▮": [t: black vertical rectangle]            # 0x25ae
 - "▯": [t: white vertical rectangle]            # 0x25af
 - "▰": [t: black parallelogram]                 # 0x25b0
 - "▱": [t: white parallelogram]                 # 0x25b1
 - "▲": [t: black up pointing triangle]          # 0x25b2
 - "△": [t: white up pointing triangle]          # 0x25b3
 - "▴": [t: black up pointing small triangle]    # 0x25b4
 - "▵": [t: white up pointing small triangle]    # 0x25b5
 - "▶": [t: black right pointing triangle]       # 0x25b6
 - "▷": [t: white right pointing triangle]       # 0x25b7
 - "▸": [t: black right pointing small triangle] # 0x25b8
 - "▹": [t: white right pointing small triangle] # 0x25b9
 - "►": [t: black right pointing pointer]        # 0x25ba
 - "▻": [t: white right pointing pointer]        # 0x25bb
 - "▼": [t: black down pointing triangle]        # 0x25bc
 - "▽": [t: white down pointing triangle]        # 0x25bd
 - "▾": [t: black down pointing small triangle]  # 0x25be
 - "▿": [t: white down pointing small triangle]  # 0x25bf
 - "◀": [t: black left pointing triangle]        # 0x25c0
 - "◁": [t: white left pointing triangle]        # 0x25c1
 - "◂": [t: black left pointing small triangle]  # 0x25c2
 - "◃": [t: white left pointing small triangle]  # 0x25c3
 - "◄": [t: black left pointing pointer]         # 0x25c4
 - "◅": [t: white left pointing pointer]         # 0x25c5
 - "◆": [t: black diamond]                       # 0x25c6
 - "◇": [t: white diamond]                       # 0x25c7
 - "◈": [t: white diamond containing black small diamond] # 0x25c8
 - "◉": [t: fisheye]                             # 0x25c9
 - "◊": [t: lozenge]                             # 0x25ca
 - "○": [t: white circle]                        # 0x25cb
 - "◌": [t: dotted circle]                       # 0x25cc
 - "◍": [t: circle with vertical fill]           # 0x25cd
 - "◎": [t: bullseye]                            # 0x25ce
 - "●": [t: black circle]                        # 0x25cf
 - "◐": [t: circle with left half black]         # 0x25d0
 - "◑": [t: circle with right half black]        # 0x25d1
 - "◒": [t: circle with lower half black]        # 0x25d2
 - "◓": [t: circle with upper half black]        # 0x25d3
 - "◔": [t: circle with upper right quadrant black] # 0x25d4
 - "◕": [t: circle with all but upper left quadrant black] # 0x25d5
 - "◖": [t: left half black circle]              # 0x25d6
 - "◗": [t: right half black circle]             # 0x25d7
 - "◘": [t: inverse bullet]                      # 0x25d8
 - "◙": [t: inverse white circle]                # 0x25d9
 - "◚": [t: upper half inverse white circle]     # 0x25da
 - "◛": [t: lower half inverse white circle]     # 0x25db
 - "◜": [t: upper left quadrant circular arc]    # 0x25dc
 - "◝": [t: upper right quadrant circular arc]   # 0x25dd
 - "◞": [t: lower right quadrant circular arc]   # 0x25de
 - "◟": [t: lower left quadrant circular arc]    # 0x25df
 - "◠": [t: upper half circle]                   # 0x25e0
 - "◡": [t: lower half circle]                   # 0x25e1
 - "◢": [t: black lower right triangle]          # 0x25e2
 - "◣": [t: black lower left triangle]           # 0x25e3
 - "◤": [t: black upper left triangle]           # 0x25e4
 - "◥": [t: black upper right triangle]          # 0x25e5
 - "◦": [t: composition]                         # 0x25e6
 - "◧": [t: square with left half black]         # 0x25e7
 - "◨": [t: square with right half black]        # 0x25e8
 - "◩": [t: square with upper left half black]   # 0x25e9
 - "◪": [t: square with lower right half black]  # 0x25ea
 - "◫": [t: white square with bisecting line]    # 0x25eb
 - "◬": [t: white up pointing triangle with dot] # 0x25ec
 - "◭": [t: up pointing triangle with left half black] # 0x25ed
 - "◮": [t: up pointing triangle with right half black] # 0x25ee
 - "◯": [t: large circle]                        # 0x25ef
 - "◰": [t: white square with upper left quadrant] # 0x25f0
 - "◱": [t: white square with lower left quadrant] # 0x25f1
 - "◲": [t: white square with lower right quadrant] # 0x25f2
 - "◳": [t: white square with upper right quadrant] # 0x25f3
 - "◴": [t: white circle with upper left quadrant] # 0x25f4
 - "◵": [t: white circle with lower left quadrant] # 0x25f5
 - "◶": [t: white circle with lower right quadrant] # 0x25f6
 - "◷": [t: white circle with upper right quadrant] # 0x25f7
 - "◸": [t: upper left triangle]                 # 0x25f8
 - "◹": [t: upper right triangle]                # 0x25f9
 - "◺": [t: lower left triangle]                 # 0x25fa
 - "◻": [t: white medium square]                 # 0x25fb
 - "◼": [t: black medium square]                 # 0x25fc
 - "◽": [t: white medium small square]           # 0x25fd
 - "◾": [t: black medium small square]           # 0x25fe
 - "◿": [t: lower right triangle]                # 0x25ff
 - "♠": [t: black spade suit]                    # 0x2660
 - "♡": [t: white heart suit]                    # 0x2661
 - "♢": [t: white diamond suit]                  # 0x2662
 - "♣": [t: black club suit]                     # 0x2663
 - "♤": [t: white spade suit]                    # 0x2664
 - "♥": [t: black heart suit]                    # 0x2665
 - "♦": [t: black diamond suit]                  # 0x2666
 - "♧": [t: white club suit]                     # 0x2667
 - "❨": [t: medium left parentheses ornament]    # 0x2768
 - "❩": [t: medium right parentheses ornament]   # 0x2769
 - "❪": [t: medium flattened left parentheses ornament] # 0x276a
 - "❫": [t: medium flattened right parentheses ornament] # 0x276b
 - "❬": [t: medium left-pointing angle bracket ornament] # 0x276c
 - "❭": [t: medium right--pointing angle bracked ornament] # 0x276d
 - "❮": [t: heavy left-pointing angle quotation mark ornament] # 0x276e
 - "❯": [t: heavy right-pointing angle quotation mark ornament] # 0x276f
 - "❰": [t: heavy left-pointing angle bracket ornament] # 0x2770
 - "❱": [t: heavy right-pointing angle bracket ornament] # 0x2771
 - "❲": [t: light left tortoise shell bracket ornament] # 0x2772
 - "❳": [t: light right tortoise shell bracket ornament] # 0x2773
 - "❴": [t: medium left brace ornament]          # 0x2774
 - "❵": [t: medium right brace ornament]         # 0x2775
 - "❶": [t: black circled one]                   # 0x2776
 - "❷": [t: black circled two]                   # 0x2777
 - "❸": [t: black circled three]                 # 0x2778
 - "❹": [t: black circled four]                  # 0x2779
 - "❺": [t: black circled five]                  # 0x277a
 - "❻": [t: black circled six]                   # 0x277b
 - "❼": [t: black circled seven]                 # 0x277c
 - "❽": [t: black circled eight]                 # 0x277d
 - "❾": [t: black circled nine]                  # 0x277e
 - "❿": [t: black circled ten]                   # 0x277f
 - "➀": [t: circled sans serif one]              # 0x2780
 - "➁": [t: circled sans serif two]              # 0x2781
 - "➂": [t: circled sans serif three]            # 0x2782
 - "➃": [t: circled sans serif four]             # 0x2783
 - "➄": [t: circled sans serif five]             # 0x2784
 - "➅": [t: circled sans serif six]              # 0x2785
 - "➆": [t: circled sans serif seven]            # 0x2786
 - "➇": [t: circled sans serif eight]            # 0x2787
 - "➈": [t: circled sans serif nine]             # 0x2788
 - "➉": [t: circled sans serif ten]              # 0x2789
 - "➊": [t: black circled sans serif one]        # 0x278a
 - "➋": [t: black circled sans serif two]        # 0x278b
 - "➌": [t: black circled sans serif three]      # 0x278c
 - "➍": [t: black circled sans serif four]       # 0x278d
 - "➎": [t: black circled sans serif five]       # 0x278e
 - "➏": [t: black circled sans serif six]        # 0x278f
 - "➐": [t: black circled sans serif seven]      # 0x2790
 - "➑": [t: black circled sans serif eight]      # 0x2791
 - "➒": [t: black circled sans serif nine]       # 0x2792
 - "➓": [t: black circled sans serif ten]        # 0x2793
 - "➔": [t: heavy wide-headed rightwards arrow]  # 0x2794
 - "➕": [t: heavy plus sign]                     # 0x2795
 - "➖": [t: heavy minus sign]                    # 0x2796
 - "➗": [t: heavy divison sign]                  # 0x2797
 - "➘": [t: heavy south east arrow]              # 0x2798
 - "➙": [t: heavy rightwards arrow]              # 0x2799
 - "➚": [t: heavy north east arrow]              # 0x279a
 - "➛": [t: drafting point rightwards arrow]     # 0x279b
 - "➜": [t: heavy round-tipped rightwards arrow] # 0x279c
 - "➝": [t: triangle-headed rightwards arrow]    # 0x279d
 - "➞": [t: heavy triangle-headed rightwards arrow] # 0x279e
 - "➟": [t: dashed triangle-headed rightwards arrow] # 0x279f
 - "➠": [t: heavy dashed triangle-headed rightwards arrow] # 0x27a0
 - "➡": [t: black rightwards arrow]              # 0x27a1
 - "➢": [t: three d top lighted rightwards arrow] # 0x27a2
 - "➣": [t: three d bottom lighted rightwards arrow] # 0x27a3
 - "➤": [t: black rightwards arrowhead]          # 0x27a4
 - "➥": [t: heavy black curved downwards and rightwards arrow] # 0x27a5
 - "➦": [t: heavy black curved upwards and rightwards arrow] # 0x27a6
 - "➧": [t: squat black rightwards arrow]        # 0x27a7
 - "➨": [t: heavy concave-pointed black rightwards arrow] # 0x27a8
 - "➩": [t: right-shaded white rightwards arrow] # 0x27a9
 - "➪": [t: left-shaded white rightwards arrow]  # 0x27aa
 - "➫": [t: back-tilted shadowed white rightwards arrow] # 0x27ab
 - "➬": [t: front-tilted shadowed white rightwards arrow] # 0x27ac
 - "➭": [t: heavy lower right-shadowed white rightwards arrow] # 0x27ad
 - "➮": [t: heavy upper right-shadowed white rightwards arrow] # 0x27ae
 - "➯": [t: notched lower right-shadowed white rightwards arrow] # 0x27af
 - "➱": [t: notched upper right-shadowed white rightwards arrow] # 0x27b1
 - "➲": [t: circled heavy white rightwards arrow] # 0x27b2
 - "➳": [t: white-feathered rightwards arrow]    # 0x27b3
 - "➴": [t: black-feathered south east arrow]    # 0x27b4
 - "➵": [t: black-feathered rightwards arrow]    # 0x27b5
 - "➶": [t: black-feathered north east arrow]    # 0x27b6
 - "➷": [t: heavy black-feathered south east arrow] # 0x27b7
 - "➸": [t: heavy black-feathered rightwards arrow] # 0x27b8
 - "➹": [t: heavy black-feathered north east arrow] # 0x27b9
 - "➺": [t: teradrop-barbed rightwards arrow]    # 0x27ba
 - "➻": [t: heavy teardrop-shanked rightwards arrow] # 0x27bb
 - "➼": [t: wedge-tailed rightwards arrow]       # 0x27bc
 - "➽": [t: heavy wedge-tailed rightwards arrow] # 0x27bd
 - "➾": [t: open-outlined rightwards arrow]      # 0x27be
 - "⟀": [t: three dimensional angle]             # 0x27c0
 - "⟁": [t: white triangle containing small white triangle] # 0x27c1
 - "⟂":                                          # 0x27c2
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is perpendicular to}
 - "⟃":                                          # 0x27c3
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: an open subset of
 - "⟄":                                          # 0x27c4
     - test: 
         if: "$Verbosity!='Terse'"
         then: {t: is}
     - t: an open superset of
 - "⟅": [t: left s-shaped bag delimiter]         # 0x27c5
 - "⟆": [t: right s-shaped bag delimiter]        # 0x27c6
 - "⟇": [t: or with dot inside]                  # 0x27c7
 - "⟈": [t: reverse solidus preceeding subset]   # 0x27c8
 - "⟉": [t: superset preceeding solidus]         # 0x27c9
 - "⟊": [t: vertical bar with horizontal stroke] # 0x27ca
 - "⟋": [t: mathematical rising diagonal]        # 0x27cb
 - "⟌": [t: long division]                       # 0x27cc
 - "⟍": [t: mathematical falling diagonal]       # 0x27cd
 - "⟎": [t: squared logical and]                 # 0x27ce
 - "⟏": [t: squared logical or]                  # 0x27cf
 - "⟐": [t: white diamond with centered dot]     # 0x27d0
 - "⟑": [t: and with dot]                        # 0x27d1
 - "⟒": [t: element of openning upwards]         # 0x27d2
 - "⟓": [t: lower right corner with dot]         # 0x27d3
 - "⟔": [t: upper left corner with dot]          # 0x27d4
 - "⟕": [t: left outer join]                     # 0x27d5
 - "⟖": [t: right outer join]                    # 0x27d6
 - "⟗": [t: full outer join]                     # 0x27d7
 - "⟘": [t: large up tack]                       # 0x27d8
 - "⟙": [t: large down tack]                     # 0x27d9
 - "⟚": [t: left and right double turnstile]     # 0x27da
 - "⟛": [t: left and right tack]                 # 0x27db
 - "⟜": [t: left multimap]                       # 0x27dc
 - "⟝": [t: long right tack]                     # 0x27dd
 - "⟞": [t: long left tack]                      # 0x27de
 - "⟟": [t: up tack with circle above]           # 0x27df
 - "⟠": [t: lozenge divided by horizontal rule]  # 0x27e0
 - "⟡": [t: white concave sided diamond]         # 0x27e1
 - "⟢": [t: white concave sided diamond with leftwards tick] # 0x27e2
 - "⟣": [t: white concave sided diamond with rightwards tick] # 0x27e3
 - "⟤": [t: white square with leftwards tick]    # 0x27e4
 - "⟥": [t: white square with rightwards tick]   # 0x27e5
 - "⟦": [t: left white square bracket]           # 0x27e6
 - "⟧": [t: right white square bracket]          # 0x27e7
 - "⟨": [t: left angle bracket]                  # 0x27e8
 - "⟩": [t: right angle bracket]                 # 0x27e9
 - "⟪": [t: left double angle bracket]           # 0x27ea
 - "⟫": [t: right double angle bracket]          # 0x27eb
 - "⟬": [t: left white tortoise shell bracket]   # 0x27ec
 - "⟭": [t: right white tortoise shell bracket]  # 0x27ed
 - "⟮": [t: left flattened parenthesis]          # 0x27ee
 - "⟯": [t: right flattened parenthesis]         # 0x27ef
 - "⟰": [t: upwards quadruple arrow]             # 0x27f0
 - "⟱": [t: downwards quadruple arrow]           # 0x27f1
 - "⟲": [t: anticlockwise gapped circle arrow]   # 0x27f2
 - "⟳": [t: clockwise gapped circle arrow]       # 0x27f3
 - "⟴": [t: right arrow with circled plus]       # 0x27f4
 - "⟵": [t: long leftwards arrow]                # 0x27f5
 - "⟶": [t: long rightwards arrow]               # 0x27f6
 - "⟷": [t: long left right arrow]               # 0x27f7
 - "⟸": [t: long leftwards double arrow]         # 0x27f8
 - "⟹": [t: long rightwards double arrow]        # 0x27f9
 - "⟺": [t: long left right double arrow]        # 0x27fa
 - "⟻": [t: long leftwards arrow from bar]       # 0x27fb
 - "⟼": [t: long rightwards arrow from bar]      # 0x27fc
 - "⟽": [t: long leftwards double arrow from bar] # 0x27fd
 - "⟾": [t: long rightwards double arrow from bar] # 0x27fe
 - "⟿": [t: long rightwards squiggle arrow]      # 0x27ff
 - "⤀": [t: rightwards two headed arrow with vertical stroke] # 0x2900
 - "⤁": [t: rightwards two headed arrow with double vertical stroke] # 0x2901
 - "⤂": [t: leftwards double arrow with vertical stroke] # 0x2902
 - "⤃": [t: rightwards double arrow with vertical stroke] # 0x2903
 - "⤄": [t: left right double arrow with vertical stroke] # 0x2904
 - "⤅": [t: rightwards two headed arrow from bar] # 0x2905
 - "⤆": [t: leftwards double arrow from bar]     # 0x2906
 - "⤇": [t: rightwards double arrow from bar]    # 0x2907
 - "⤈": [t: downwards arrow with horizontal stroke] # 0x2908
 - "⤉": [t: upwards arrow with horizontal stroke] # 0x2909
 - "⤊": [t: upwards triple arrow]                # 0x290a
 - "⤋": [t: downwards triple arrow]              # 0x290b
 - "⤌": [t: leftwards double dash arrow]         # 0x290c
 - "⤍": [t: rightwards double dash arrow]        # 0x290d
 - "⤎": [t: leftwards triple dash arrow]         # 0x290e
 - "⤏": [t: rightwards triple dash arrow]        # 0x290f
 - "⤐": [t: rightwards two headed triple dash arrow] # 0x2910
 - "⤑": [t: rightwards arrow with dotted stem]   # 0x2911
 - "⤒": [t: upwards arrow to bar]                # 0x2912
 - "⤓": [t: downwards arrow to bar]              # 0x2913
 - "⤔": [t: rightwards arrow with tail and vertical stroke] # 0x2914
 - "⤕": [t: rightwards arrow with tail and double vertical stroke] # 0x2915
 - "⤖": [t: rightwards two headed arrow with tail] # 0x2916
 - "⤗": [t: rightwards two headed arrow with tail with vertical stroke] # 0x2917
 - "⤘": [t: rightwards two headed arrow with tail with double vertical stroke] # 0x2918
 - "⤙": [t: leftwards arrow tail]                # 0x2919
 - "⤚": [t: rightwards arrow tail]               # 0x291a
 - "⤛": [t: leftwards double arrow tail]         # 0x291b
 - "⤜": [t: rightwards double arrow tail]        # 0x291c
 - "⤝": [t: leftwards arrow to filled diamond]   # 0x291d
 - "⤞": [t: rightwards arrow to filled diamond]  # 0x291e
 - "⤟": [t: leftwards arrow from bar to filled diamond] # 0x291f
 - "⤠": [t: rightwards arrow from bar to filled diamond] # 0x2920
 - "⤡": [t: north west and south east arrow]     # 0x2921
 - "⤢": [t: north east and south west arrow]     # 0x2922
 - "⤣": [t: north west arrow with hook]          # 0x2923
 - "⤤": [t: north east arrow with hook]          # 0x2924
 - "⤥": [t: south east arrow with hook]          # 0x2925
 - "⤦": [t: south west arrow with hook]          # 0x2926
 - "⤧": [t: north west arrow and north east arrow] # 0x2927
 - "⤨": [t: north east arrow and south east arrow] # 0x2928
 - "⤩": [t: south east arrow and south west arrow] # 0x2929
 - "⤪": [t: south west arrow and north west arrow] # 0x292a
 - "⤫": [t: rising diagonal crossing falling diagonal] # 0x292b
 - "⤬": [t: falling diagonal crossing rising diagonal] # 0x292c
 - "⤭": [t: south east arrow crossing north east arrow] # 0x292d
 - "⤮": [t: north east arrow corssing south east arrow] # 0x292e
 - "⤯": [t: falling diagonal crossing north east arrow] # 0x292f
 - "⤰": [t: rising diagonal crossing south east arrow] # 0x2930
 - "⤱": [t: north east arrow corssing north west arrow] # 0x2931
 - "⤲": [t: north west arrow crossing north east arrow] # 0x2932
 - "⤳": [t: wave arrow pointing directly right]  # 0x2933
 - "⤴": [t: arrow pointing rightwards then curving upwards] # 0x2934
 - "⤵": [t: arrow pointing rightwards then curving downwards] # 0x2935
 - "⤶": [t: arrow pointing downwards then curving leftwards] # 0x2936
 - "⤷": [t: arrow pointing downwards then curving rightwards] # 0x2937
 - "⤸": [t: right side arc clockwise arrow]      # 0x2938
 - "⤹": [t: left side arc anticlockwise arrow]   # 0x2939
 - "⤺": [t: top arc anticlockwise arrow]         # 0x293a
 - "⤻": [t: bottom arc anticlockwise arrow]      # 0x293b
 - "⤼": [t: top arc clockwise arrow with minus]  # 0x293c
 - "⤽": [t: top arc anticlockwise arrow with plus] # 0x293d
 - "⤾": [t: lower right semicicrular clockwise arrow] # 0x293e
 - "⤿": [t: lower left semicircular anticlockwise arrow] # 0x293f
 - "⥀": [t: anticlockwise closed circle arrow]   # 0x2940
 - "⥁": [t: clockwise closed circle arrow]       # 0x2941
 - "⥂": [t: rightwards arrow above short leftwards arrow] # 0x2942
 - "⥃": [t: leftwards arrow above short rightwards arrow] # 0x2943
 - "⥄": [t: short rightwards arrow above leftwards arrow] # 0x2944
 - "⥅": [t: rightwards arrow with plus below]    # 0x2945
 - "⥆": [t: leftwards arrow with plus below]     # 0x2946
 - "⥇": [t: rightwards arrow through x]          # 0x2947
 - "⥈": [t: left right arrow through circle]     # 0x2948
 - "⥉": [t: upwards two headed arrow from circle] # 0x2949
 - "⥊": [t: left barb up right barb down harpoon] # 0x294a
 - "⥋": [t: left barb down right barb up harpoon] # 0x294b
 - "⥌": [t: up barb right down barb left harpoon] # 0x294c
 - "⥍": [t: up barb left down barb right harpoon] # 0x294d
 - "⥎": [t: left barb up right barb up harpoon]  # 0x294e
 - "⥏": [t: up barb right down barb right harpoon] # 0x294f
 - "⥐": [t: left barb down right barb down harpoon] # 0x2950
 - "⥑": [t: up barb left down barb left harpoon] # 0x2951
 - "⥒": [t: leftwards harpoon with barb up to bar] # 0x2952
 - "⥓": [t: rightwards harpoon with barb up to bar] # 0x2953
 - "⥔": [t: upwards harpoon with barb right to bar] # 0x2954
 - "⥕": [t: downwards harpoon with barb right to bar] # 0x2955
 - "⥖": [t: leftwards harpoon with barb down to bar] # 0x2956
 - "⥗": [t: rightwards harpoon with barb down to bar] # 0x2957
 - "⥘": [t: upwards harpoon with barb left to bar] # 0x2958
 - "⥙": [t: downwards harpoon with barb left to bar] # 0x2959
 - "⥚": [t: leftwards harpoon with barb up from bar] # 0x295a
 - "⥛": [t: rightwards harpoon with barb up from bar] # 0x295b
 - "⥜": [t: upwards harpoon with barb right from bar] # 0x295c
 - "⥝": [t: downwards harpoon with barb right from bar] # 0x295d
 - "⥞": [t: leftwards harpoon with barb down from bar] # 0x295e
 - "⥟": [t: rightwards harpoon with barb down from bar] # 0x295f
 - "⥠": [t: upwards harpoon with barb left from bar] # 0x2960
 - "⥡": [t: downwards harpoon with barb left from bar] # 0x2961
 - "⥢": [t: leftwards harpoon with barb up above leftwards harpoon with barb down] # 0x2962
 - "⥣": [t: upwards harpoon with barb left beside upwards harpoon with barb right] # 0x2963
 - "⥤": [t: rightwards harpoon with barb up above rightwards harpoon with barb down] # 0x2964
 - "⥥": [t: downwards harpoon with barb left beside downwards harpoon with barb right] # 0x2965
 - "⥦": [t: leftwards harpoon with barb up above rightwards harpoon with barb up] # 0x2966
 - "⥧": [t: leftwards harpoon with barb down above rightwards harpoon with barb down] # 0x2967
 - "⥨": [t: rightwards harpoon with barb up above leftwards harpoon with barb up] # 0x2968
 - "⥩": [t: rightwards harpoon with barb down above leftwards harpoon with barb down] # 0x2969
 - "⥪": [t: leftwards harpoon with barb up above long dash] # 0x296a
 - "⥫": [t: leftwards harpoon with barb down below long dash] # 0x296b
 - "⥬": [t: rightwards harpoon with barb up above long dash] # 0x296c
 - "⥭": [t: rightwards harpoon with barb down below long dash] # 0x296d
 - "⥮": [t: upwards harpoon with barb left beside downwards harpoon with barb right] # 0x296e
 - "⥯": [t: downwards harpoon with barb left beside upwards harpoon with barb right] # 0x296f
 - "⥰": [t: right double arrow with rounded head] # 0x2970
 - "⥱": [t: equals above rightwards arrow]       # 0x2971
 - "⥲": [t: tilde operator above rightwards arrow] # 0x2972
 - "⥳": [t: leftwards arrow above tilde operator] # 0x2973
 - "⥴": [t: rightwards arrow above tilde operator] # 0x2974
 - "⥵": [t: rightwards arrow above almost equal to] # 0x2975
 - "⥶": [t: less than above leftwards arrow]     # 0x2976
 - "⥷": [t: leftwards arrow through less than]   # 0x2977
 - "⥸": [t: greater than above rightwards arrow] # 0x2978
 - "⥹": [t: subset above rightwards arrow]       # 0x2979
 - "⥺": [t: leftwards arrow through subset]      # 0x297a
 - "⥻": [t: superset above leftwards arrow]      # 0x297b
 - "⥼": [t: left fish tail]                      # 0x297c
 - "⥽": [t: right fish tail]                     # 0x297d
 - "⥾": [t: up fish tail]                        # 0x297e
 - "⥿": [t: down fish tail]                      # 0x297f
 - "⦀": [t: triple vertical bar delimiter]       # 0x2980
 - "⦁": [t: z notation spot]                     # 0x2981
 - "⦂": [t: z notation type colon]               # 0x2982
 - "⦃": [t: left white brace]                    # 0x2983
 - "⦄": [t: right white brace]                   # 0x2984
 - "⦅": [t: left white parenthesis]              # 0x2985
 - "⦆": [t: right white parenthesis]             # 0x2986
 - "⦇": [t: z notation left image bracket]       # 0x2987
 - "⦈": [t: z notation right image bracket]      # 0x2988
 - "⦉": [t: z notation left binding bracket]     # 0x2989
 - "⦊": [t: z notation right binding bracket]    # 0x298a
 - "⦋": [t: left square bracket with underbar]   # 0x298b
 - "⦌": [t: right square bracket with underbar]  # 0x298c
 - "⦍": [t: left square bracket with tick in top corner] # 0x298d
 - "⦎": [t: right square bracket with tick in bottom corner] # 0x298e
 - "⦏": [t: left square bracket with tick in bottom corner] # 0x298f
 - "⦐": [t: right square bracket with tick in top corner] # 0x2990
 - "⦑": [t: left angle bracket with dot]         # 0x2991
 - "⦒": [t: right angle bracket with dot]        # 0x2992
 - "⦓": [t: left arc less than bracket]          # 0x2993
 - "⦔": [t: right arc greater than bracket]      # 0x2994
 - "⦕": [t: double left arc greater than bracket] # 0x2995
 - "⦖": [t: double right arc less than bracket]  # 0x2996
 - "⦗": [t: left black tortoise shell bracket]   # 0x2997
 - "⦘": [t: right black tortoise shell bracket]  # 0x2998
 - "⦙": [t: dotted fence]                        # 0x2999
 - "⦚": [t: vertical zigzag line]                # 0x299a
 - "⦛": [t: measured angle opening left]         # 0x299b
 - "⦜": [t: right angle varient with square]     # 0x299c
 - "⦝": [t: measured right angle with dot]       # 0x299d
 - "⦞": [t: angle with s inside]                 # 0x299e
 - "⦟": [t: acute angle]                         # 0x299f
 - "⦠": [t: spehrical angle opening left]        # 0x29a0
 - "⦡": [t: spehrical angle opening up]          # 0x29a1
 - "⦢": [t: turned angle]                        # 0x29a2
 - "⦣": [t: reversed angle]                      # 0x29a3
 - "⦤": [t: angle with underbar]                 # 0x29a4
 - "⦥": [t: reversed angle with underbar]        # 0x29a5
 - "⦦": [t: oblique angle opening up]            # 0x29a6
 - "⦧": [t: oblique angle opening down]          # 0x29a7
 - "⦨": [t: measured angle with open arm ending in arrow pointing up and to the right] # 0x29a8
 - "⦩": [t: measured angle with open arm ending in arrow pointing up and to the left] # 0x29a9
 - "⦪": [t: measured angle with open arm ending in arrow pointing down and to the right] # 0x29aa
 - "⦫": [t: measured angle with open arm ending in arrow pointing down and to the left] # 0x29ab
 - "⦬": [t: measured angle with open arm ending in arrow pointing right and up] # 0x29ac
 - "⦭": [t: measured angle with open arm ending in arrow pointing left and up] # 0x29ad
 - "⦮": [t: measured angle with open arm ending in arrow pointing right and down] # 0x29ae
 - "⦯": [t: measured angle with open arm ending in arrow pointing left and down] # 0x29af
 - "⦰": [t: reversed empty set]                  # 0x29b0
 - "⦱": [t: empty set with overbar]              # 0x29b1
 - "⦲": [t: empty set with small circle above]   # 0x29b2
 - "⦳": [t: empty set with right arrow above]    # 0x29b3
 - "⦴": [t: empty set with left arrow above]     # 0x29b4
 - "⦵": [t: circle with horizontal bar]          # 0x29b5
 - "⦶": [t: circled vertical bar]                # 0x29b6
 - "⦷": [t: circled parallel]                    # 0x29b7
 - "⦸": [t: circled reverse solidus]             # 0x29b8
 - "⦹": [t: circled perpendicular]               # 0x29b9
 - "⦺": [t: circled divided by horizontal bar and top half divided by vertical bar] # 0x29ba
 - "⦻": [t: circle with superimposed x]          # 0x29bb
 - "⦼": [t: circled anticlockwise rotated division sign] # 0x29bc
 - "⦽": [t: up arrow through circle]             # 0x29bd
 - "⦾": [t: circled white bullet]                # 0x29be
 - "⦿": [t: circled bullet]                      # 0x29bf
 - "⧀": [t: circled less than]                   # 0x29c0
 - "⧁": [t: circled greater than]                # 0x29c1
 - "⧂": [t: circle with small circle to the right] # 0x29c2
 - "⧃": [t: circle with two horizontal strokes to the right] # 0x29c3
 - "⧄": [t: squared rising diagonal slash]       # 0x29c4
 - "⧅": [t: squared falling diagonal slash]      # 0x29c5
 - "⧆": [t: squared asterisk]                    # 0x29c6
 - "⧇": [t: squared small circle]                # 0x29c7
 - "⧈": [t: squared square]                      # 0x29c8
 - "⧉": [t: two joined squares]                  # 0x29c9
 - "⧊": [t: triangle with dot above]             # 0x29ca
 - "⧋": [t: triangle with underbar]              # 0x29cb
 - "⧌": [t: s in triangle]                       # 0x29cc
 - "⧍": [t: triangle with serifs at bottom]      # 0x29cd
 - "⧎": [t: right triangle above left triangle]  # 0x29ce
 - "⧏": [t: left triangle beside vertical bar]   # 0x29cf
 - "⧐": [t: vertical bar beside right triangle]  # 0x29d0
 - "⧑": [t: bowtie with left half black]         # 0x29d1
 - "⧒": [t: bowtie with right half black]        # 0x29d2
 - "⧓": [t: black bowtie]                        # 0x29d3
 - "⧔": [t: times with left half black]          # 0x29d4
 - "⧕": [t: times with right half black]         # 0x29d5
 - "⧖": [t: white hourglass]                     # 0x29d6
 - "⧗": [t: black hourglass]                     # 0x29d7
 - "⧘": [t: left wiggly fence]                   # 0x29d8
 - "⧙": [t: right wiggly fence]                  # 0x29d9
 - "⧚": [t: left double wiggly fence]            # 0x29da
 - "⧛": [t: right double wiggly fence]           # 0x29db
 - "⧜": [t: incomplete infinity]                 # 0x29dc
 - "⧝": [t: tie over infinity]                   # 0x29dd
 - "⧞": [t: infinity negated with vertical bar]  # 0x29de
 - "⧟": [t: double-ended multimap]               # 0x29df
 - "⧠": [t: square with contoured outline]       # 0x29e0
 - "⧡": [t: increases as]                        # 0x29e1
 - "⧢": [t: shuffle product]                     # 0x29e2
 - "⧣": [t: equals sign and slanted parallel]    # 0x29e3
 - "⧤": [t: equals sign and slanted parallel with tilde above] # 0x29e4
 - "⧥": [t: identical to and slanted parallel]   # 0x29e5
 - "⧦": [t: gleich stark]                        # 0x29e6
 - "⧧": [t: thermydynamic]                       # 0x29e7
 - "⧨": [t: down pointing triangle with left half black] # 0x29e8
 - "⧩": [t: down pointing triangle with right half black] # 0x29e9
 - "⧪": [t: black diamond with down arrow]       # 0x29ea
 - "⧫": [t: black lozenge]                       # 0x29eb
 - "⧬": [t: white circle with down arrow]        # 0x29ec
 - "⧭": [t: black circle with down arrow]        # 0x29ed
 - "⧮": [t: error-barred white square]           # 0x29ee
 - "⧯": [t: error-barred black square]           # 0x29ef
 - "⧰": [t: error-barred white diamond]          # 0x29f0
 - "⧱": [t: error-barred black diamond]          # 0x29f1
 - "⧲": [t: error-barred white circle]           # 0x29f2
 - "⧳": [t: error-barred black circle]           # 0x29f3
 - "⧴": [t: rule-delayed]                        # 0x29f4
 - "⧵": [t: reverse solidus operator]            # 0x29f5
 - "⧶": [t: solidus with overbar]                # 0x29f6
 - "⧷": [t: reverse solidus with horizontal stroke] # 0x29f7
 - "⧸": [t: big solidus]                         # 0x29f8
 - "⧹": [t: big reverse solidus]                 # 0x29f9
 - "⧺": [t: double plus]                         # 0x29fa
 - "⧻": [t: triple plus]                         # 0x29fb
 - "⧼": [t: left pointing curved angle bracket]  # 0x29fc
 - "⧽": [t: right pointing curved angle bracket] # 0x29fd
 - "⧾": [t: tiny]                                # 0x29fe
 - "⧿": [t: miny]                                # 0x29ff
 - "⨀": [t: circled dot operator]                # 0x2a00
 - "⨁": [t: circled plus operator]               # 0x2a01
 - "⨂": [t: circled times operator]              # 0x2a02
 - "⨃": [t: union operator with dot]             # 0x2a03
 - "⨄": [t: union operator with plus]            # 0x2a04
 - "⨅": [t: square intersection operator]        # 0x2a05
 - "⨆": [t: square union operator]               # 0x2a06
 - "⨇": [t: two logical and operator]            # 0x2a07
 - "⨈": [t: two logical or operator]             # 0x2a08
 - "⨉": [t: times operator]                      # 0x2a09
 - "⨊": [t: modulo two sum]                      # 0x2a0a
 - "⨋": [t: summation with integral]             # 0x2a0b
 - "⨌": [t: quadruple integral operator]         # 0x2a0c
 - "⨍": [t: finite part integral]                # 0x2a0d
 - "⨎": [t: integral with double stroke]         # 0x2a0e
 - "⨏": [t: integral average with slash]         # 0x2a0f
 - "⨐": [t: circulation function]                # 0x2a10
 - "⨑": [t: anticlockwise integration]           # 0x2a11
 - "⨒": [t: line integration with rectangular path around pole] # 0x2a12
 - "⨓": [t: line integration with semicircular path around pole] # 0x2a13
 - "⨔": [t: line integration not including the pole] # 0x2a14
 - "⨕": [t: integral around a point operator]    # 0x2a15
 - "⨖": [t: quaternion integral operator]        # 0x2a16
 - "⨗": [t: integral with leftwards arrow with hook] # 0x2a17
 - "⨘": [t: integral with times sign]            # 0x2a18
 - "⨙": [t: integral with intersection]          # 0x2a19
 - "⨚": [t: integral with union]                 # 0x2a1a
 - "⨛": [t: integral with overbar]               # 0x2a1b
 - "⨜": [t: integral with underbar]              # 0x2a1c
 - "⨝": [t: join]                                # 0x2a1d
 - "⨞": [t: large left triangle operator]        # 0x2a1e
 - "⨟": [t: z notation schema composition]       # 0x2a1f
 - "⨠": [t: z notation schema piping]            # 0x2a20
 - "⨡": [t: z notation schema projection]        # 0x2a21
 - "⨢": [t: plus sign with circle above]         # 0x2a22
 - "⨣": [t: plus sign with circumflex accent above] # 0x2a23
 - "⨤": [t: plus sign with tilde above]          # 0x2a24
 - "⨥": [t: plus sign with dot below]            # 0x2a25
 - "⨦": [t: plus sign with tilde below]          # 0x2a26
 - "⨧": [t: plus sign with subscript two]        # 0x2a27
 - "⨨": [t: plus sign with black triangle]       # 0x2a28
 - "⨩": [t: minus sign with comma above]         # 0x2a29
 - "⨪": [t: minus sign with dot below]           # 0x2a2a
 - "⨫": [t: minus sign with falling dots]        # 0x2a2b
 - "⨬": [t: minus sign with rising dots]         # 0x2a2c
 - "⨭": [t: plus sign in left half circle]       # 0x2a2d
 - "⨮": [t: plus sign in right half circle]      # 0x2a2e
 - "⨯": [t: vector or cross product]             # 0x2a2f
 - "⨰": [t: multiplication sign with dot above]  # 0x2a30
 - "⨱": [t: multiplication sign with underbar]   # 0x2a31
 - "⨲": [t: semidirect product with bottom closed] # 0x2a32
 - "⨳": [t: smash product]                       # 0x2a33
 - "⨴": [t: multiplication sign in left half circle] # 0x2a34
 - "⨵": [t: multiplication sign in right half circle] # 0x2a35
 - "⨶": [t: circled multiplication sign with circumflex accent] # 0x2a36
 - "⨷": [t: multiplication sign in double circle] # 0x2a37
 - "⨸": [t: circled division sign]               # 0x2a38
 - "⨹": [t: plus sign in triangle]               # 0x2a39
 - "⨺": [t: minus sign in triangle]              # 0x2a3a
 - "⨻": [t: multiplication sign in triangle]     # 0x2a3b
 - "⨼": [t: interior product]                    # 0x2a3c
 - "⨽": [t: righthand interior product]          # 0x2a3d
 - "⨮": [t: z notation relational composition]   # 0x2a2e
 - "⨿": [t: amalgamation or coproduct]           # 0x2a3f
 - "⩀": [t: intersection with dot]               # 0x2a40
 - "⩁": [t: union with minus sign]               # 0x2a41
 - "⩂": [t: union with overbar]                  # 0x2a42
 - "⩃": [t: intersection with overbar]           # 0x2a43
 - "⩄": [t: intersection with logical and]       # 0x2a44
 - "⩅": [t: union with logical or]               # 0x2a45
 - "⩆": [t: union above intersection]            # 0x2a46
 - "⩇": [t: intersection above union]            # 0x2a47
 - "⩈": [t: union above bar above intersection]  # 0x2a48
 - "⩉": [t: intersection above bar above union]  # 0x2a49
 - "⩊": [t: union beside and joined with union]  # 0x2a4a
 - "⩋": [t: intersection beside and joined with intersection] # 0x2a4b
 - "⩌": [t: closed union with serifs]            # 0x2a4c
 - "⩍": [t: closed intersection with serifs]     # 0x2a4d
 - "⩎": [t: double square intersection]          # 0x2a4e
 - "⩏": [t: double square union]                 # 0x2a4f
 - "⩐": [t: closed union with serifs and smash product] # 0x2a50
 - "⩑": [t: logical and with dot above]          # 0x2a51
 - "⩒": [t: logical or with dot above]           # 0x2a52
 - "⩓": [t: double logical and]                  # 0x2a53
 - "⩔": [t: double logical or]                   # 0x2a54
 - "⩕": [t: two intersecting logical and]        # 0x2a55
 - "⩖": [t: two intersecting logical or]         # 0x2a56
 - "⩗": [t: sloping large or]                    # 0x2a57
 - "⩘": [t: sloping large and]                   # 0x2a58
 - "⩙": [t: logical or overlapping logical and]  # 0x2a59
 - "⩚": [t: logical and with middle stem]        # 0x2a5a
 - "⩛": [t: logical or with middle stem]         # 0x2a5b
 - "⩜": [t: logical and with horizontal dash]    # 0x2a5c
 - "⩝": [t: logical or with horizontal dash]     # 0x2a5d
 - "⩞": [t: logical and with double overbar]     # 0x2a5e
 - "⩟": [t: logical and with underbar]           # 0x2a5f
 - "⩠": [t: logical and with double underbar]    # 0x2a60
 - "⩡": [t: small vee with underbar]             # 0x2a61
 - "⩢": [t: logical or with double overbar]      # 0x2a62
 - "⩣": [t: logical or with double underbar]     # 0x2a63
 - "⩤": [t: z notation domain antirestriction]   # 0x2a64
 - "⩥": [t: z notation range antirestriction]    # 0x2a65
 - "⩦": [t: equals sign with dot below]          # 0x2a66
 - "⩧": [t: identical with dot above]            # 0x2a67
 - "⩨": [t: triple horizontal bar with double vertical stroke] # 0x2a68
 - "⩩": [t: triple horizontal bar with triple vertical stroke] # 0x2a69
 - "⩪": [t: tilde operator with dot above]       # 0x2a6a
 - "⩫": [t: tilde operator with rising dots]     # 0x2a6b
 - "⩬": [t: similar minus similar]               # 0x2a6c
 - "⩭": [t: congruent with dot above]            # 0x2a6d
 - "⩮": [t: equals with asterisk]                # 0x2a6e
 - "⩯": [t: almost equal to with circumflex accent] # 0x2a6f
 - "⩰": [t: approximately equal to or equal to]  # 0x2a70
 - "⩱": [t: equals sign above plus sign]         # 0x2a71
 - "⩲": [t: plus sign above equals sign]         # 0x2a72
 - "⩳": [t: equals sign above tilde operator]    # 0x2a73
 - "⩴": [t: double colon equal]                  # 0x2a74
 - "⩵": [t: two consecutive equals signs]        # 0x2a75
 - "⩶": [t: three consecutive equals signs]      # 0x2a76
 - "⩷": [t: equals sign with two dots above and two dots below] # 0x2a77
 - "⩸": [t: equivalent with four dots above]     # 0x2a78
 - "⩹": [t: less than with circle inside]        # 0x2a79
 - "⩺": [t: greater than with circle inside]     # 0x2a7a
 - "⩻": [t: less than with question mark above]  # 0x2a7b
 - "⩼": [t: greater than with question mark above] # 0x2a7c
 - "⩽": [t: less than or slanted equal to]       # 0x2a7d
 - "⩾": [t: greater than or slanted equal to]    # 0x2a7e
 - "⩿": [t: less than or slanted equal to with dot inside] # 0x2a7f
 - "⪀": [t: greater than or slanted equal to with dot inside] # 0x2a80
 - "⪁": [t: less than or slanted equal to with dot above] # 0x2a81
 - "⪂": [t: greater than or slanted equal to with dot above] # 0x2a82
 - "⪃": [t: less than or slanted equal to with dot above right] # 0x2a83
 - "⪄": [t: greater than or slanted equal to with dot above left] # 0x2a84
 - "⪅": [t: less than or approximate]            # 0x2a85
 - "⪆": [t: greater than or approximate]         # 0x2a86
 - "⪇": [t: less than and single line not equal to] # 0x2a87
 - "⪈": [t: greater than and single line not equal to] # 0x2a88
 - "⪉": [t: less than and not approximate]       # 0x2a89
 - "⪊": [t: greater than and not approximate]    # 0x2a8a
 - "⪋": [t: less than above double line equal above greater than] # 0x2a8b
 - "⪌": [t: greater than above double line equal above less than] # 0x2a8c
 - "⪍": [t: less than above similar or equal]    # 0x2a8d
 - "⪎": [t: greater than above similar or equal] # 0x2a8e
 - "⪏": [t: less than above similar above greater than] # 0x2a8f
 - "⪐": [t: greater than above similar above less than] # 0x2a90
 - "⪑": [t: less than above greater than above double line equal] # 0x2a91
 - "⪒": [t: greater than above less than above double line equal] # 0x2a92
 - "⪓": [t: less than above slanted equal above greater than above slanted equal] # 0x2a93
 - "⪔": [t: greater than above slanted equal above less than above slanted equal] # 0x2a94
 - "⪕": [t: slanted equal to or less than]       # 0x2a95
 - "⪖": [t: slanted equal to or greater than]    # 0x2a96
 - "⪗": [t: slanted equal to or less than with dot inside] # 0x2a97
 - "⪘": [t: slanted equal to or greater than with dot inside] # 0x2a98
 - "⪙": [t: double line equal to or less than]   # 0x2a99
 - "⪚": [t: double line equal to or greater than] # 0x2a9a
 - "⪛": [t: double line slanted equal to or less than] # 0x2a9b
 - "⪜": [t: double line slanted equal to or greater than] # 0x2a9c
 - "⪝": [t: similar or less than]                # 0x2a9d
 - "⪞": [t: similar or greater than]             # 0x2a9e
 - "⪟": [t: similar above less than above equals sign] # 0x2a9f
 - "⪠": [t: similar above greater than above equals sign] # 0x2aa0
 - "⪡": [t: double nested less than]             # 0x2aa1
 - "⪢": [t: double nested greater than]          # 0x2aa2
 - "⪣": [t: double nested less than with underbar] # 0x2aa3
 - "⪤": [t: greater than overlapping less than]  # 0x2aa4
 - "⪥": [t: greater than beside less than]       # 0x2aa5
 - "⪦": [t: less than closed by curve]           # 0x2aa6
 - "⪧": [t: greater than closed by curve]        # 0x2aa7
 - "⪨": [t: less than closed by curve above slanted equal] # 0x2aa8
 - "⪩": [t: greater than closed by curve above slanted equal] # 0x2aa9
 - "⪪": [t: smaller than]                        # 0x2aaa
 - "⪫": [t: larger than]                         # 0x2aab
 - "⪬": [t: smaller than or equal to]            # 0x2aac
 - "⪭": [t: larger than or equal to]             # 0x2aad
 - "⪮": [t: equals sign with bumpy above]        # 0x2aae
 - "⪯": [t: precedes above single line equals sign] # 0x2aaf
 - "⪰": [t: succeeds above single line equals sign] # 0x2ab0
 - "⪱": [t: prededes above single line not equal to] # 0x2ab1
 - "⪲": [t: succeeds above single line not equal to] # 0x2ab2
 - "⪳": [t: precedes above equals sign]          # 0x2ab3
 - "⪴": [t: succeeds above equals sign]          # 0x2ab4
 - "⪵": [t: prededes above not equal to]         # 0x2ab5
 - "⪶": [t: succeeds above not equal to]         # 0x2ab6
 - "⪷": [t: prededes above almost equal to]      # 0x2ab7
 - "⪸": [t: succeeds above almost equal to]      # 0x2ab8
 - "⪹": [t: precedes above not almost equal to]  # 0x2ab9
 - "⪺": [t: succeeds above not almost equal to]  # 0x2aba
 - "⪻": [t: double precedes]                     # 0x2abb
 - "⪼": [t: double succeeds]                     # 0x2abc
 - "⪽": [t: subset with dot]                     # 0x2abd
 - "⪾": [t: superset with dot]                   # 0x2abe
 - "⪿": [t: subset with plus sign below]         # 0x2abf
 - "⫀": [t: superset with plus sign below]       # 0x2ac0
 - "⫁": [t: subset with multiplication sign below] # 0x2ac1
 - "⫂": [t: superset with multiplication sign below] # 0x2ac2
 - "⫃": [t: subset of or equal to with dot above] # 0x2ac3
 - "⫄": [t: superset of or equal to with dot above] # 0x2ac4
 - "⫅": [t: subset of above equals sign]         # 0x2ac5
 - "⫆": [t: superset of above equals sign]       # 0x2ac6
 - "⫇": [t: subset of above tilde operator]      # 0x2ac7
 - "⫈": [t: superset of above tilde operator]    # 0x2ac8
 - "⫉": [t: subset of above almost equal to]     # 0x2ac9
 - "⫊": [t: superset of above almost equal to]   # 0x2aca
 - "⫋": [t: subset above not equal to]           # 0x2acb
 - "⫌": [t: superset of above not equal to]      # 0x2acc
 - "⫍": [t: square left open box operator]       # 0x2acd
 - "⫎": [t: square right open box operator]      # 0x2ace
 - "⫏": [t: closed subset]                       # 0x2acf
 - "⫐": [t: closed superset]                     # 0x2ad0
 - "⫑": [t: closed subset or equal to]           # 0x2ad1
 - "⫒": [t: closed superset or equal to]         # 0x2ad2
 - "⫓": [t: subset above superset]               # 0x2ad3
 - "⫔": [t: superset above subset]               # 0x2ad4
 - "⫕": [t: subset above subset]                 # 0x2ad5
 - "⫖": [t: superset above superset]             # 0x2ad6
 - "⫗": [t: superset beside subset]              # 0x2ad7
 - "⫘": [t: superset beside and joined by dash with subset] # 0x2ad8
 - "⫙": [t: element of opening downwards]        # 0x2ad9
 - "⫚": [t: pitchfork with tee top]              # 0x2ada
 - "⫛": [t: transversal intersection]            # 0x2adb
 - "⫝̸": [t: forking]                             # 0x2adc
 - "⫝": [t: nonforking]                          # 0x2add
 - "⫞": [t: shrot left tack]                     # 0x2ade
 - "⫟": [t: short down tack]                     # 0x2adf
 - "⫠": [t: short up tack]                       # 0x2ae0
 - "⫡": [t: perpendicular with s]                # 0x2ae1
 - "⫢": [t: vertical bar triple right turnstile] # 0x2ae2
 - "⫣": [t: double vertical bar left turnstile]  # 0x2ae3
 - "⫤": [t: vertical bar double left turnstile]  # 0x2ae4
 - "⫥": [t: double vertical bar double left turnstile] # 0x2ae5
 - "⫦": [t: long dash from left member of double vertical] # 0x2ae6
 - "⫧": [t: short down tack with overbar]        # 0x2ae7
 - "⫨": [t: short up tack with underbar]         # 0x2ae8
 - "⫩": [t: short up tack above short down tack] # 0x2ae9
 - "⫪": [t: double down tack]                    # 0x2aea
 - "⫫": [t: double up tack]                      # 0x2aeb
 - "⫬": [t: double stroke not sign]              # 0x2aec
 - "⫭": [t: reversed double stroke not sign]     # 0x2aed
 - "⫮": [t: does not divide with reversed negation slash] # 0x2aee
 - "⫯": [t: vertical line with circle above]     # 0x2aef
 - "⫰": [t: vertical line with circle below]     # 0x2af0
 - "⫱": [t: down tack with circle below]         # 0x2af1
 - "⫲": [t: parallel with horizontal stroke]     # 0x2af2
 - "⫳": [t: parallel with tilde operator]        # 0x2af3
 - "⫴": [t: triple vertical bar binary relation] # 0x2af4
 - "⫵": [t: triple vertical bar with horizontal stroke] # 0x2af5
 - "⫶": [t: triple colon operator]               # 0x2af6
 - "⫷": [t: triple nested less than]             # 0x2af7
 - "⫸": [t: triple nested greater than]          # 0x2af8
 - "⫹": [t: double line slanted less than or equal to] # 0x2af9
 - "⫺": [t: double line slanted greater than or equal to] # 0x2afa
 - "⫻": [t: triple solidus binary relation]      # 0x2afb
 - "⫼": [t: large triple vertical bar operator]  # 0x2afc
 - "⫽": [t: double solidus operator]             # 0x2afd
 - "⫾": [t: white vertical bar]                  # 0x2afe
 - "⫿": [t: white vertical bar]                  # 0x2aff
 - "⬀": [t: north east white arrow]              # 0x2b00
 - "⬁": [t: north west white arrow]              # 0x2b01
 - "⬂": [t: south east white arrow]              # 0x2b02
 - "⬃": [t: south west white arrow]              # 0x2b03
 - "⬄": [t: left right white arrow]              # 0x2b04
 - "⬅": [t: leftwards black arrow]               # 0x2b05
 - "⬆": [t: upwards black arrow]                 # 0x2b06
 - "⬇": [t: downwards black arrow]               # 0x2b07
 - "⬈": [t: north east black arrow]              # 0x2b08
 - "⬉": [t: north west black arrow]              # 0x2b09
 - "⬊": [t: south east black arrow]              # 0x2b0a
 - "⬋": [t: south west black arrow]              # 0x2b0b
 - "⬌": [t: left right black arrow]              # 0x2b0c
 - "⬍": [t: up down black arrow]                 # 0x2b0d
 - "⬎": [t: rightwards arrow with tip downwards] # 0x2b0e
 - "⬏": [t: rightwards arrow with tip upwards]   # 0x2b0f
 - "⬐": [t: leftwards arrow with tip downwards]  # 0x2b10
 - "⬑": [t: leftwards arrow with tip upwards]    # 0x2b11
 - "⬒": [t: square with top half black]          # 0x2b12
 - "⬓": [t: square with bottom half black]       # 0x2b13
 - "⬔": [t: square with upper right diagonal half black] # 0x2b14
 - "⬕": [t: square with lower left diagonal half black] # 0x2b15
 - "⬖": [t: diamond with left half black]        # 0x2b16
 - "⬗": [t: diamond with right half black]       # 0x2b17
 - "⬘": [t: diamond with top half black]         # 0x2b18
 - "⬙": [t: diamond with bottom half black]      # 0x2b19
 - "⬚": [t: box]                                 # 0x2b1a
 - "⬛": [t: black large square]                  # 0x2b1b
 - "⬜": [t: white large square]                  # 0x2b1c
 - "⬝": [t: black very small square]             # 0x2b1d
 - "⬞": [t: white very small square]             # 0x2b1e
 - "⬟": [t: black pentagon]                      # 0x2b1f
 - "⬠": [t: white pentagon]                      # 0x2b20
 - "⬡": [t: white hexagon]                       # 0x2b21
 - "⬢": [t: black hexagon]                       # 0x2b22
 - "⬣": [t: horizontal black hexagon]            # 0x2b23
 - "⬤": [t: black large circle]                  # 0x2b24
 - "⬥": [t: black medium diamond]                # 0x2b25
 - "⬦": [t: white medium diamond]                # 0x2b26
 - "⬧": [t: black medium lozenge]                # 0x2b27
 - "⬨": [t: white medium lozenge]                # 0x2b28
 - "⬩": [t: black small diamond]                 # 0x2b29
 - "⬪": [t: black small lozenge]                 # 0x2b2a
 - "⬫": [t: white small lozenge]                 # 0x2b2b
 - "⬬": [t: black horizontal ellipse]            # 0x2b2c
 - "⬭": [t: white horizontal ellipse]            # 0x2b2d
 - "⬮": [t: black vertical ellipse]              # 0x2b2e
 - "⬯": [t: white vertical ellipse]              # 0x2b2f
 - "⬰": [t: left arrow with small circle]        # 0x2b30
 - "⬱": [t: three leftwards arrows]              # 0x2b31
 - "⬲": [t: left arrow with circled plus]        # 0x2b32
 - "⬳": [t: long leftwards squiggle arrow]       # 0x2b33
 - "⬴": [t: leftwards two headed arrow with vertical stroke] # 0x2b34
 - "⬵": [t: lettwards two headed arrow with double vertical stroke] # 0x2b35
 - "⬶": [t: leftwards two headed arrow from bar] # 0x2b36
 - "⬷": [t: leftwards two headed triple dash arrow] # 0x2b37
 - "⬸": [t: leftwards arrow with dotted stem]    # 0x2b38
 - "⬹": [t: leftwards arrow with tail with vertical stroke] # 0x2b39
 - "⬺": [t: leftwards arrow with tail with double vertical stroke] # 0x2b3a
 - "⬻": [t: leftwards two headed arrow with tail] # 0x2b3b
 - "⬼": [t: leftwards two headed arrow with tail with vertical stroke] # 0x2b3c
 - "⬽": [t: leftwards two headed arrow with tail with double vertical stroke] # 0x2b3d
 - "⬾": [t: leftwards arrow through x]           # 0x2b3e
 - "⬿": [t: wave arrow pointing directly left]   # 0x2b3f
 - "⭀": [t: equals sign above leftwards arrow]   # 0x2b40
 - "⭁": [t: reverse tilde operator above leftwards arrow] # 0x2b41
 - "⭂": [t: leftwards arrow above reverse almost equal to] # 0x2b42
 - "⭃": [t: rightwards arrow through greater than] # 0x2b43
 - "⭄": [t: rightwards arrow through superret]   # 0x2b44
 - "⭅": [t: leftwards quadurple arrow]           # 0x2b45
 - "⭆": [t: rightwards quadruple arrow]          # 0x2b46
 - "⭇": [t: reverse tilde operator above rightwards arrow] # 0x2b47
 - "⭈": [t: rightwards arrow above rerverse almost equal to] # 0x2b48
 - "⭉": [t: tilde operator above leftwards arrow] # 0x2b49
 - "⭊": [t: leftwards arrow above almost equal to] # 0x2b4a
 - "⭋": [t: leftwards arrow above reverse tilde operator] # 0x2b4b
 - "⭌": [t: rightwards arrow above reverse tilde operator] # 0x2b4c
 - "⭐": [t: white medium star]                   # 0x2b50
 - "⭑": [t: black small star]                    # 0x2b51
 - "⭒": [t: white small star]                    # 0x2b52
 - "⭓": [t: black right pointing pentagon]       # 0x2b53
 - "⭔": [t: white right pointing pentagon]       # 0x2b54
 - "⭕": [t: heavy large circle]                  # 0x2b55
 - "⭖": [t: heavy oval with oval inside]         # 0x2b56
 - "⭗": [t: heavy circle with circle inside]     # 0x2b57
 - "⭘": [t: heavy circle]                        # 0x2b58
 - "⭙": [t: heavy circled saltire]               # 0x2b59
 - "⸀": [t: right angle substitution marker]     # 0x2e00
 - "⸁": [t: right angle dotted substitution marker] # 0x2e01
 - "⸂": [t: left substitution bracket]           # 0x2e02
 - "⸃": [t: right substitution bracket]          # 0x2e03
 - "⸄": [t: left dotted substitution bracket]    # 0x2e04
 - "⸅": [t: right dotted substitution bracket]   # 0x2e05
 - "⸆": [t: raised interpolation marker]         # 0x2e06
 - "⸇": [t: raised dotted interpolation marker]  # 0x2e07
 - "⸈": [t: dotted transposition marker marker]  # 0x2e08
 - "⸉": [t: left transposition bracket]          # 0x2e09
 - "⸊": [t: right transposition bracket]         # 0x2e0a
 - "⸋": [t: raised square]                       # 0x2e0b
 - "⸌": [t: left raised omission bracket]        # 0x2e0c
 - "⸍": [t: right raised omission bracket]       # 0x2e0d
 - "⸎": [t: editorial coronis]                   # 0x2e0e
 - "⸏": [t: paragraphos]                         # 0x2e0f
 - "⸐": [t: forked paragraphos]                  # 0x2e10
 - "⸑": [t: reversed forked paragraphos]         # 0x2e11
 - "⸒": [t: hypodiastole]                        # 0x2e12
 - "⸓": [t: dotted obelos]                       # 0x2e13
 - "⸔": [t: downwards ancora]                    # 0x2e14
 - "⸕": [t: upwards ancora]                      # 0x2e15
 - "⸖": [t: dotted right pointing angle]         # 0x2e16
 - "⸗": [t: double oblique hyphen]               # 0x2e17
 - "⸘": [t: inverted interrobang]                # 0x2e18
 - "⸙": [t: palm branch]                         # 0x2e19
 - "⸚": [t: hyphen with diaeresis]               # 0x2e1a
 - "⸛": [t: tilde with ring above]               # 0x2e1b
 - "⸜": [t: left low paraphrase bracket]         # 0x2e1c
 - "⸝": [t: right low paraphrase bracket]        # 0x2e1d
 - "⸞": [t: tilde with dot above]                # 0x2e1e
 - "⸟": [t: tilde with dot below]                # 0x2e1f
 - "⸠": [t: left vertical bar with quill]        # 0x2e20
 - "⸡": [t: right vertical bar with quill]       # 0x2e21
 - "⸢": [t: top left half bracket]               # 0x2e22
 - "⸣": [t: top right half bracket]              # 0x2e23
 - "⸤": [t: bottom left half bracket]            # 0x2e24
 - "⸥": [t: bottom right half bracket]           # 0x2e25
 - "⸦": [t: left sideways u bracket]             # 0x2e26
 - "⸧": [t: right sideways u bracket]            # 0x2e27
 - "⸨": [t: left double parentheses]             # 0x2e28
 - "⸩": [t: right double parentheses]            # 0x2e29
 - "⸪": [t: two dots over one dot punctuation]   # 0x2e2a
 - "⸫": [t: one dot over two dots punctuation]   # 0x2e2b
 - "⸬": [t: squared four dot punctuation]        # 0x2e2c
 - "⸭": [t: five dot mark]                       # 0x2e2d
 - "⸮": [t: reversed question mark]              # 0x2e2e
 - "ⸯ": [t: vertical tilde]                      # 0x2e2f
 - "⸰": [t: ring point]                          # 0x2e30
 - "⸱": [t: word seperator middle dot]           # 0x2e31
 - "⸲": [t: turned comma]                        # 0x2e32
 - "⸳": [t: raised dot]                          # 0x2e33
 - "⸴": [t: raised comma]                        # 0x2e34
 - "⸵": [t: turned semicolon]                    # 0x2e35
 - "⸶": [t: dagger with left guard]              # 0x2e36
 - "⸷": [t: dagger with right guard]             # 0x2e37
 - "⸸": [t: turned dagger]                       # 0x2e38
 - "⸹": [t: top half section sign]               # 0x2e39
 - "⸺": [t: two em dash]                         # 0x2e3a
 - "⸻": [t: three em dash]                       # 0x2e3b
 - "〃": [t: ditto mark]                          # 0x3003
 - "〈": [t: left angle bracket]                  # 0x3008
 - "〉": [t: right angle bracket]                 # 0x3009
 - "《": [t: left double angle bracket]           # 0x300a
 - "》": [t: right double angle bracket]          # 0x300b
 - "「": [t: left corner bracket]                 # 0x300c
 - "」": [t: right corner bracket]                # 0x300d
 - "『": [t: left white corner bracket]           # 0x300e
 - "』": [t: right white corner bracket]          # 0x300f
 - "【": [t: left black lenticular bracket]       # 0x3010
 - "】": [t: right black lenticular bracket]      # 0x3011
 - "〔": [t: left tortoise shell bracket]         # 0x3014
 - "〕": [t: right tortoise shell bracket]        # 0x3015
 - "〖": [t: left white lenticular bracket]       # 0x3016
 - "〗": [t: right white lenticular bracket]      # 0x3017
 - "〘": [t: left white tortoise shell bracket]   # 0x3018
 - "〙": [t: right white tortoise shell bracket]  # 0x3019
 - "〚": [t: left white square bracket]           # 0x301a
 - "〛": [t: right white square bracket]          # 0x301b
 - "〜": [t: wave dash]                           # 0x301c
 - "〰": [t: wavy dash]                           # 0x3030
 - "㉈": [t: circled number ten on black square]  # 0x3248
 - "㉉": [t: circled number twenty on black square] # 0x3249
 - "㉊": [t: circled number thirty on black square] # 0x324a
 - "㉋": [t: circled number forty on blacks quare] # 0x324b
 - "㉌": [t: circled number fifty on black square] # 0x324c
 - "㉍": [t: circled number sixty on black square] # 0x324d
 - "㉎": [t: circled number seventy on black square] # 0x324e
 - "㉏": [t: circled number eighty on black square] # 0x324f
 - "㉑": [t: circled number twenty one]           # 0x3251
 - "㉒": [t: circled number twenty two]           # 0x3252
 - "㉓": [t: circled number twenty three]         # 0x3253
 - "㉔": [t: circled number twenty four]          # 0x3254
 - "㉕": [t: circled number twenty five]          # 0x3255
 - "㉖": [t: circled number twenty six]           # 0x3256
 - "㉗": [t: circled number twenty seven]         # 0x3257
 - "㉘": [t: circled number twenty eight]         # 0x3258
 - "㉙": [t: circled number twenty nine]          # 0x3259
 - "㉚": [t: circled number thirty]               # 0x325a
 - "㉛": [t: circled number thirty one]           # 0x325b
 - "㉜": [t: circled number thirty two]           # 0x325c
 - "㉝": [t: circled number thirty three]         # 0x325d
 - "㉞": [t: circled number thirty four]          # 0x325e
 - "㉟": [t: circled number thirty five]          # 0x325f
 - "㊱": [t: circled number thirty six]           # 0x32b1
 - "㉒": [t: circled number thirty seven]         # 0x3252
 - "㉓": [t: circled number thirty eight]         # 0x3253
 - "㉔": [t: circled number thirty nine]          # 0x3254
 - "㉕": [t: circled number forty]                # 0x3255
 - "㉖": [t: circled number forty one]            # 0x3256
 - "㉗": [t: circled number forty two]            # 0x3257
 - "㉘": [t: circled number forty three]          # 0x3258
 - "㉙": [t: circled number forty four]           # 0x3259
 - "㉚": [t: circled number forty five]           # 0x325a
 - "㉛": [t: circled number forty six]            # 0x325b
 - "㉜": [t: circled number forty seven]          # 0x325c
 - "㉝": [t: circled number forty eight]          # 0x325d
 - "㉞": [t: circled number forty nine]           # 0x325e
 - "㉟": [t: circled number fifty]                # 0x325f
 - "㋌": [t: mercury]                             # 0x32cc
 - "㋍": [t: ergs]                                # 0x32cd
 - "㋎": [t: electron volts]                      # 0x32ce
 - "㋏": [t: limited liability sign]              # 0x32cf
 - "㍱": [t: hectopascals]                        # 0x3371
 - "㍲": [t: daltons]                             # 0x3372
 - "㍳": [t: astronomical units]                  # 0x3373
 - "㍴": [t: bars]                                # 0x3374
 - "㍵": [t: o v]                                 # 0x3375
 - "㍶": [t: parsecs]                             # 0x3376
 - "㍷": [t: decimeters]                          # 0x3377
 - "㍸": [t: decimeters squared]                  # 0x3378
 - "㍹": [t: decimeters cubed]                    # 0x3379
 - "㍺": [t: instrumental units]                  # 0x337a
 - "㎀": [t: picoamps]                            # 0x3380
 - "㎁": [t: nanoamps]                            # 0x3381
 - "㎂": [t: microamps]                           # 0x3382
 - "㎃": [t: milliamps]                           # 0x3383
 - "㎄": [t: kiloamps]                            # 0x3384
 - "㎅": [t: kilobytes]                           # 0x3385
 - "㎆": [t: megabytes]                           # 0x3386
 - "㎇": [t: gigabytes]                           # 0x3387
 - "㎈": [t: calories]                            # 0x3388
 - "㎉": [t: kilocalories]                        # 0x3389
 - "㎊": [t: picofarads]                          # 0x338a
 - "㎋": [t: nanofarads]                          # 0x338b
 - "㎌": [t: microfarads]                         # 0x338c
 - "㎍": [t: micrograms]                          # 0x338d
 - "㎎": [t: milligrams]                          # 0x338e
 - "㎏": [t: kilograms]                           # 0x338f
 - "㎐": [t: hertz]                               # 0x3390
 - "㎑": [t: kilohertz]                           # 0x3391
 - "㎒": [t: megahertz]                           # 0x3392
 - "㎓": [t: gigahertz]                           # 0x3393
 - "㎔": [t: terahertz]                           # 0x3394
 - "㎕": [t: microliters]                         # 0x3395
 - "㎖": [t: millileters]                         # 0x3396
 - "㎗": [t: deciliters]                          # 0x3397
 - "㎘": [t: kiloliters]                          # 0x3398
 - "㎙": [t: femtometers]                         # 0x3399
 - "㎚": [t: nanometers]                          # 0x339a
 - "㎛": [t: micrometers]                         # 0x339b
 - "㎜": [t: millimeters]                         # 0x339c
 - "㎝": [t: centimeters]                         # 0x339d
 - "㎞": [t: kilometers]                          # 0x339e
 - "㎟": [t: millimeters squared]                 # 0x339f
 - "㎠": [t: centimeters squared]                 # 0x33a0
 - "㎡": [t: meters squared]                      # 0x33a1
 - "㎢": [t: kilometers squared]                  # 0x33a2
 - "㎣": [t: millimeters cubed]                   # 0x33a3
 - "㎤": [t: centimeters cubed]                   # 0x33a4
 - "㎥": [t: meters cubed]                        # 0x33a5
 - "㎦": [t: kilometers cubed]                    # 0x33a6
 - "㎧": [t: meters per second]                   # 0x33a7
 - "㎨": [t: meters per second squared]           # 0x33a8
 - "㎩": [t: pascals]                             # 0x33a9
 - "㎪": [t: kilopascals]                         # 0x33aa
 - "㎫": [t: megapascals]                         # 0x33ab
 - "㎬": [t: gigapascals]                         # 0x33ac
 - "㎭": [t: rads]                                # 0x33ad
 - "㎮": [t: rads per second]                     # 0x33ae
 - "㎯": [t: rads per second squared]             # 0x33af
 - "㎰": [t: picoseconds]                         # 0x33b0
 - "㎱": [t: nanoseconds]                         # 0x33b1
 - "㎲": [t: microseconds]                        # 0x33b2
 - "㎳": [t: milliseconds]                        # 0x33b3
 - "㎴": [t: picovolts]                           # 0x33b4
 - "㎵": [t: nanovolts]                           # 0x33b5
 - "㎶": [t: microvolts]                          # 0x33b6
 - "㎷": [t: millivolts]                          # 0x33b7
 - "㎸": [t: kilovolts]                           # 0x33b8
 - "㎹": [t: megavolts]                           # 0x33b9
 - "㎺": [t: picowatts]                           # 0x33ba
 - "㎻": [t: nanowatts]                           # 0x33bb
 - "㎼": [t: microwatts]                          # 0x33bc
 - "㎽": [t: milliwatts]                          # 0x33bd
 - "㎾": [t: kilowatts]                           # 0x33be
 - "㎿": [t: megawatts]                           # 0x33bf
 - "㏀": [t: kilo-ohms]                           # 0x33c0
 - "㏁": [t: megaohms]                            # 0x33c1
 - "㏂": [t: attometers]                          # 0x33c2
 - "㏃": [t: becquerels]                          # 0x33c3
 - "㏄": [t: cubic centimeters]                   # 0x33c4
 - "㏅": [t: candelas]                            # 0x33c5
 - "㏆": [t: coulombs per kilogram]               # 0x33c6
 - "㏇": [t: cardiac output]                      # 0x33c7
 - "㏈": [t: decibels]                            # 0x33c8
 - "㏉": [t: grays]                               # 0x33c9
 - "㏊": [t: hectares]                            # 0x33ca
 - "㏋": [t: horsepower]                          # 0x33cb
 - "㏌": [t: inches]                              # 0x33cc
 - "㏍": [t: kilokelvins]                         # 0x33cd
 - "㏎": [t: kilometers]                          # 0x33ce
 - "㏏": [t: knots]                               # 0x33cf
 - "㏐": [t: lumens]                              # 0x33d0
 - "㏑": [t: natural log]                         # 0x33d1
 - "㏒": [t: logarithm]                           # 0x33d2
 - "㏓": [t: lux]                                 # 0x33d3
 - "㏔": [t: millibarns]                          # 0x33d4
 - "㏕": [t: mills]                               # 0x33d5
 - "㏖": [t: moles]                               # 0x33d6
 - "㏗": [t: p h]                                 # 0x33d7
 - "㏘": [t: picometers]                          # 0x33d8
 - "㏙": [t: parts per million]                   # 0x33d9
 - "㏚": [t: petaroentgens]                       # 0x33da
 - "㏛": [t: steradians]                          # 0x33db
 - "㏜": [t: sieverts]                            # 0x33dc
 - "㏝": [t: webers]                              # 0x33dd
 - "㏞": [t: volts per meter]                     # 0x33de
 - "㏟": [t: amps per meter]                      # 0x33df
 - "㏿": [t: gallons]                             # 0x33ff
 - "": [t: equals with hat below]               # 0xe900
 - "": [t: equals with plus above]              # 0xe901
 - "⩲": [t: equals with plus above]              # 0x2a72
 - "": [t: equals with plus below]              # 0xe902
 - "⩱": [t: equals with plus below]              # 0x2a71
 - "": [t: tilde with plus above]               # 0xe903
 - "⨦": [t: tilde with plus above]               # 0x2a26
 - "": [t: tilde with plus below]               # 0xe904
 - "⨤": [t: tilde with plus below]               # 0x2a24
 - "": [t: equal double over greater than]      # 0xe908
 - "": [t: equal double over less than]         # 0xe909
 - "⪙": [t: equal double over less than]         # 0x2a99
 - "": [t: contains or equal to]                # 0xe90a
 - "⋽": [t: contains or equal to]                # 0x22fd
 - "": [t: superset of or equal to]             # 0xe90b
 - "": [t: subset of or equal to]               # 0xe90c
 - "": [t: equal over less than]                # 0xe90d
 - "": [t: element of or equal to]              # 0xe912
 - "⋷": [t: element of or equal to]              # 0x22f7
 - "": [t: equal to or greater than]            # 0xe913
 - "⪚": [t: equal to or greater than]            # 0x2a9a
 - "": [t: approximate superset of]             # 0xe914
 - "⫈": [t: approximate superset of]             # 0x2ac8
 - "": [t: approximate subset of]               # 0xe915
 - "⫇": [t: approximate subset of]               # 0x2ac7
 - "": [t: superset of with dot includes as sub relation] # 0xe916
 - "⪾": [t: superset of with dot includes as sub relation] # 0x2abe
 - "": [t: subset of with dot is included in as sub relation] # 0xe917
 - "⪽": [t: subset of with dot is included in as sub relation] # 0x2abd
 - "": [t: equal with dot below]                # 0xe918
 - "⩦": [t: equal with dot below]                # 0x2a66
 - "": [t: left dot over minus over right dot]  # 0xe919
 - "": [t: right dot over minus over left dot]  # 0xe91a
 - "": [t: almost equal to minus]               # 0xe91f
 - "": [t: double square cup]                   # 0xe920
 - "": [t: double square cap]                   # 0xe921
 - "": [t: less than equal to or greater than]  # 0xe922
 - "": [t: tilde with dot]                      # 0xe924
 - "⩪": [t: tilde with dot]                      # 0x2a6a
 - "": [t: tilde with two dots]                 # 0xe925
 - "": [t: less than greater than or equal to]  # 0xe926
 - "⪑": [t: less than greater than or equal to]  # 0x2a91
 - "": [t: greater than less than or equal to]  # 0xe927
 - "⪒": [t: greater than less than or equal to]  # 0x2a92
 - "": [t: equivalent to or less than]          # 0xe928
 - "⪝": [t: equivalent to or less than]          # 0x2a9d
 - "": [t: equivalent to or greater than]       # 0xe929
 - "": [t: left open box operator]              # 0xe92a
 - "": [t: right open box operator]             # 0xe92b
 - "": [t: identical to with dot]               # 0xe92c
 - "": [t: greater than equal to or less than]  # 0xe92d
 - "": [t: bar operator]                        # 0xe92e
 - "": [t: double bar operator]                 # 0xe92f
 - "": [t: triple bar operator]                 # 0xe930
 - "": [t: less than or approximately equal to] # 0xe932
 - "": [t: greater than or approximately equal to] # 0xe933
 - "": [t: nested less than]                    # 0xe936
 - "⪡": [t: nested less than]                    # 0x2aa1
 - "": [t: nested greater than]                 # 0xe937
 - "⪢": [t: nested greater than]                 # 0x2aa2
 - "": [t: precedes or equivalent to]           # 0xe93a
 - "": [t: succeeds or equivalent to]           # 0xe93b
 - "": [t: precedes over equal]                 # 0xe940
 - "": [t: succeeds over equal]                 # 0xe941
 - "": [t: less equal slanted greater]          # 0xe942
 - "": [t: greater equal slanted less]          # 0xe943
 - "": [t: satisfied by]                        # 0xe948
 - "": [t: lazy s]                              # 0xe949
 - "": [t: not assertion]                       # 0xe94a
 - "": [t: double equal]                        # 0xe94b
 - "⩵": [t: double equal]                        # 0x2a75
 - "": [t: triple equal]                        # 0xe94c
 - "": [t: rule delayed]                        # 0xe94d
 - "⧴": [t: rule delayed]                        # 0x29f4
 - "": [t: alias delimiter]                     # 0xe94e
 - "": [t: normal subgroup of with bar]         # 0xe950
 - "⧏": [t: normal subgroup of with bar]         # 0x29cf
 - "": [t: contains as normal subgroup with bar] # 0xe951
 - "⧐": [t: contains as normal subgroup with bar] # 0x29d0
 - "": [t: round implies]                       # 0xe954
 - "⥰": [t: round implies]                       # 0x2970
 - "": [t: smile under bar]                     # 0xe955
 - "": [t: frown over bar]                      # 0xe956
 - "": [t: superset of or almost equal to]      # 0xe957
 - "": [t: subset of or almost equal to]        # 0xe958
 - "": [t: greater than almost equal to or less than] # 0xe959
 - "": [t: less than almost equal or greater than] # 0xe95a
 - "": [t: double logical or]                   # 0xe95c
 - "⩔": [t: double logical or]                   # 0x2a54
 - "": [t: double logical and]                  # 0xe95d
 - "⩓": [t: double logical and]                  # 0x2a53
 - "": [t: logical or with double bar below]    # 0xe95e
 - "": [t: logical or with bar below]           # 0xe95f
 - "": [t: almost equal over equal]             # 0xe962
 - "": [t: left pointing triangle with bisecting bar] # 0xe964
 - "": [t: right pointing triangle with bisecting bar] # 0xe965
 - "": [t: equals with dotted top line]         # 0xe966
 - "": [t: precedes with colon]                 # 0xe967
 - "": [t: succeeds with colon]                 # 0xe968
 - "": [t: smaller than or equal slanted]       # 0xe969
 - "": [t: larger than or equal slanted]        # 0xe96a
 - "": [t: nested very much less than]          # 0xe96b
 - "": [t: nested very much greater than]       # 0xe96c
 - "": [t: difference between variant]          # 0xe96d
 - "⪮": [t: difference between variant]          # 0x2aae
 - "": [t: less than greater than overlay]      # 0xe96e
 - "⪤": [t: less than greater than overlay]      # 0x2aa4
 - "": [t: logical or logical and overlay]      # 0xe96f
 - "": [t: superset over superset]              # 0xe970
 - "⫖": [t: superset over superset]              # 0x2ad6
 - "": [t: subset over subset]                  # 0xe971
 - "⫕": [t: subset over subset]                  # 0x2ad5
 - "": [t: superset over subset]                # 0xe972
 - "⫔": [t: superset over subset]                # 0x2ad4
 - "": [t: subset over superset]                # 0xe973
 - "⫓": [t: subset over superset]                # 0x2ad3
 - "": [t: triple vertical bar]                 # 0xe979
 - "": [t: paired quadruple vertical dots]      # 0xe97a
 - "": [t: perpendicular over bar]              # 0xe97b
 - "⫨": [t: perpendicular over bar]              # 0x2ae8
 - "": [t: left turnstile double vertical bar]  # 0xe97c
 - "": [t: double left turnstile double vertical bar] # 0xe97d
 - "": [t: perpendicular over inverted perpendicular] # 0xe97e
 - "": [t: double left turnstile vertical bar]  # 0xe97f
 - "⫤": [t: double left turnstile vertical bar]  # 0x2ae4
 - "": [t: spherical angle opening up]          # 0xe980
 - "": [t: double slash]                        # 0xe981
 - "": [t: right angle with corner]             # 0xe982
 - "": [t: circled vertical bar]                # 0xe984
 - "⦶": [t: circled vertical bar]                # 0x29b6
 - "": [t: circled division sign]               # 0xe985
 - "⨸": [t: circled division sign]               # 0x2a38
 - "": [t: dashed solidus]                      # 0xe986
 - "": [t: dashed backslash]                    # 0xe987
 - "": [t: dashed mid line]                     # 0xe988
 - "": [t: dashed vertical bar]                 # 0xe989
 - "": [t: perpendicular with s]                # 0xe98a
 - "": [t: angle with s]                        # 0xe98b
 - "": [t: spherical angle opening left]        # 0xe98c
 - "": [t: angle opening left]                  # 0xe98d
 - "": [t: vertical bar with double hook]       # 0xe98e
 - "⥾": [t: vertical bar with double hook]       # 0x297e
 - "": [t: medium dot operator free radical]    # 0xe98f
 - "": [t: white up pointing triangle above bar] # 0xe990
 - "": [t: identical and parallel to]           # 0xe991
 - "": [t: smash product]                       # 0xe992
 - "⨳": [t: smash product]                       # 0x2a33
 - "": [t: triple bar operator with horizontal bar] # 0xe993
 - "": [t: identical to with double slash]      # 0xe994
 - "⧥": [t: identical to with double slash]      # 0x29e5
 - "": [t: triple crossed bars]                 # 0xe995
 - "": [t: vertical bar over circle]            # 0xe996
 - "": [t: vertical proportional to]            # 0xe997
 - "": [t: black last quarter moon]             # 0xe998
 - "": [t: black first quarter moon]            # 0xe999
 - "": [t: negative sine wave]                  # 0xe9a0
 - "": [t: parenthesized dot]                   # 0xe9a1
 - "": [t: parens]                              # 0xe9a2
 - "": [t: white smile]                         # 0xe9a3
 - "": [t: white frown]                         # 0xe9a4
 - "": [t: hexagon]                             # 0xe9a5
 - "": [t: equivalent to over plus]             # 0xe9a6
 - "": [t: plus over equivalent to]             # 0xe9a7
 - "": [t: intersection serifs]                 # 0xe9b0
 - "": [t: union serifs]                        # 0xe9b1
 - "": [t: square intersection serifs]          # 0xe9b2
 - "": [t: square union serifs]                 # 0xe9b3
 - "": [t: precedes equivalent to or succeeds]  # 0xe9e0
 - "": [t: succeeds equivalent to or precedes]  # 0xe9e1
 - "": [t: precedes almost equal to or succeeds] # 0xe9e2
 - "": [t: succeeds almost equal to or precedes] # 0xe9e3
 - "": [t: less than equivalent to or greater than] # 0xe9f0
 - "": [t: greater than equivalent to or less than] # 0xe9f1
 - "": [t: not vert much less than]             # 0xea00
 - "": [t: not vert much greater than]          # 0xea01
 - "": [t: not much less than variant]          # 0xea02
 - "": [t: not much greater than variant]       # 0xea03
 - "": [t: less vert not double equals]         # 0xea04
 - "": [t: gt vert not double equals]           # 0xea05
 - "": [t: not less than or equal to]           # 0xea06
 - "": [t: not greater than or equal to]        # 0xea07
 - "": [t: neither equal to nor less than]      # 0xea09
 - "": [t: does not contain or equal to]        # 0xea0a
 - "": [t: neither superset of nor equal to]    # 0xea0b
 - "": [t: neither subset of nor equal to]      # 0xea0c
 - "": [t: reverse solidus subset]              # 0xea0d
 - "": [t: neither equal to nor greater than]   # 0xea0e
 - "": [t: not minus tilde operator]            # 0xea0f
 - "": [t: neither equal to nor less than]      # 0xea10
 - "": [t: not tilde operator]                  # 0xea11
 - "": [t: not element of or equal to]          # 0xea12
 - "": [t: neither equal to nor greater than]   # 0xea13
 - "": [t: not almost equal]                    # 0xea14
 - "": [t: not succeeds similar]                # 0xea15
 - "": [t: less than or slanted equal to with slash] # 0xea16
 - "": [t: greater than or slanted equal to with slash] # 0xea17
 - "": [t: superset solidus]                    # 0xea1a
 - "": [t: does not contain]                    # 0xea1b
 - "": [t: not less than or equal to]           # 0xea1d
 - "": [t: not greater than or equal to]        # 0xea1e
 - "": [t: not almost equal to minus]           # 0xea1f
 - "": [t: negated set membership dot above]    # 0xea22
 - "": [t: not vert angle]                      # 0xea2c
 - "": [t: not parallel slanted]                # 0xea2d
 - "": [t: not bar operator]                    # 0xea2e
 - "": [t: not double bar operator]             # 0xea2f
 - "": [t: not triple bar operator]             # 0xea30
 - "": [t: less than but not approximately equal to] # 0xea32
 - "⪉": [t: less than but not approximately equal to] # 0x2a89
 - "": [t: greater than but not approximately equal to] # 0xea33
 - "⪊": [t: greater than but not approximately equal to] # 0x2a8a
 - "": [t: less than or not equal to]           # 0xea34
 - "": [t: greater than or not equal to]        # 0xea35
 - "": [t: not nested less than]                # 0xea36
 - "": [t: not nested greater than]             # 0xea37
 - "": [t: not much less than]                  # 0xea38
 - "": [t: not much greater than]               # 0xea39
 - "": [t: precedes but not equivalent to]      # 0xea3a
 - "": [t: succeeds but not equivalent to]      # 0xea3b
 - "": [t: precedes but not equal to]           # 0xea3c
 - "": [t: succeeds but not equal to]           # 0xea3d
 - "": [t: does not equal or precede]           # 0xea3e
 - "": [t: does not equal or succeed]           # 0xea3f
 - "": [t: precedes but not equal to]           # 0xea40
 - "⪵": [t: precedes but not equal to]           # 0x2ab5
 - "": [t: succeeds but not equal to]           # 0xea41
 - "⪶": [t: succeeds but not equal to]           # 0x2ab6
 - "": [t: not subset of nor equal to]          # 0xea42
 - "": [t: not superset of nor equal to]        # 0xea43
 - "": [t: subset of or not equal to]           # 0xea44
 - "": [t: superset of or not equal to]         # 0xea45
 - "": [t: not subset of nor equal to]          # 0xea46
 - "": [t: not superset of nor equal to]        # 0xea47
 - "": [t: not triple less than]                # 0xea48
 - "": [t: not triple greater than]             # 0xea49
 - "": [t: not precedes equals]                 # 0xea4c
 - "": [t: not succeeds equals]                 # 0xea4d
 - "": [t: not normal subgroup of with bar]     # 0xea50
 - "": [t: does not contain as normal subgroup with bar] # 0xea51
 - "": [t: not difference between]              # 0xea52
 - "": [t: not geometrically equivalent to]     # 0xea53
 - "": [t: not vert similar]                    # 0xea54
 - "": [t: not equal or similar]                # 0xea55
 - "": [t: not vert approximate]                # 0xea56
 - "": [t: not approximately identical to]      # 0xea57
 - "": [t: not bumpy equals]                    # 0xea58
 - "": [t: not bumpy single equals]             # 0xea59
 - "": [t: not equal dot]                       # 0xea5a
 - "": [t: reverse not equivalent]              # 0xea5b
 - "": [t: not square subset]                   # 0xea60
 - "": [t: not square superset]                 # 0xea61
 - "": [t: not almost equal over equal]         # 0xea62
 - "": [t: not strictly equivalent to]          # 0xea63
 - "": [t: not congruent dot]                   # 0xea64
 - "": [t: reverse not equal]                   # 0xea65
 - "": [t: not vert left triangle equals]       # 0xea70
 - "": [t: not vert right triangle equals]      # 0xea71
 - "": [t: not partial]                         # 0xea80
 - "": [t: arrow embellishment extender]        # 0xeb00
 - "": [t: arrow rightwards over arrow leftwards] # 0xeb01
 - "": [t: arrow rightwards over arrow leftwards] # 0xeb02
 - "": [t: harpoon right over harpoon left]     # 0xeb03
 - "": [t: harpoon right over harpoon left]     # 0xeb04
 - "": [t: double arrow northeast southwest]    # 0xeb05
 - "": [t: double arrow northwest southeast]    # 0xeb06
 - "": [t: horizontal harpoon extender]         # 0xeb07
 - "": [t: anticlockwise arc leftwards arrow]   # 0xeb08
 - "": [t: anticlockwise arc rightwards arrow]  # 0xeb09
 - "": [t: large rightwards arrow accent]       # 0xeb0b
 - "": [t: large leftwards arrow accent]        # 0xeb0c
 - "": [t: leftwards arrowhead]                 # 0xeb0d
 - "": [t: rightwards arrowhead]                # 0xeb0e
 - "": [t: large left right arrow with stroke]  # 0xeb0f
 - "": [t: horizontal double arrow extender]    # 0xeb10
 - "": [t: large left right double arrow with stroke] # 0xeb11
 - "": [t: downwards arrow leftwards of upwards arrow] # 0xeb12
 - "⇵": [t: downwards arrow leftwards of upwards arrow] # 0x21f5
 - "": [t: leftwards arrow with corner downwards] # 0xeb13
 - "": [t: rightwards arrow with corner upwards] # 0xeb14
 - "": [t: leftwards arrow with corner upwards] # 0xeb15
 - "": [t: anticlockwise top semicircle arrow with plus] # 0xeb16
 - "⤽": [t: anticlockwise top semicircle arrow with plus] # 0x293d
 - "": [t: clockwise top semicircle arrow with minus] # 0xeb17
 - "⤼": [t: clockwise top semicircle arrow with minus] # 0x293c
 - "": [t: rightwards arrow with tail with stroke] # 0xeb18
 - "": [t: right harpoon down]                  # 0xeb19
 - "": [t: left harpoon down]                   # 0xeb1a
 - "": [t: left right harpoon down]             # 0xeb1b
 - "⥐": [t: left right harpoon down]             # 0x2950
 - "": [t: left right harpoon up]               # 0xeb1c
 - "⥎": [t: left right harpoon up]               # 0x294e
 - "": [t: up down harpoon left]                # 0xeb1d
 - "⥑": [t: up down harpoon left]                # 0x2951
 - "": [t: up down harpoon right]               # 0xeb1e
 - "⥏": [t: up down harpoon right]               # 0x294f
 - "": [t: upwards arrow to the right of downwards arrow] # 0xeb1f
 - "⇵": [t: upwards arrow to the right of downwards arrow] # 0x21f5
 - "": [t: leftwards harpoon to bar with barb upwards] # 0xeb20
 - "⥒": [t: leftwards harpoon to bar with barb upwards] # 0x2952
 - "": [t: rightwards harpoon to bar with barb upwards] # 0xeb21
 - "⥓": [t: rightwards harpoon to bar with barb upwards] # 0x2953
 - "": [t: leftwards harpoon to bar with barb downwards] # 0xeb22
 - "⥖": [t: leftwards harpoon to bar with barb downwards] # 0x2956
 - "": [t: rightwards harpoon to bar with barb downwards] # 0xeb23
 - "⥗": [t: rightwards harpoon to bar with barb downwards] # 0x2957
 - "": [t: leftwards harpoon from bar with barb upwards] # 0xeb24
 - "⥚": [t: leftwards harpoon from bar with barb upwards] # 0x295a
 - "": [t: rightwards harpoon from bar with barb upwards] # 0xeb25
 - "⥛": [t: rightwards harpoon from bar with barb upwards] # 0x295b
 - "": [t: leftwards harpoon from bar with barb downwards] # 0xeb26
 - "⥞": [t: leftwards harpoon from bar with barb downwards] # 0x295e
 - "": [t: rightwards harpoon from bar with barb downwards] # 0xeb27
 - "⥟": [t: rightwards harpoon from bar with barb downwards] # 0x295f
 - "": [t: upwards harpoon to bar with barb leftwards] # 0xeb28
 - "⥘": [t: upwards harpoon to bar with barb leftwards] # 0x2958
 - "": [t: downwards harpoon to bar with barb leftwards] # 0xeb29
 - "⥙": [t: downwards harpoon to bar with barb leftwards] # 0x2959
 - "": [t: upwards harpoon to bar with barb rightwards] # 0xeb2a
 - "⥔": [t: upwards harpoon to bar with barb rightwards] # 0x2954
 - "": [t: downwards harpoon to bar with barb rightwards] # 0xeb2b
 - "⥕": [t: downwards harpoon to bar with barb rightwards] # 0x2955
 - "": [t: upwards harpoon from bar with barb leftwards] # 0xeb2c
 - "⥠": [t: upwards harpoon from bar with barb leftwards] # 0x2960
 - "": [t: downwards harpoon from bar with barb leftwards] # 0xeb2d
 - "⥡": [t: downwards harpoon from bar with barb leftwards] # 0x2961
 - "": [t: upwards harpoon from bar with barb rightwards] # 0xeb2e
 - "⥜": [t: upwards harpoon from bar with barb rightwards] # 0x295c
 - "": [t: downwards harpoon from bar with barb rightwards] # 0xeb2f
 - "⥝": [t: downwards harpoon from bar with barb rightwards] # 0x295d
 - "": [t: upwards arrow to bar]                # 0xeb30
 - "⤒": [t: upwards arrow to bar]                # 0x2912
 - "": [t: downwards arrow to bar]              # 0xeb31
 - "⤓": [t: downwards arrow to bar]              # 0x2913
 - "": [t: upwards harpoon to the left of downwards harpoon] # 0xeb32
 - "⥮": [t: upwards harpoon to the left of downwards harpoon] # 0x296e
 - "": [t: upwards harpoon to the right of downwards harpoon] # 0xeb33
 - "⥯": [t: upwards harpoon to the right of downwards harpoon] # 0x296f
 - "": [t: upwards arrowhead]                   # 0xeb34
 - "": [t: downwards arrowhead]                 # 0xeb35
 - "": [t: double harpoon with leftwards barb down rightwards barb up] # 0xeb36
 - "": [t: double harpoon with leftwards barb up rightwards barb down] # 0xeb37
 - "": [t: leftwards arrow over bar]            # 0xeb38
 - "": [t: rightwards arrow over bar]           # 0xeb39
 - "": [t: leftwards arrow under bar]           # 0xeb3a
 - "": [t: rightwards arrow under bar]          # 0xeb3b
 - "": [t: left right triple arrow]             # 0xeb3c
 - "": [t: double arrow northeast southeast]    # 0xeb3f
 - "": [t: anticlockwise left semicircle arrow] # 0xeb40
 - "⤹": [t: anticlockwise left semicircle arrow] # 0x2939
 - "": [t: clockwise left semicircle arrow]     # 0xeb41
 - "": [t: left open circle left right arrow]   # 0xeb42
 - "": [t: rightwards arrow over tilde]         # 0xeb44
 - "⥴": [t: rightwards arrow over tilde]         # 0x2974
 - "": [t: leftwards arrow over tilde]          # 0xeb45
 - "⥳": [t: leftwards arrow over tilde]          # 0x2973
 - "": [t: leftwards harpoon over bar]          # 0xeb48
 - "⥪": [t: leftwards harpoon over bar]          # 0x296a
 - "": [t: rightwards harpoon over bar]         # 0xeb49
 - "⥬": [t: rightwards harpoon over bar]         # 0x296c
 - "": [t: leftwards harpoon under bar]         # 0xeb4a
 - "⥫": [t: leftwards harpoon under bar]         # 0x296b
 - "": [t: rightwards harpoon under bar]        # 0xeb4b
 - "⥭": [t: rightwards harpoon under bar]        # 0x296d
 - "": [t: squat black leftwards arrow]         # 0xeb4c
 - "": [t: clockwise right semicircle arrow]    # 0xeb50
 - "⤸": [t: clockwise right semicircle arrow]    # 0x2938
 - "": [t: anticlockwise right semicircle arrow] # 0xeb51
 - "": [t: left open circle left right harpoon] # 0xeb52
 - "": [t: upwards arrow leftwards of vertical bar] # 0xeb58
 - "": [t: downwards arrow leftwards of vertical bar] # 0xeb59
 - "": [t: upwards arrow rightwards of vertical bar] # 0xeb5a
 - "": [t: downwards arrow rightwards of vertical bar] # 0xeb5b
 - "": [t: rightwards arrow with extended downwards hook] # 0xeb5c
 - "": [t: leftwards arrow with extended hook]  # 0xeb5d
 - "": [t: leftwards arrow with extended downwards hook] # 0xeb5e
 - "": [t: rightwards arrow with extended hook] # 0xeb5f
 - "": [t: not right arrow wavy]                # 0xeb60
 - "": [t: not right arrow curved]              # 0xeb61
 - "": [t: upwards harpoon leftwards of vertical bar] # 0xeb68
 - "": [t: downwards harpoon leftwards of vertical bar] # 0xeb69
 - "": [t: upwards harpoon rightwards of vertical bar] # 0xeb6a
 - "": [t: downwards harpoon rightwards of vertical bar] # 0xeb6b
 - "": [t: vertical double arrow extender]      # 0xeb6c
 - "": [t: vertical harpoon with barb left extender] # 0xeb6d
 - "": [t: vertical harpoon with barb right extender] # 0xeb6e
 - "": [t: right harpoon over left harpoon right] # 0xeb6f
 - "": [t: right harpoon over left harpoon left] # 0xeb70
 - "": [t: left harpoon over right harpoon right] # 0xeb71
 - "": [t: left harpoon over right harpoon left] # 0xeb72
 - "": [t: leftwards arrow from bar arrowhead]  # 0xeb73
 - "": [t: leftwards rightwards arrow from bar extender] # 0xeb74
 - "": [t: leftwards arrow from bar tail]       # 0xeb75
 - "": [t: rightwards arrow from bar tail]      # 0xeb76
 - "": [t: rightwards arrow from bar arrowhead] # 0xeb77
 - "": [t: upwards harpoon from bar with barb leftwards arrowhead] # 0xeb78
 - "": [t: rightwards arrow over leftwards arrow right] # 0xeb79
 - "": [t: rightwards arrow over leftwards arrow left] # 0xeb7a
 - "": [t: leftwards arrow over rightwards arrow right] # 0xeb7b
 - "": [t: leftwards arrow over rightwards arrow leftt] # 0xeb7c
 - "": [t: upwards arrow from bar arrowhead]    # 0xeb7d
 - "": [t: upwards arrow from bar tail]         # 0xeb7e
 - "": [t: downwards arrow from bar tail]       # 0xeb7f
 - "": [t: downwards arrow from bar arrowhead]  # 0xeb80
 - "": [t: downwards harpoon from bar with barb rightwards arrowhead] # 0xeb81
 - "": [t: upwards harpoon to the left of downwards harpoon bottom] # 0xeb82
 - "": [t: upwards harpoon to the left of downwards harpoon extender] # 0xeb83
 - "": [t: downwards harpoon to the left of upwards harpoon top] # 0xeb84
 - "": [t: upwards harppoon to the left of downwards harpoon top] # 0xeb85
 - "": [t: downwards harpoon to the left of the upwards harpoon extender] # 0xeb86
 - "": [t: downwards harpoon to the left of the upwards harpoon bottom] # 0xeb87
 - "": [t: upwards arrow leftwards of downwards arrow bottom] # 0xeb88
 - "": [t: downwards arrow leftwards of upwards arrow top] # 0xeb89
 - "": [t: upwards arrow leftwards of downwards arrow top] # 0xeb8a
 - "": [t: downwards arrow leftwards of upwards arrow bottom] # 0xeb8b
 - "": [t: leftwards rightwards arrows extender] # 0xeb8c
 - "": [t: north east arrow extender]           # 0xeb8d
 - "": [t: north west arrow extender]           # 0xeb8e
 - "": [t: down pointing brace left]            # 0xec00
 - "": [t: down pointing brace mid]             # 0xec01
 - "": [t: down pointing brace right]           # 0xec02
 - "": [t: horizontal brace extender]           # 0xec03
 - "": [t: up pointing brace left]              # 0xec04
 - "": [t: up pointing brace mid]               # 0xec05
 - "": [t: up-pointing brace right]             # 0xec06
 - "": [t: left vertical bar]                   # 0xec07
 - "": [t: right vertical bar]                  # 0xec08
 - "": [t: left double vertical bar]            # 0xec09
 - "": [t: right double vertical bar]           # 0xec0a
 - "": [t: horizontal bracket extender]         # 0xec0b
 - "": [t: under square bracket]                # 0xec0c
 - "⎵": [t: under square bracket]                # 0x23b5
 - "": [t: over square bracket]                 # 0xec0d
 - "⎴": [t: over square bracket]                 # 0x23b4
 - "": [t: under bracket left]                  # 0xec0e
 - "": [t: under bracket right]                 # 0xec0f
 - "": [t: over bracket left]                   # 0xec10
 - "": [t: over bracket right]                  # 0xec11
 - "": [t: left parens 1]                       # 0xec12
 - "": [t: left parens 2]                       # 0xec13
 - "": [t: left parens 3]                       # 0xec14
 - "": [t: left parens 4]                       # 0xec15
 - "": [t: right parens 1]                      # 0xec16
 - "": [t: right parens 2]                      # 0xec17
 - "": [t: right parens 3]                      # 0xec18
 - "": [t: right parens 4]                      # 0xec19
 - "": [t: radical 1]                           # 0xec1a
 - "": [t: radical 2]                           # 0xec1b
 - "": [t: radical 3]                           # 0xec1c
 - "": [t: radical 4]                           # 0xec1d
 - "": [t: radical 5]                           # 0xec1e
 - "": [t: radical bottom]                      # 0xec1f
 - "": [t: radical vertical extender]           # 0xec20
 - "": [t: radical top]                         # 0xec21
 - "": [t: left white bracket top]              # 0xec22
 - "": [t: left white bracket extender]         # 0xec23
 - "": [t: left white bracket bottom]           # 0xec24
 - "": [t: right white bracket top]             # 0xec25
 - "": [t: right white bracket extender]        # 0xec26
 - "": [t: right white bracket bottom]          # 0xec27
 - "": [t: left white curly bracket]            # 0xec30
 - "": [t: right white curly bracket]           # 0xec31
 - "": [t: long division sign]                  # 0xec32
 - "": [t: long division sign extender]         # 0xec33
 - "": [t: short division]                      # 0xec34
 - "": [t: double southwest to northeast em bond] # 0xec40
 - "": [t: double northwest to southeast em bond] # 0xec41
 - "": [t: single horizontal em bond]           # 0xec42
 - "": [t: double horizontal em bond]           # 0xec43
 - "": [t: triple horizontal em bond]           # 0xec44
 - "": [t: single vertical em bond]             # 0xec45
 - "": [t: double vertical em bond]             # 0xec46
 - "": [t: triple vertical em bond]             # 0xec47
 - "": [t: less than em bond]                   # 0xec48
 - "": [t: greater than em bond]                # 0xec49
 - "": [t: single horizontal en bond]           # 0xec4a
 - "": [t: double horizontal en bond]           # 0xec4b
 - "": [t: triple horizontal en bond]           # 0xec4c
 - "": [t: top left rectangle]                  # 0xec80
 - "": [t: bottom left rectangle]               # 0xec81
 - "": [t: top right rectangle]                 # 0xec90
 - "": [t: bottom right rectangle]              # 0xec91
 - "": [t: synthetic division corner]           # 0xec92
 - "": [t: synthetic division horizontal extender] # 0xec93
 - "": [t: synthetic division vertical extender] # 0xec94
 - "": [t: left ceiling floor extender]         # 0xec95
 - "": [t: right ceiling floor extender]        # 0xec96
 - "": [t: over bracket extender]               # 0xec97
 - "": [t: vertical bar extender]               # 0xec98
 - "": [t: left double vertical bar extender]   # 0xec99
 - "": [t: horizontal bar extender]             # 0xec9a
 - "": [t: under bracket extender]              # 0xec9c
 - "": [t: down pointing paren right]           # 0xec9d
 - "": [t: down pointing paren extender]        # 0xec9e
 - "": [t: down pointing paren left]            # 0xec9f
 - "": [t: up pointing brace extender]          # 0xeca0
 - "": [t: up pointing paren left]              # 0xeca1
 - "": [t: up pointing paren extender]          # 0xeca2
 - "": [t: up pointing paren right]             # 0xeca3
 - "": [t: down pointing brace extender]        # 0xeca4
 - "": [t: planck constant over two pi bar]     # 0xed00
 - "": [t: mirror g]                            # 0xed01
 - "": [t: dotless j]                           # 0xed02
 - "": [t: digamma]                             # 0xed03
 - "ϝ": [t: digamma]                             # 0x3dd
 - "": [t: d]                                   # 0xed10
 - "ⅆ": [t: d]                                   # 0x2146
 - "": [t: e]                                   # 0xed11
 - "ⅇ": [t: e]                                   # 0x2147
 - "": [t: i]                                   # 0xed12
 - "ⅈ": [t: i]                                   # 0x2148
 - "": [t: j]                                   # 0xed13
 - "":                                          # 0xed16
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: d
 - "ⅅ":                                          # 0x2145
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: d
 - "": [t: anticlockwise contour integral loop] # 0xee00
 - "": [t: clockwise contour integral loop]     # 0xee01
 - "": [t: ""]                                  # 0xee04
 - "": [t: ""]                                  # 0xee05
 - "": [t: ""]                                  # 0xee06
 - "": [t: ""]                                  # 0xee07
 - "": [t: ""]                                  # 0xee08
 - "": [t: ""]                                  # 0xee09
 - "": [t: ""]                                  # 0xee0a
 - "": [t: ""]                                  # 0xee0b
 - "": [t: ""]                                  # 0xee0c
 - "": [t: joint status embellishment]          # 0xee0d
 - "": [t: joint status embellishment left]     # 0xee0e
 - "": [t: joint status embellishment right]    # 0xee0f
 - "": [t: joint status embellishment extender] # 0xee10
 - "": [t: integral loop]                       # 0xee11
 - "": [t: integral loop double]                # 0xee12
 - "": [t: integral loop triple]                # 0xee13
 - "": [t: expanding integral loop double]      # 0xee15
 - "": [t: expanding integral loop triple]      # 0xee16
 - "": [t: asymptotically equal to accent]      # 0xee17
 - "": [t: equal sign accent]                   # 0xee18
 - "": [t: quadruple prime]                     # 0xee19
 - "⁗": [t: quadruple prime]                     # 0x2057
 - "": [t: bar accent with open circle left]    # 0xee1a
 - "": [t: bar accent with closed circle left]  # 0xee1b
 - "": [t: bar accent with open circle right]   # 0xee1c
 - "": [t: bar accent with over dot]            # 0xee1d
 - "": [t: bar accent with under dot]           # 0xee1e
 - "": [t: bar accent with double over dot]     # 0xee1f
 - "": [t: bar accent with double under dot]    # 0xee20
 - "": [t: bar accent with caret]               # 0xee21
 - "": [t: thick under bar accent]              # 0xee22
 - "": [t: bar accent with closed circle right] # 0xee23
 - "": [t: large dot above]                     # 0xee24
 - "": [t: alignment mark]                      # 0xef00
 - "": [t: ""]                                  # 0xef01
 - "​": [t: ""]                                  # 0x200b
 - "": [t: ""]                                  # 0xef02
 - " ": [t: ""]                                  # 0x2009
 - "": [t: ""]                                  # 0xef03
 - " ": [t: ""]                                  # 0x205f
 - "": [t: ""]                                  # 0xef04
 - "": [t: ""]                                  # 0xef05
 - " ": [t: ""]                                  # 0x2003
 - "": [t: ""]                                  # 0xef06
 - "": [t: ""]                                  # 0xef07
 - "": [t: ""]                                  # 0xef08
 - "": [t: ""]                                  # 0xef09
 - "": [t: ""]                                  # 0xef0a
 - " ": [t: ""]                                  # 0x200a
 - "": [t: ""]                                  # 0xef22
 - "": [t: ""]                                  # 0xef23
 - "": [t: ""]                                  # 0xef24
 - "": [t: ""]                                  # 0xef29
 - "": [t: missing term]                        # 0xef41
 - "": [t: clockwise contour integral arrow on left] # 0xef80
 - "": [t: integral with square]                # 0xef81
 - "": [t: integral with slash]                 # 0xef82
 - "": [t: reversed integral]                   # 0xef83
 - "": [t: double zero over double zero]        # 0xef90
 - "": [t: zero with slash]                     # 0xef91
 - "":                                          # 0xf000
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: a
 - "𝔄":                                          # 0x1d504
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: a
 - "":                                          # 0xf001
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: b
 - "𝔅":                                          # 0x1d505
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: b
 - "":                                          # 0xf003
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: d
 - "𝔇":                                          # 0x1d507
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: d
 - "":                                          # 0xf004
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: e
 - "𝔈":                                          # 0x1d508
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: e
 - "":                                          # 0xf005
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: f
 - "𝔉":                                          # 0x1d509
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: f
 - "":                                          # 0xf006
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: g
 - "𝔊":                                          # 0x1d50a
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: g
 - "":                                          # 0xf009
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: j
 - "𝔍":                                          # 0x1d50d
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: j
 - "":                                          # 0xf00a
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: k
 - "𝔎":                                          # 0x1d50e
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: k
 - "":                                          # 0xf00b
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: l
 - "𝔏":                                          # 0x1d50f
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: l
 - "":                                          # 0xf00c
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: m
 - "𝔐":                                          # 0x1d510
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: m
 - "":                                          # 0xf00d
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: n
 - "𝔑":                                          # 0x1d511
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: n
 - "":                                          # 0xf00e
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: o
 - "𝔒":                                          # 0x1d512
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: o
 - "":                                          # 0xf00f
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: p
 - "𝔓":                                          # 0x1d513
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: p
 - "":                                          # 0xf010
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: q
 - "𝔔":                                          # 0x1d514
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: q
 - "":                                          # 0xf012
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: s
 - "𝔖":                                          # 0x1d516
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: s
 - "":                                          # 0xf013
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: t
 - "𝔗":                                          # 0x1d517
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: t
 - "":                                          # 0xf014
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: u
 - "𝔘":                                          # 0x1d518
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: u
 - "":                                          # 0xf015
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: v
 - "𝔙":                                          # 0x1d519
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: v
 - "":                                          # 0xf016
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: w
 - "𝔚":                                          # 0x1d51a
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: w
 - "":                                          # 0xf017
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: x
 - "𝔛":                                          # 0x1d51b
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: x
 - "":                                          # 0xf018
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: y
 - "𝔜":                                          # 0x1d51c
     - t: fraktur
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: y
 - "": [t: fraktur a]                           # 0xf01a
 - "𝔞": [t: fraktur a]                           # 0x1d51e
 - "": [t: fraktur b]                           # 0xf01b
 - "𝔟": [t: fraktur b]                           # 0x1d51f
 - "": [t: fraktur c]                           # 0xf01c
 - "𝔠": [t: fraktur c]                           # 0x1d520
 - "": [t: fraktur d]                           # 0xf01d
 - "𝔡": [t: fraktur d]                           # 0x1d521
 - "": [t: fraktur e]                           # 0xf01e
 - "𝔢": [t: fraktur e]                           # 0x1d522
 - "": [t: fraktur f]                           # 0xf01f
 - "𝔣": [t: fraktur f]                           # 0x1d523
 - "": [t: fraktur g]                           # 0xf020
 - "𝔤": [t: fraktur g]                           # 0x1d524
 - "": [t: fraktur h]                           # 0xf021
 - "𝔥": [t: fraktur h]                           # 0x1d525
 - "": [t: fraktur i]                           # 0xf022
 - "𝔦": [t: fraktur i]                           # 0x1d526
 - "": [t: fraktur j]                           # 0xf023
 - "𝔧": [t: fraktur j]                           # 0x1d527
 - "": [t: fraktur k]                           # 0xf024
 - "𝔨": [t: fraktur k]                           # 0x1d528
 - "": [t: fraktur l]                           # 0xf025
 - "𝔩": [t: fraktur l]                           # 0x1d529
 - "": [t: fraktur m]                           # 0xf026
 - "𝔪": [t: fraktur m]                           # 0x1d52a
 - "": [t: fraktur n]                           # 0xf027
 - "𝔫": [t: fraktur n]                           # 0x1d52b
 - "": [t: fraktur o]                           # 0xf028
 - "𝔬": [t: fraktur o]                           # 0x1d52c
 - "": [t: fraktur p]                           # 0xf029
 - "𝔭": [t: fraktur p]                           # 0x1d52d
 - "": [t: fraktur q]                           # 0xf02a
 - "𝔮": [t: fraktur q]                           # 0x1d52e
 - "": [t: fraktur r]                           # 0xf02b
 - "𝔯": [t: fraktur r]                           # 0x1d52f
 - "": [t: fraktur s]                           # 0xf02c
 - "𝔰": [t: fraktur s]                           # 0x1d530
 - "": [t: fraktur t]                           # 0xf02d
 - "𝔱": [t: fraktur t]                           # 0x1d531
 - "": [t: fraktur u]                           # 0xf02e
 - "𝔲": [t: fraktur u]                           # 0x1d532
 - "": [t: fraktur v]                           # 0xf02f
 - "𝔳": [t: fraktur v]                           # 0x1d533
 - "": [t: fraktur w]                           # 0xf030
 - "𝔴": [t: fraktur w]                           # 0x1d534
 - "": [t: fraktur x]                           # 0xf031
 - "𝔵": [t: fraktur x]                           # 0x1d535
 - "": [t: fraktur y]                           # 0xf032
 - "𝔶": [t: fraktur y]                           # 0x1d536
 - "": [t: fraktur z]                           # 0xf033
 - "𝔷": [t: fraktur z]                           # 0x1d537
 - "":                                          # 0xf040
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: a
 - "𝕬":                                          # 0x1d56c
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: a
 - "":                                          # 0xf041
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: b
 - "𝕭":                                          # 0x1d56d
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: b
 - "":                                          # 0xf042
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: c
 - "𝕮":                                          # 0x1d56e
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: c
 - "":                                          # 0xf043
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: d
 - "𝕯":                                          # 0x1d56f
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: d
 - "":                                          # 0xf044
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: e
 - "𝕰":                                          # 0x1d570
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: e
 - "":                                          # 0xf045
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: f
 - "𝕱":                                          # 0x1d571
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: f
 - "":                                          # 0xf046
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: g
 - "𝕲":                                          # 0x1d572
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: g
 - "":                                          # 0xf047
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: h
 - "𝕳":                                          # 0x1d573
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: h
 - "":                                          # 0xf048
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: i
 - "𝕴":                                          # 0x1d574
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: i
 - "":                                          # 0xf049
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: j
 - "𝕵":                                          # 0x1d575
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: j
 - "":                                          # 0xf04a
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: k
 - "𝕶":                                          # 0x1d576
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: k
 - "":                                          # 0xf04b
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: l
 - "𝕷":                                          # 0x1d577
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: l
 - "":                                          # 0xf04c
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: m
 - "𝕸":                                          # 0x1d578
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: m
 - "":                                          # 0xf04d
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: n
 - "𝕹":                                          # 0x1d579
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: n
 - "":                                          # 0xf04e
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: o
 - "𝕺":                                          # 0x1d57a
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: o
 - "":                                          # 0xf04f
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: p
 - "𝕻":                                          # 0x1d57b
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: p
 - "":                                          # 0xf050
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: q
 - "𝕼":                                          # 0x1d57c
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: q
 - "":                                          # 0xf051
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: r
 - "𝕽":                                          # 0x1d57d
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: r
 - "":                                          # 0xf052
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: s
 - "𝕾":                                          # 0x1d57e
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: s
 - "":                                          # 0xf053
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: t
 - "𝕿":                                          # 0x1d57f
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: t
 - "":                                          # 0xf054
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: u
 - "𝖀":                                          # 0x1d580
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: u
 - "":                                          # 0xf055
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: v
 - "𝖁":                                          # 0x1d581
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: v
 - "":                                          # 0xf056
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: w
 - "𝖂":                                          # 0x1d582
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: w
 - "":                                          # 0xf057
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: x
 - "𝖃":                                          # 0x1d583
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: x
 - "":                                          # 0xf058
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: y
 - "𝖄":                                          # 0x1d584
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: y
 - "":                                          # 0xf059
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: z
 - "𝖅":                                          # 0x1d585
     - t: fraktur bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: z
 - "": [t: fraktur bold a]                      # 0xf05a
 - "𝖆": [t: fraktur bold a]                      # 0x1d586
 - "": [t: fraktur bold b]                      # 0xf05b
 - "𝖇": [t: fraktur bold b]                      # 0x1d587
 - "": [t: fraktur bold c]                      # 0xf05c
 - "𝖈": [t: fraktur bold c]                      # 0x1d588
 - "": [t: fraktur bold d]                      # 0xf05d
 - "𝖉": [t: fraktur bold d]                      # 0x1d589
 - "": [t: fraktur bold e]                      # 0xf05e
 - "𝖊": [t: fraktur bold e]                      # 0x1d58a
 - "": [t: fraktur bold f]                      # 0xf05f
 - "𝖋": [t: fraktur bold f]                      # 0x1d58b
 - "": [t: fraktur bold g]                      # 0xf060
 - "𝖌": [t: fraktur bold g]                      # 0x1d58c
 - "": [t: fraktur bold h]                      # 0xf061
 - "𝖍": [t: fraktur bold h]                      # 0x1d58d
 - "": [t: fraktur bold i]                      # 0xf062
 - "𝖎": [t: fraktur bold i]                      # 0x1d58e
 - "": [t: fraktur bold j]                      # 0xf063
 - "𝖏": [t: fraktur bold j]                      # 0x1d58f
 - "": [t: fraktur bold k]                      # 0xf064
 - "𝖐": [t: fraktur bold k]                      # 0x1d590
 - "": [t: fraktur bold l]                      # 0xf065
 - "𝖑": [t: fraktur bold l]                      # 0x1d591
 - "": [t: fraktur bold m]                      # 0xf066
 - "𝖒": [t: fraktur bold m]                      # 0x1d592
 - "": [t: fraktur bold n]                      # 0xf067
 - "𝖓": [t: fraktur bold n]                      # 0x1d593
 - "": [t: fraktur bold o]                      # 0xf068
 - "𝖔": [t: fraktur bold o]                      # 0x1d594
 - "": [t: fraktur bold p]                      # 0xf069
 - "𝖕": [t: fraktur bold p]                      # 0x1d595
 - "": [t: fraktur bold q]                      # 0xf06a
 - "𝖖": [t: fraktur bold q]                      # 0x1d596
 - "": [t: fraktur bold r]                      # 0xf06b
 - "𝖗": [t: fraktur bold r]                      # 0x1d597
 - "": [t: fraktur bold s]                      # 0xf06c
 - "𝖘": [t: fraktur bold s]                      # 0x1d598
 - "": [t: fraktur bold t]                      # 0xf06d
 - "𝖙": [t: fraktur bold t]                      # 0x1d599
 - "": [t: fraktur bold u]                      # 0xf06e
 - "𝖚": [t: fraktur bold u]                      # 0x1d59a
 - "": [t: fraktur bold v]                      # 0xf06f
 - "𝖛": [t: fraktur bold v]                      # 0x1d59b
 - "": [t: fraktur bold w]                      # 0xf070
 - "𝖜": [t: fraktur bold w]                      # 0x1d59c
 - "": [t: fraktur bold x]                      # 0xf071
 - "𝖝": [t: fraktur bold x]                      # 0x1d59d
 - "": [t: fraktur bold y]                      # 0xf072
 - "𝖞": [t: fraktur bold y]                      # 0x1d59e
 - "": [t: fraktur bold z]                      # 0xf073
 - "𝖟": [t: fraktur bold z]                      # 0x1d59f
 - "":                                          # 0xf080
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: a
 - "":                                          # 0xf081
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: b
 - "𝔹":                                          # 0x1d539
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: b
 - "":                                          # 0xf083
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: d
 - "𝔻":                                          # 0x1d53b
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: d
 - "":                                          # 0xf084
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: e
 - "𝔼":                                          # 0x1d53c
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: e
 - "":                                          # 0xf085
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: f
 - "𝔽":                                          # 0x1d53d
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: f
 - "":                                          # 0xf086
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: g
 - "𝔾":                                          # 0x1d53e
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: g
 - "":                                          # 0xf088
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: i
 - "𝕀":                                          # 0x1d540
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: i
 - "":                                          # 0xf089
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: j
 - "𝕁":                                          # 0x1d541
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: j
 - "":                                          # 0xf08a
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: k
 - "𝕂":                                          # 0x1d542
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: k
 - "":                                          # 0xf08b
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: l
 - "𝕃":                                          # 0x1d543
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: l
 - "":                                          # 0xf08c
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: m
 - "𝕄":                                          # 0x1d544
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: m
 - "":                                          # 0xf08e
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: o
 - "𝕆":                                          # 0x1d546
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: o
 - "":                                          # 0xf092
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: s
 - "𝕊":                                          # 0x1d54a
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: s
 - "":                                          # 0xf093
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: t
 - "𝕋":                                          # 0x1d54b
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: t
 - "":                                          # 0xf094
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: u
 - "𝕌":                                          # 0x1d54c
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: u
 - "":                                          # 0xf095
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: v
 - "𝕍":                                          # 0x1d54d
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: v
 - "":                                          # 0xf096
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: w
 - "𝕎":                                          # 0x1d54e
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: w
 - "":                                          # 0xf097
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: x
 - "𝕏":                                          # 0x1d54f
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: x
 - "":                                          # 0xf098
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: y
 - "𝕐":                                          # 0x1d550
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: y
 - "": [t: double struck a]                     # 0xf09a
 - "𝕒": [t: double struck a]                     # 0x1d552
 - "": [t: double struck b]                     # 0xf09b
 - "𝕓": [t: double struck b]                     # 0x1d553
 - "": [t: double struck c]                     # 0xf09c
 - "𝕔": [t: double struck c]                     # 0x1d554
 - "": [t: double struck d]                     # 0xf09d
 - "𝕕": [t: double struck d]                     # 0x1d555
 - "": [t: double struck e]                     # 0xf09e
 - "𝕖": [t: double struck e]                     # 0x1d556
 - "": [t: double struck f]                     # 0xf09f
 - "𝕗": [t: double struck f]                     # 0x1d557
 - "": [t: double struck g]                     # 0xf0a0
 - "𝕘": [t: double struck g]                     # 0x1d558
 - "": [t: double struck h]                     # 0xf0a1
 - "𝕙": [t: double struck h]                     # 0x1d559
 - "": [t: double struck i]                     # 0xf0a2
 - "𝕚": [t: double struck i]                     # 0x1d55a
 - "": [t: double struck j]                     # 0xf0a3
 - "𝕛": [t: double struck j]                     # 0x1d55b
 - "": [t: double struck k]                     # 0xf0a4
 - "𝕜": [t: double struck k]                     # 0x1d55c
 - "": [t: double struck l]                     # 0xf0a5
 - "𝕝": [t: double struck l]                     # 0x1d55d
 - "": [t: double struck m]                     # 0xf0a6
 - "𝕞": [t: double struck m]                     # 0x1d55e
 - "": [t: double struck n]                     # 0xf0a7
 - "𝕟": [t: double struck n]                     # 0x1d55f
 - "": [t: double struck o]                     # 0xf0a8
 - "𝕠": [t: double struck o]                     # 0x1d560
 - "": [t: double struck p]                     # 0xf0a9
 - "𝕡": [t: double struck p]                     # 0x1d561
 - "": [t: double struck q]                     # 0xf0aa
 - "𝕢": [t: double struck q]                     # 0x1d562
 - "": [t: double struck r]                     # 0xf0ab
 - "𝕣": [t: double struck r]                     # 0x1d563
 - "": [t: double struck s]                     # 0xf0ac
 - "𝕤": [t: double struck s]                     # 0x1d564
 - "": [t: double struck t]                     # 0xf0ad
 - "𝕥": [t: double struck t]                     # 0x1d565
 - "": [t: double struck u]                     # 0xf0ae
 - "𝕦": [t: double struck u]                     # 0x1d566
 - "": [t: double struck v]                     # 0xf0af
 - "𝕧": [t: double struck v]                     # 0x1d567
 - "": [t: double struck w]                     # 0xf0b0
 - "𝕨": [t: double struck w]                     # 0x1d568
 - "": [t: double struck x]                     # 0xf0b1
 - "𝕩": [t: double struck x]                     # 0x1d569
 - "": [t: double struck y]                     # 0xf0b2
 - "𝕪": [t: double struck y]                     # 0x1d56a
 - "": [t: double struck z]                     # 0xf0b3
 - "𝕫": [t: double struck z]                     # 0x1d56b
 - "": [t: double struck zero]                  # 0xf0c0
 - "𝟘": [t: double struck zero]                  # 0x1d7d8
 - "": [t: double struck one]                   # 0xf0c1
 - "𝟙": [t: double struck one]                   # 0x1d7d9
 - "": [t: double struck two]                   # 0xf0c2
 - "𝟚": [t: double struck two]                   # 0x1d7da
 - "": [t: double struck three]                 # 0xf0c3
 - "𝟛": [t: double struck three]                 # 0x1d7db
 - "": [t: double struck four]                  # 0xf0c4
 - "𝟜": [t: double struck four]                  # 0x1d7dc
 - "": [t: double struck five]                  # 0xf0c5
 - "𝟝": [t: double struck five]                  # 0x1d7dd
 - "": [t: double struck six]                   # 0xf0c6
 - "𝟞": [t: double struck six]                   # 0x1d7de
 - "": [t: double struck seven]                 # 0xf0c7
 - "𝟟": [t: double struck seven]                 # 0x1d7df
 - "": [t: double struck eight]                 # 0xf0c8
 - "𝟠": [t: double struck eight]                 # 0x1d7e0
 - "": [t: double struck nine]                  # 0xf0c9
 - "𝟡": [t: double struck nine]                  # 0x1d7e1
 - "": [t: double struck nabla]                 # 0xf0ca
 - "": [t: double struck euler constant]        # 0xf0cb
 - "":                                          # 0xf100
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: a
 - "𝒜":                                          # 0x1d49c
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: a
 - "":                                          # 0xf102
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: c
 - "𝒞":                                          # 0x1d49e
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: c
 - "":                                          # 0xf103
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: d
 - "𝒟":                                          # 0x1d49f
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: d
 - "":                                          # 0xf106
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: g
 - "𝒢":                                          # 0x1d4a2
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: g
 - "":                                          # 0xf109
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: j
 - "𝒥":                                          # 0x1d4a5
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: j
 - "":                                          # 0xf10a
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: k
 - "𝒦":                                          # 0x1d4a6
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: k
 - "":                                          # 0xf10d
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: n
 - "𝒩":                                          # 0x1d4a9
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: n
 - "":                                          # 0xf10e
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: o
 - "𝒪":                                          # 0x1d4aa
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: o
 - "":                                          # 0xf10f
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: p
 - "𝒫":                                          # 0x1d4ab
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: p
 - "":                                          # 0xf110
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: q
 - "𝒬":                                          # 0x1d4ac
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: q
 - "":                                          # 0xf112
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: s
 - "𝒮":                                          # 0x1d4ae
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: s
 - "":                                          # 0xf113
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: t
 - "𝒯":                                          # 0x1d4af
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: t
 - "":                                          # 0xf114
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: u
 - "𝒰":                                          # 0x1d4b0
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: u
 - "":                                          # 0xf115
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: v
 - "𝒱":                                          # 0x1d4b1
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: v
 - "":                                          # 0xf116
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: w
 - "𝒲":                                          # 0x1d4b2
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: w
 - "":                                          # 0xf117
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: x
 - "𝒳":                                          # 0x1d4b3
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: x
 - "":                                          # 0xf118
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: y
 - "𝒴":                                          # 0x1d4b4
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: y
 - "":                                          # 0xf119
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: z
 - "𝒵":                                          # 0x1d4b5
     - t: script
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: z
 - "": [t: script a]                            # 0xf11a
 - "𝒶": [t: script a]                            # 0x1d4b6
 - "": [t: script b]                            # 0xf11b
 - "𝒷": [t: script b]                            # 0x1d4b7
 - "": [t: script c]                            # 0xf11c
 - "𝒸": [t: script c]                            # 0x1d4b8
 - "": [t: script d]                            # 0xf11d
 - "𝒹": [t: script d]                            # 0x1d4b9
 - "": [t: script f]                            # 0xf11f
 - "𝒻": [t: script f]                            # 0x1d4bb
 - "": [t: script h]                            # 0xf121
 - "𝒽": [t: script h]                            # 0x1d4bd
 - "": [t: script i]                            # 0xf122
 - "𝒾": [t: script i]                            # 0x1d4be
 - "": [t: script j]                            # 0xf123
 - "𝒿": [t: script j]                            # 0x1d4bf
 - "": [t: script k]                            # 0xf124
 - "𝓀": [t: script k]                            # 0x1d4c0
 - "": [t: script m]                            # 0xf126
 - "𝓂": [t: script m]                            # 0x1d4c2
 - "": [t: script n]                            # 0xf127
 - "𝓃": [t: script n]                            # 0x1d4c3
 - "": [t: script p]                            # 0xf129
 - "𝓅": [t: script p]                            # 0x1d4c5
 - "": [t: script q]                            # 0xf12a
 - "𝓆": [t: script q]                            # 0x1d4c6
 - "": [t: script r]                            # 0xf12b
 - "𝓇": [t: script r]                            # 0x1d4c7
 - "": [t: script s]                            # 0xf12c
 - "𝓈": [t: script s]                            # 0x1d4c8
 - "": [t: script t]                            # 0xf12d
 - "𝓉": [t: script t]                            # 0x1d4c9
 - "": [t: script u]                            # 0xf12e
 - "𝓊": [t: script u]                            # 0x1d4ca
 - "": [t: script v]                            # 0xf12f
 - "𝓋": [t: script v]                            # 0x1d4cb
 - "": [t: script w]                            # 0xf130
 - "𝓌": [t: script w]                            # 0x1d4cc
 - "": [t: script x]                            # 0xf131
 - "𝓍": [t: script x]                            # 0x1d4cd
 - "": [t: script y]                            # 0xf132
 - "𝓎": [t: script y]                            # 0x1d4ce
 - "": [t: script z]                            # 0xf133
 - "𝓏": [t: script z]                            # 0x1d4cf
 - "":                                          # 0xf140
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: a
 - "𝓐":                                          # 0x1d4d0
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: a
 - "":                                          # 0xf141
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: b
 - "𝓑":                                          # 0x1d4d1
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: b
 - "":                                          # 0xf142
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: c
 - "𝓒":                                          # 0x1d4d2
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: c
 - "":                                          # 0xf143
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: d
 - "𝓓":                                          # 0x1d4d3
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: d
 - "":                                          # 0xf144
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: e
 - "𝓔":                                          # 0x1d4d4
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: e
 - "":                                          # 0xf145
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: f
 - "𝓕":                                          # 0x1d4d5
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: f
 - "":                                          # 0xf146
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: g
 - "𝓖":                                          # 0x1d4d6
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: g
 - "":                                          # 0xf147
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: h
 - "𝓗":                                          # 0x1d4d7
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: h
 - "":                                          # 0xf148
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: i
 - "𝓘":                                          # 0x1d4d8
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: i
 - "":                                          # 0xf149
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: j
 - "𝓙":                                          # 0x1d4d9
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: j
 - "":                                          # 0xf14a
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: k
 - "𝓚":                                          # 0x1d4da
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: k
 - "":                                          # 0xf14b
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: l
 - "𝓛":                                          # 0x1d4db
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: l
 - "":                                          # 0xf14c
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: m
 - "𝓜":                                          # 0x1d4dc
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: m
 - "":                                          # 0xf14d
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: n
 - "𝓝":                                          # 0x1d4dd
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: n
 - "":                                          # 0xf14e
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: o
 - "𝓞":                                          # 0x1d4de
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: o
 - "":                                          # 0xf14f
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: p
 - "𝓟":                                          # 0x1d4df
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: p
 - "":                                          # 0xf150
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: q
 - "𝓠":                                          # 0x1d4e0
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: q
 - "":                                          # 0xf151
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: r
 - "𝓡":                                          # 0x1d4e1
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: r
 - "":                                          # 0xf152
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: s
 - "𝓢":                                          # 0x1d4e2
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: s
 - "":                                          # 0xf153
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: t
 - "𝓣":                                          # 0x1d4e3
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: t
 - "":                                          # 0xf154
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: u
 - "𝓤":                                          # 0x1d4e4
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: u
 - "":                                          # 0xf155
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: v
 - "𝓥":                                          # 0x1d4e5
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: v
 - "":                                          # 0xf156
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: w
 - "𝓦":                                          # 0x1d4e6
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: w
 - "":                                          # 0xf157
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: x
 - "𝓧":                                          # 0x1d4e7
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: x
 - "":                                          # 0xf158
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: y
 - "𝓨":                                          # 0x1d4e8
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: y
 - "":                                          # 0xf159
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: z
 - "𝓩":                                          # 0x1d4e9
     - t: script bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: z
 - "": [t: script bold a]                       # 0xf15a
 - "𝓪": [t: script bold a]                       # 0x1d4ea
 - "": [t: script bold b]                       # 0xf15b
 - "𝓫": [t: script bold b]                       # 0x1d4eb
 - "": [t: script bold c]                       # 0xf15c
 - "𝓬": [t: script bold c]                       # 0x1d4ec
 - "": [t: script bold d]                       # 0xf15d
 - "𝓭": [t: script bold d]                       # 0x1d4ed
 - "": [t: script bold e]                       # 0xf15e
 - "𝓮": [t: script bold e]                       # 0x1d4ee
 - "": [t: script bold f]                       # 0xf15f
 - "𝓯": [t: script bold f]                       # 0x1d4ef
 - "": [t: script bold g]                       # 0xf160
 - "𝓰": [t: script bold g]                       # 0x1d4f0
 - "": [t: script bold h]                       # 0xf161
 - "𝓱": [t: script bold h]                       # 0x1d4f1
 - "": [t: script bold i]                       # 0xf162
 - "𝓲": [t: script bold i]                       # 0x1d4f2
 - "": [t: script bold j]                       # 0xf163
 - "𝓳": [t: script bold j]                       # 0x1d4f3
 - "": [t: script bold k]                       # 0xf164
 - "𝓴": [t: script bold k]                       # 0x1d4f4
 - "": [t: script bold l]                       # 0xf165
 - "𝓵": [t: script bold l]                       # 0x1d4f5
 - "": [t: script bold m]                       # 0xf166
 - "𝓶": [t: script bold m]                       # 0x1d4f6
 - "": [t: script bold n]                       # 0xf167
 - "𝓷": [t: script bold n]                       # 0x1d4f7
 - "": [t: script bold o]                       # 0xf168
 - "𝓸": [t: script bold o]                       # 0x1d4f8
 - "": [t: script bold p]                       # 0xf169
 - "𝓹": [t: script bold p]                       # 0x1d4f9
 - "": [t: script bold q]                       # 0xf16a
 - "𝓺": [t: script bold q]                       # 0x1d4fa
 - "": [t: script bold r]                       # 0xf16b
 - "𝓻": [t: script bold r]                       # 0x1d4fb
 - "": [t: script bold s]                       # 0xf16c
 - "𝓼": [t: script bold s]                       # 0x1d4fc
 - "": [t: script bold t]                       # 0xf16d
 - "𝓽": [t: script bold t]                       # 0x1d4fd
 - "": [t: script bold u]                       # 0xf16e
 - "𝓾": [t: script bold u]                       # 0x1d4fe
 - "": [t: script bold v]                       # 0xf16f
 - "𝓿": [t: script bold v]                       # 0x1d4ff
 - "": [t: script bold w]                       # 0xf170
 - "𝔀": [t: script bold w]                       # 0x1d500
 - "": [t: script bold x]                       # 0xf171
 - "𝔁": [t: script bold x]                       # 0x1d501
 - "": [t: script bold y]                       # 0xf172
 - "𝔂": [t: script bold y]                       # 0x1d502
 - "": [t: script bold z]                       # 0xf173
 - "𝔃": [t: script bold z]                       # 0x1d503
 - "":                                          # 0xf180
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: a
 - "":                                          # 0xf182
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: c
 - "":                                          # 0xf183
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: d
 - "":                                          # 0xf184
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: e
 - "":                                          # 0xf185
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: f
 - "":                                          # 0xf189
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: j
 - "":                                          # 0xf18a
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: k
 - "":                                          # 0xf18c
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: m
 - "":                                          # 0xf18e
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: o
 - "":                                          # 0xf18f
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: p
 - "":                                          # 0xf190
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: q
 - "":                                          # 0xf192
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: s
 - "":                                          # 0xf193
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: t
 - "":                                          # 0xf194
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: u
 - "":                                          # 0xf195
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: v
 - "":                                          # 0xf196
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: w
 - "":                                          # 0xf197
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: x
 - "":                                          # 0xf199
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: z
 - "":                                          # 0xf19a
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: ligature ae
 - "":                                          # 0xf19b
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: sharp s
 - "":                                          # 0xf19c
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: o with stroke
 - "":                                          # 0xf201
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: delta
 - "":                                          # 0xf202
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: zai
 - "":                                          # 0xf203
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: lambda
 - "":                                          # 0xf204
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: pi
 - "":                                          # 0xf205
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: sigma
 - "":                                          # 0xf206
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: theta
 - "":                                          # 0xf207
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: gamma
 - "":                                          # 0xf208
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: omega
 - "":                                          # 0xf209
     - t: double struck
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: upsilon
 - "": [t: double struck alpha]                 # 0xf220
 - "": [t: double struck beta]                  # 0xf221
 - "": [t: double struck phi]                   # 0xf222
 - "": [t: double struck zeta]                  # 0xf223
 - "": [t: double struck psi]                   # 0xf224
 - "": [t: double struck delta]                 # 0xf225
 - "": [t: double struck non-curly epsilon]     # 0xf226
 - "": [t: double struck gamma]                 # 0xf227
 - "": [t: double struck eta]                   # 0xf228
 - "": [t: double struck iota]                  # 0xf229
 - "": [t: double struck xi]                    # 0xf22a
 - "": [t: double struck kappa]                 # 0xf22b
 - "": [t: double struck lambda]                # 0xf22c
 - "": [t: double struck mu]                    # 0xf22d
 - "": [t: double struck nu]                    # 0xf22e
 - "": [t: double struck epsilon]               # 0xf22f
 - "": [t: double struck pi]                    # 0xf230
 - "": [t: double struck theta]                 # 0xf231
 - "": [t: double struck rho]                   # 0xf232
 - "": [t: double struck sigma]                 # 0xf233
 - "": [t: double struck tau]                   # 0xf234
 - "": [t: double struck theta]                 # 0xf235
 - "": [t: double struck omega]                 # 0xf236
 - "": [t: double struck final sigma]           # 0xf237
 - "": [t: double struck rho]                   # 0xf250
 - "": [t: double struck phi]                   # 0xf251
 - "":                                          # 0xf260
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: a
 - "𝐀":                                          # 0x1d400
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: a
 - "":                                          # 0xf261
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: b
 - "𝐁":                                          # 0x1d401
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: b
 - "":                                          # 0xf262
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: c
 - "𝐂":                                          # 0x1d402
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: c
 - "":                                          # 0xf263
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: d
 - "𝐃":                                          # 0x1d403
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: d
 - "":                                          # 0xf264
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: e
 - "𝐄":                                          # 0x1d404
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: e
 - "":                                          # 0xf265
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: f
 - "𝐅":                                          # 0x1d405
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: f
 - "":                                          # 0xf266
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: g
 - "𝐆":                                          # 0x1d406
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: g
 - "":                                          # 0xf267
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: h
 - "𝐇":                                          # 0x1d407
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: h
 - "":                                          # 0xf268
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: i
 - "𝐈":                                          # 0x1d408
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: i
 - "":                                          # 0xf269
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: j
 - "𝐉":                                          # 0x1d409
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: j
 - "":                                          # 0xf26a
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: k
 - "𝐊":                                          # 0x1d40a
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: k
 - "":                                          # 0xf26b
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: l
 - "𝐋":                                          # 0x1d40b
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: l
 - "":                                          # 0xf26c
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: m
 - "𝐌":                                          # 0x1d40c
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: m
 - "":                                          # 0xf26d
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: n
 - "𝐍":                                          # 0x1d40d
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: n
 - "":                                          # 0xf26e
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: o
 - "𝐎":                                          # 0x1d40e
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: o
 - "":                                          # 0xf26f
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: p
 - "𝐏":                                          # 0x1d40f
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: p
 - "":                                          # 0xf270
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: q
 - "𝐐":                                          # 0x1d410
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: q
 - "":                                          # 0xf271
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: r
 - "𝐑":                                          # 0x1d411
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: r
 - "":                                          # 0xf272
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: s
 - "𝐒":                                          # 0x1d412
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: s
 - "":                                          # 0xf273
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: t
 - "𝐓":                                          # 0x1d413
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: t
 - "":                                          # 0xf274
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: u
 - "𝐔":                                          # 0x1d414
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: u
 - "":                                          # 0xf275
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: v
 - "𝐕":                                          # 0x1d415
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: v
 - "":                                          # 0xf276
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: w
 - "𝐖":                                          # 0x1d416
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: w
 - "":                                          # 0xf277
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: x
 - "𝐗":                                          # 0x1d417
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: x
 - "":                                          # 0xf278
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: y
 - "𝐘":                                          # 0x1d418
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: y
 - "":                                          # 0xf279
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: z
 - "𝐙":                                          # 0x1d419
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: z
 - "": [t: bold a]                              # 0xf27a
 - "𝐚": [t: bold a]                              # 0x1d41a
 - "": [t: bold b]                              # 0xf27b
 - "𝐛": [t: bold b]                              # 0x1d41b
 - "": [t: bold c]                              # 0xf27c
 - "𝐜": [t: bold c]                              # 0x1d41c
 - "": [t: bold d]                              # 0xf27d
 - "𝐝": [t: bold d]                              # 0x1d41d
 - "": [t: bold e]                              # 0xf27e
 - "𝐞": [t: bold e]                              # 0x1d41e
 - "": [t: bold f]                              # 0xf27f
 - "𝐟": [t: bold f]                              # 0x1d41f
 - "": [t: bold g]                              # 0xf280
 - "𝐠": [t: bold g]                              # 0x1d420
 - "": [t: bold h]                              # 0xf281
 - "𝐡": [t: bold h]                              # 0x1d421
 - "": [t: bold i]                              # 0xf282
 - "𝐢": [t: bold i]                              # 0x1d422
 - "": [t: bold j]                              # 0xf283
 - "𝐣": [t: bold j]                              # 0x1d423
 - "": [t: bold k]                              # 0xf284
 - "𝐤": [t: bold k]                              # 0x1d424
 - "": [t: bold l]                              # 0xf285
 - "𝐥": [t: bold l]                              # 0x1d425
 - "": [t: bold m]                              # 0xf286
 - "𝐦": [t: bold m]                              # 0x1d426
 - "": [t: bold n]                              # 0xf287
 - "𝐧": [t: bold n]                              # 0x1d427
 - "": [t: bold o]                              # 0xf288
 - "𝐨": [t: bold o]                              # 0x1d428
 - "": [t: bold p]                              # 0xf289
 - "𝐩": [t: bold p]                              # 0x1d429
 - "": [t: bold q]                              # 0xf28a
 - "𝐪": [t: bold q]                              # 0x1d42a
 - "": [t: bold r]                              # 0xf28b
 - "𝐫": [t: bold r]                              # 0x1d42b
 - "": [t: bold s]                              # 0xf28c
 - "𝐬": [t: bold s]                              # 0x1d42c
 - "": [t: bold t]                              # 0xf28d
 - "𝐭": [t: bold t]                              # 0x1d42d
 - "": [t: bold u]                              # 0xf28e
 - "𝐮": [t: bold u]                              # 0x1d42e
 - "": [t: bold v]                              # 0xf28f
 - "𝐯": [t: bold v]                              # 0x1d42f
 - "": [t: bold w]                              # 0xf290
 - "𝐰": [t: bold w]                              # 0x1d430
 - "": [t: bold x]                              # 0xf291
 - "𝐱": [t: bold x]                              # 0x1d431
 - "": [t: bold y]                              # 0xf292
 - "𝐲": [t: bold y]                              # 0x1d432
 - "": [t: bold z]                              # 0xf293
 - "𝐳": [t: bold z]                              # 0x1d433
 - "":                                          # 0xf294
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: a
 - "𝐴":                                          # 0x1d434
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: a
 - "":                                          # 0xf295
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: b
 - "𝐵":                                          # 0x1d435
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: b
 - "":                                          # 0xf296
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: c
 - "𝐶":                                          # 0x1d436
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: c
 - "":                                          # 0xf297
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: d
 - "𝐷":                                          # 0x1d437
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: d
 - "":                                          # 0xf298
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: e
 - "𝐸":                                          # 0x1d438
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: e
 - "":                                          # 0xf299
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: f
 - "𝐹":                                          # 0x1d439
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: f
 - "":                                          # 0xf29a
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: g
 - "𝐺":                                          # 0x1d43a
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: g
 - "":                                          # 0xf29b
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: h
 - "𝐻":                                          # 0x1d43b
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: h
 - "":                                          # 0xf29c
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: i
 - "𝐼":                                          # 0x1d43c
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: i
 - "":                                          # 0xf29d
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: j
 - "𝐽":                                          # 0x1d43d
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: j
 - "":                                          # 0xf29e
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: k
 - "𝐾":                                          # 0x1d43e
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: k
 - "":                                          # 0xf29f
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: l
 - "𝐿":                                          # 0x1d43f
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: l
 - "":                                          # 0xf2a0
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: m
 - "𝑀":                                          # 0x1d440
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: m
 - "":                                          # 0xf2a1
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: n
 - "𝑁":                                          # 0x1d441
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: n
 - "":                                          # 0xf2a2
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: o
 - "𝑂":                                          # 0x1d442
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: o
 - "":                                          # 0xf2a3
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: p
 - "𝑃":                                          # 0x1d443
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: p
 - "":                                          # 0xf2a4
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: q
 - "𝑄":                                          # 0x1d444
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: q
 - "":                                          # 0xf2a5
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: r
 - "𝑅":                                          # 0x1d445
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: r
 - "":                                          # 0xf2a6
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: s
 - "𝑆":                                          # 0x1d446
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: s
 - "":                                          # 0xf2a7
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: t
 - "𝑇":                                          # 0x1d447
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: t
 - "":                                          # 0xf2a8
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: u
 - "𝑈":                                          # 0x1d448
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: u
 - "":                                          # 0xf2a9
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: v
 - "𝑉":                                          # 0x1d449
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: v
 - "":                                          # 0xf2aa
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: w
 - "𝑊":                                          # 0x1d44a
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: w
 - "":                                          # 0xf2ab
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: x
 - "𝑋":                                          # 0x1d44b
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: x
 - "":                                          # 0xf2ac
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: y
 - "𝑌":                                          # 0x1d44c
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: y
 - "":                                          # 0xf2ad
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: z
 - "𝑍":                                          # 0x1d44d
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: z
 - "": [t: b]                                   # 0xf2af
 - "𝑏": [t: b]                                   # 0x1d44f
 - "": [t: c]                                   # 0xf2b0
 - "𝑐": [t: c]                                   # 0x1d450
 - "": [t: d]                                   # 0xf2b1
 - "𝑑": [t: d]                                   # 0x1d451
 - "": [t: e]                                   # 0xf2b2
 - "𝑒": [t: e]                                   # 0x1d452
 - "": [t: f]                                   # 0xf2b3
 - "𝑓": [t: f]                                   # 0x1d453
 - "": [t: g]                                   # 0xf2b4
 - "𝑔": [t: g]                                   # 0x1d454
 - "": [t: h]                                   # 0xf2b5
 - "𝑕": [t: h]                                   # 0x1d455
 - "": [t: i]                                   # 0xf2b6
 - "𝑖": [t: i]                                   # 0x1d456
 - "": [t: j]                                   # 0xf2b7
 - "𝑗": [t: j]                                   # 0x1d457
 - "": [t: k]                                   # 0xf2b8
 - "𝑘": [t: k]                                   # 0x1d458
 - "": [t: l]                                   # 0xf2b9
 - "𝑙": [t: l]                                   # 0x1d459
 - "": [t: m]                                   # 0xf2ba
 - "𝑚": [t: m]                                   # 0x1d45a
 - "": [t: n]                                   # 0xf2bb
 - "𝑛": [t: n]                                   # 0x1d45b
 - "": [t: o]                                   # 0xf2bc
 - "𝑜": [t: o]                                   # 0x1d45c
 - "": [t: p]                                   # 0xf2bd
 - "𝑝": [t: p]                                   # 0x1d45d
 - "": [t: q]                                   # 0xf2be
 - "𝑞": [t: q]                                   # 0x1d45e
 - "": [t: r]                                   # 0xf2bf
 - "𝑟": [t: r]                                   # 0x1d45f
 - "": [t: s]                                   # 0xf2c0
 - "𝑠": [t: s]                                   # 0x1d460
 - "": [t: t]                                   # 0xf2c1
 - "𝑡": [t: t]                                   # 0x1d461
 - "": [t: u]                                   # 0xf2c2
 - "𝑢": [t: u]                                   # 0x1d462
 - "": [t: v]                                   # 0xf2c3
 - "𝑣": [t: v]                                   # 0x1d463
 - "": [t: w]                                   # 0xf2c4
 - "𝑤": [t: w]                                   # 0x1d464
 - "": [t: x]                                   # 0xf2c5
 - "𝑥": [t: x]                                   # 0x1d465
 - "": [t: y]                                   # 0xf2c6
 - "𝑦": [t: y]                                   # 0x1d466
 - "": [t: z]                                   # 0xf2c7
 - "𝑧": [t: z]                                   # 0x1d467
 - "":                                          # 0xf2c8
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: a
 - "𝑨":                                          # 0x1d468
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: a
 - "":                                          # 0xf2c9
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: b
 - "𝑩":                                          # 0x1d469
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: b
 - "":                                          # 0xf2ca
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: c
 - "𝑪":                                          # 0x1d46a
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: c
 - "":                                          # 0xf2cb
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: d
 - "𝑫":                                          # 0x1d46b
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: d
 - "":                                          # 0xf2cc
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: e
 - "𝑬":                                          # 0x1d46c
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: e
 - "":                                          # 0xf2cd
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: f
 - "𝑭":                                          # 0x1d46d
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: f
 - "":                                          # 0xf2ce
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: g
 - "𝑮":                                          # 0x1d46e
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: g
 - "":                                          # 0xf2cf
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: h
 - "𝑯":                                          # 0x1d46f
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: h
 - "":                                          # 0xf2d0
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: i
 - "𝑰":                                          # 0x1d470
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: i
 - "":                                          # 0xf2d1
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: j
 - "𝑱":                                          # 0x1d471
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: j
 - "":                                          # 0xf2d2
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: k
 - "𝑲":                                          # 0x1d472
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: k
 - "":                                          # 0xf2d3
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: l
 - "𝑳":                                          # 0x1d473
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: l
 - "":                                          # 0xf2d4
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: m
 - "𝑴":                                          # 0x1d474
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: m
 - "":                                          # 0xf2d5
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: n
 - "𝑵":                                          # 0x1d475
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: n
 - "":                                          # 0xf2d6
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: o
 - "𝑶":                                          # 0x1d476
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: o
 - "":                                          # 0xf2d7
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: p
 - "𝑷":                                          # 0x1d477
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: p
 - "":                                          # 0xf2d8
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: q
 - "𝑸":                                          # 0x1d478
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: q
 - "":                                          # 0xf2d9
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: r
 - "𝑹":                                          # 0x1d479
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: r
 - "":                                          # 0xf2da
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: s
 - "𝑺":                                          # 0x1d47a
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: s
 - "":                                          # 0xf2db
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: t
 - "𝑻":                                          # 0x1d47b
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: t
 - "":                                          # 0xf2dc
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: u
 - "𝑼":                                          # 0x1d47c
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: u
 - "":                                          # 0xf2dd
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: v
 - "𝑽":                                          # 0x1d47d
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: v
 - "":                                          # 0xf2de
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: w
 - "𝑾":                                          # 0x1d47e
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: w
 - "":                                          # 0xf2df
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: x
 - "𝑿":                                          # 0x1d47f
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: x
 - "":                                          # 0xf2e0
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: y
 - "𝒀":                                          # 0x1d480
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: y
 - "":                                          # 0xf2e1
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: z
 - "𝒁":                                          # 0x1d481
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: z
 - "": [t: bold italic a]                       # 0xf2e2
 - "𝒂": [t: bold italic a]                       # 0x1d482
 - "": [t: bold italic b]                       # 0xf2e3
 - "𝒃": [t: bold italic b]                       # 0x1d483
 - "": [t: bold italic c]                       # 0xf2e4
 - "𝒄": [t: bold italic c]                       # 0x1d484
 - "": [t: bold italic d]                       # 0xf2e5
 - "𝒅": [t: bold italic d]                       # 0x1d485
 - "": [t: bold italic e]                       # 0xf2e6
 - "𝒆": [t: bold italic e]                       # 0x1d486
 - "": [t: bold italic f]                       # 0xf2e7
 - "𝒇": [t: bold italic f]                       # 0x1d487
 - "": [t: bold italic g]                       # 0xf2e8
 - "𝒈": [t: bold italic g]                       # 0x1d488
 - "": [t: bold italic h]                       # 0xf2e9
 - "𝒉": [t: bold italic h]                       # 0x1d489
 - "": [t: bold italic i]                       # 0xf2ea
 - "𝒊": [t: bold italic i]                       # 0x1d48a
 - "": [t: bold italic j]                       # 0xf2eb
 - "𝒋": [t: bold italic j]                       # 0x1d48b
 - "": [t: bold italic k]                       # 0xf2ec
 - "𝒌": [t: bold italic k]                       # 0x1d48c
 - "": [t: bold italic l]                       # 0xf2ed
 - "𝒍": [t: bold italic l]                       # 0x1d48d
 - "": [t: bold italic m]                       # 0xf2ee
 - "𝒎": [t: bold italic m]                       # 0x1d48e
 - "": [t: bold italic n]                       # 0xf2ef
 - "𝒏": [t: bold italic n]                       # 0x1d48f
 - "": [t: bold italic o]                       # 0xf2f0
 - "𝒐": [t: bold italic o]                       # 0x1d490
 - "": [t: bold italic p]                       # 0xf2f1
 - "𝒑": [t: bold italic p]                       # 0x1d491
 - "": [t: bold italic q]                       # 0xf2f2
 - "𝒒": [t: bold italic q]                       # 0x1d492
 - "": [t: bold italic r]                       # 0xf2f3
 - "𝒓": [t: bold italic r]                       # 0x1d493
 - "": [t: bold italic s]                       # 0xf2f4
 - "𝒔": [t: bold italic s]                       # 0x1d494
 - "": [t: bold italic t]                       # 0xf2f5
 - "𝒕": [t: bold italic t]                       # 0x1d495
 - "": [t: bold italic u]                       # 0xf2f6
 - "𝒖": [t: bold italic u]                       # 0x1d496
 - "": [t: bold italic v]                       # 0xf2f7
 - "𝒗": [t: bold italic v]                       # 0x1d497
 - "": [t: bold italic w]                       # 0xf2f8
 - "𝒘": [t: bold italic w]                       # 0x1d498
 - "": [t: bold italic x]                       # 0xf2f9
 - "𝒙": [t: bold italic x]                       # 0x1d499
 - "": [t: bold italic y]                       # 0xf2fa
 - "𝒚": [t: bold italic y]                       # 0x1d49a
 - "": [t: bold italic z]                       # 0xf2fb
 - "𝒛": [t: bold italic z]                       # 0x1d49b
 - "":                                          # 0xf300
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: a
 - "𝖠":                                          # 0x1d5a0
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: a
 - "":                                          # 0xf301
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: b
 - "𝖡":                                          # 0x1d5a1
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: b
 - "":                                          # 0xf302
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: c
 - "𝖢":                                          # 0x1d5a2
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: c
 - "":                                          # 0xf303
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: d
 - "𝖣":                                          # 0x1d5a3
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: d
 - "":                                          # 0xf304
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: e
 - "𝖤":                                          # 0x1d5a4
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: e
 - "":                                          # 0xf305
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: f
 - "𝖥":                                          # 0x1d5a5
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: f
 - "":                                          # 0xf306
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: g
 - "𝖦":                                          # 0x1d5a6
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: g
 - "":                                          # 0xf307
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: h
 - "𝖧":                                          # 0x1d5a7
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: h
 - "":                                          # 0xf308
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: i
 - "𝖨":                                          # 0x1d5a8
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: i
 - "":                                          # 0xf309
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: j
 - "𝖩":                                          # 0x1d5a9
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: j
 - "":                                          # 0xf30a
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: k
 - "𝖪":                                          # 0x1d5aa
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: k
 - "":                                          # 0xf30b
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: l
 - "𝖫":                                          # 0x1d5ab
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: l
 - "":                                          # 0xf30c
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: m
 - "𝖬":                                          # 0x1d5ac
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: m
 - "":                                          # 0xf30d
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: n
 - "𝖭":                                          # 0x1d5ad
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: n
 - "":                                          # 0xf30e
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: o
 - "𝖮":                                          # 0x1d5ae
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: o
 - "":                                          # 0xf30f
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: p
 - "𝖯":                                          # 0x1d5af
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: p
 - "":                                          # 0xf310
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: q
 - "𝖰":                                          # 0x1d5b0
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: q
 - "":                                          # 0xf311
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: r
 - "𝖱":                                          # 0x1d5b1
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: r
 - "":                                          # 0xf312
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: s
 - "𝖲":                                          # 0x1d5b2
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: s
 - "":                                          # 0xf313
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: t
 - "𝖳":                                          # 0x1d5b3
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: t
 - "":                                          # 0xf314
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: u
 - "𝖴":                                          # 0x1d5b4
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: u
 - "":                                          # 0xf315
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: v
 - "𝖵":                                          # 0x1d5b5
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: v
 - "":                                          # 0xf316
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: w
 - "𝖶":                                          # 0x1d5b6
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: w
 - "":                                          # 0xf317
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: x
 - "𝖷":                                          # 0x1d5b7
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: x
 - "":                                          # 0xf318
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: y
 - "𝖸":                                          # 0x1d5b8
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: y
 - "":                                          # 0xf319
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: z
 - "𝖹":                                          # 0x1d5b9
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: z
 - "": [t: a]                                   # 0xf31a
 - "𝖺": [t: a]                                   # 0x1d5ba
 - "": [t: b]                                   # 0xf31b
 - "𝖻": [t: b]                                   # 0x1d5bb
 - "": [t: c]                                   # 0xf31c
 - "𝖼": [t: c]                                   # 0x1d5bc
 - "": [t: d]                                   # 0xf31d
 - "𝖽": [t: d]                                   # 0x1d5bd
 - "": [t: e]                                   # 0xf31e
 - "𝖾": [t: e]                                   # 0x1d5be
 - "": [t: f]                                   # 0xf31f
 - "𝖿": [t: f]                                   # 0x1d5bf
 - "": [t: g]                                   # 0xf320
 - "𝗀": [t: g]                                   # 0x1d5c0
 - "": [t: h]                                   # 0xf321
 - "𝗁": [t: h]                                   # 0x1d5c1
 - "": [t: i]                                   # 0xf322
 - "𝗂": [t: i]                                   # 0x1d5c2
 - "": [t: j]                                   # 0xf323
 - "𝗃": [t: j]                                   # 0x1d5c3
 - "": [t: k]                                   # 0xf324
 - "𝗄": [t: k]                                   # 0x1d5c4
 - "": [t: l]                                   # 0xf325
 - "𝗅": [t: l]                                   # 0x1d5c5
 - "": [t: m]                                   # 0xf326
 - "𝗆": [t: m]                                   # 0x1d5c6
 - "": [t: n]                                   # 0xf327
 - "𝗇": [t: n]                                   # 0x1d5c7
 - "": [t: o]                                   # 0xf328
 - "𝗈": [t: o]                                   # 0x1d5c8
 - "": [t: p]                                   # 0xf329
 - "𝗉": [t: p]                                   # 0x1d5c9
 - "": [t: q]                                   # 0xf32a
 - "𝗊": [t: q]                                   # 0x1d5ca
 - "": [t: r]                                   # 0xf32b
 - "𝗋": [t: r]                                   # 0x1d5cb
 - "": [t: s]                                   # 0xf32c
 - "𝗌": [t: s]                                   # 0x1d5cc
 - "": [t: t]                                   # 0xf32d
 - "𝗍": [t: t]                                   # 0x1d5cd
 - "": [t: u]                                   # 0xf32e
 - "𝗎": [t: u]                                   # 0x1d5ce
 - "": [t: v]                                   # 0xf32f
 - "𝗏": [t: v]                                   # 0x1d5cf
 - "": [t: w]                                   # 0xf330
 - "𝗐": [t: w]                                   # 0x1d5d0
 - "": [t: x]                                   # 0xf331
 - "𝗑": [t: x]                                   # 0x1d5d1
 - "": [t: y]                                   # 0xf332
 - "𝗒": [t: y]                                   # 0x1d5d2
 - "": [t: z]                                   # 0xf333
 - "𝗓": [t: z]                                   # 0x1d5d3
 - "":                                          # 0xf334
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: a
 - "𝗔":                                          # 0x1d5d4
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: a
 - "":                                          # 0xf335
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: b
 - "𝗕":                                          # 0x1d5d5
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: b
 - "":                                          # 0xf336
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: c
 - "𝗖":                                          # 0x1d5d6
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: c
 - "":                                          # 0xf337
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: d
 - "𝗗":                                          # 0x1d5d7
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: d
 - "":                                          # 0xf338
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: e
 - "𝗘":                                          # 0x1d5d8
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: e
 - "":                                          # 0xf339
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: f
 - "𝗙":                                          # 0x1d5d9
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: f
 - "":                                          # 0xf33a
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: g
 - "𝗚":                                          # 0x1d5da
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: g
 - "":                                          # 0xf33b
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: h
 - "𝗛":                                          # 0x1d5db
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: h
 - "":                                          # 0xf33c
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: i
 - "𝗜":                                          # 0x1d5dc
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: i
 - "":                                          # 0xf33d
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: j
 - "𝗝":                                          # 0x1d5dd
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: j
 - "":                                          # 0xf33e
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: k
 - "𝗞":                                          # 0x1d5de
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: k
 - "":                                          # 0xf33f
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: l
 - "𝗟":                                          # 0x1d5df
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: l
 - "":                                          # 0xf340
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: m
 - "𝗠":                                          # 0x1d5e0
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: m
 - "":                                          # 0xf341
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: n
 - "𝗡":                                          # 0x1d5e1
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: n
 - "":                                          # 0xf342
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: o
 - "𝗢":                                          # 0x1d5e2
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: o
 - "":                                          # 0xf343
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: p
 - "𝗣":                                          # 0x1d5e3
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: p
 - "":                                          # 0xf344
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: q
 - "𝗤":                                          # 0x1d5e4
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: q
 - "":                                          # 0xf345
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: r
 - "𝗥":                                          # 0x1d5e5
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: r
 - "":                                          # 0xf346
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: s
 - "𝗦":                                          # 0x1d5e6
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: s
 - "":                                          # 0xf347
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: t
 - "𝗧":                                          # 0x1d5e7
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: t
 - "":                                          # 0xf348
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: u
 - "𝗨":                                          # 0x1d5e8
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: u
 - "":                                          # 0xf349
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: v
 - "𝗩":                                          # 0x1d5e9
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: v
 - "":                                          # 0xf34a
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: w
 - "𝗪":                                          # 0x1d5ea
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: w
 - "":                                          # 0xf34b
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: x
 - "𝗫":                                          # 0x1d5eb
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: x
 - "":                                          # 0xf34c
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: y
 - "𝗬":                                          # 0x1d5ec
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: y
 - "":                                          # 0xf34d
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: z
 - "𝗭":                                          # 0x1d5ed
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: z
 - "": [t: bold a]                              # 0xf34e
 - "𝗮": [t: bold a]                              # 0x1d5ee
 - "": [t: bold b]                              # 0xf34f
 - "𝗯": [t: bold b]                              # 0x1d5ef
 - "": [t: bold c]                              # 0xf350
 - "𝗰": [t: bold c]                              # 0x1d5f0
 - "": [t: bold d]                              # 0xf351
 - "𝗱": [t: bold d]                              # 0x1d5f1
 - "": [t: bold e]                              # 0xf352
 - "𝗲": [t: bold e]                              # 0x1d5f2
 - "": [t: bold f]                              # 0xf353
 - "𝗳": [t: bold f]                              # 0x1d5f3
 - "": [t: bold g]                              # 0xf354
 - "𝗴": [t: bold g]                              # 0x1d5f4
 - "": [t: bold h]                              # 0xf355
 - "𝗵": [t: bold h]                              # 0x1d5f5
 - "": [t: bold i]                              # 0xf356
 - "𝗶": [t: bold i]                              # 0x1d5f6
 - "": [t: bold j]                              # 0xf357
 - "𝗷": [t: bold j]                              # 0x1d5f7
 - "": [t: bold k]                              # 0xf358
 - "𝗸": [t: bold k]                              # 0x1d5f8
 - "": [t: bold l]                              # 0xf359
 - "𝗹": [t: bold l]                              # 0x1d5f9
 - "": [t: bold m]                              # 0xf35a
 - "𝗺": [t: bold m]                              # 0x1d5fa
 - "": [t: bold n]                              # 0xf35b
 - "𝗻": [t: bold n]                              # 0x1d5fb
 - "": [t: bold o]                              # 0xf35c
 - "𝗼": [t: bold o]                              # 0x1d5fc
 - "": [t: bold p]                              # 0xf35d
 - "𝗽": [t: bold p]                              # 0x1d5fd
 - "": [t: bold q]                              # 0xf35e
 - "𝗾": [t: bold q]                              # 0x1d5fe
 - "": [t: bold r]                              # 0xf35f
 - "𝗿": [t: bold r]                              # 0x1d5ff
 - "": [t: bold s]                              # 0xf360
 - "𝘀": [t: bold s]                              # 0x1d600
 - "": [t: bold t]                              # 0xf361
 - "𝘁": [t: bold t]                              # 0x1d601
 - "": [t: bold u]                              # 0xf362
 - "𝘂": [t: bold u]                              # 0x1d602
 - "": [t: bold v]                              # 0xf363
 - "𝘃": [t: bold v]                              # 0x1d603
 - "": [t: bold w]                              # 0xf364
 - "𝘄": [t: bold w]                              # 0x1d604
 - "": [t: bold x]                              # 0xf365
 - "𝘅": [t: bold x]                              # 0x1d605
 - "": [t: bold y]                              # 0xf366
 - "𝘆": [t: bold y]                              # 0x1d606
 - "": [t: bold z]                              # 0xf367
 - "𝘇": [t: bold z]                              # 0x1d607
 - "":                                          # 0xf368
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: a
 - "𝘈":                                          # 0x1d608
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: a
 - "":                                          # 0xf369
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: b
 - "𝘉":                                          # 0x1d609
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: b
 - "":                                          # 0xf36a
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: c
 - "𝘊":                                          # 0x1d60a
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: c
 - "":                                          # 0xf36b
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: d
 - "𝘋":                                          # 0x1d60b
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: d
 - "":                                          # 0xf36c
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: e
 - "𝘌":                                          # 0x1d60c
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: e
 - "":                                          # 0xf36d
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: f
 - "𝘍":                                          # 0x1d60d
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: f
 - "":                                          # 0xf36e
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: g
 - "𝘎":                                          # 0x1d60e
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: g
 - "":                                          # 0xf36f
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: h
 - "𝘏":                                          # 0x1d60f
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: h
 - "":                                          # 0xf370
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: i
 - "𝘐":                                          # 0x1d610
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: i
 - "":                                          # 0xf371
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: j
 - "𝘑":                                          # 0x1d611
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: j
 - "":                                          # 0xf372
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: k
 - "𝘒":                                          # 0x1d612
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: k
 - "":                                          # 0xf373
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: l
 - "𝘓":                                          # 0x1d613
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: l
 - "":                                          # 0xf374
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: m
 - "𝘔":                                          # 0x1d614
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: m
 - "":                                          # 0xf375
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: n
 - "𝘕":                                          # 0x1d615
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: n
 - "":                                          # 0xf376
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: o
 - "𝘖":                                          # 0x1d616
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: o
 - "":                                          # 0xf377
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: p
 - "𝘗":                                          # 0x1d617
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: p
 - "":                                          # 0xf378
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: q
 - "𝘘":                                          # 0x1d618
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: q
 - "":                                          # 0xf379
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: r
 - "𝘙":                                          # 0x1d619
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: r
 - "":                                          # 0xf37a
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: s
 - "𝘚":                                          # 0x1d61a
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: s
 - "":                                          # 0xf37b
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: t
 - "𝘛":                                          # 0x1d61b
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: t
 - "":                                          # 0xf37c
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: u
 - "𝘜":                                          # 0x1d61c
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: u
 - "":                                          # 0xf37d
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: v
 - "𝘝":                                          # 0x1d61d
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: v
 - "":                                          # 0xf37e
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: w
 - "𝘞":                                          # 0x1d61e
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: w
 - "":                                          # 0xf37f
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: x
 - "𝘟":                                          # 0x1d61f
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: x
 - "":                                          # 0xf380
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: y
 - "𝘠":                                          # 0x1d620
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: y
 - "":                                          # 0xf381
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: z
 - "𝘡":                                          # 0x1d621
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: z
 - "": [t: italic a]                            # 0xf382
 - "𝘢": [t: italic a]                            # 0x1d622
 - "": [t: italic b]                            # 0xf383
 - "𝘣": [t: italic b]                            # 0x1d623
 - "": [t: italic c]                            # 0xf384
 - "𝘤": [t: italic c]                            # 0x1d624
 - "": [t: italic d]                            # 0xf385
 - "𝘥": [t: italic d]                            # 0x1d625
 - "": [t: italic e]                            # 0xf386
 - "𝘦": [t: italic e]                            # 0x1d626
 - "": [t: italic f]                            # 0xf387
 - "𝘧": [t: italic f]                            # 0x1d627
 - "": [t: italic g]                            # 0xf388
 - "𝘨": [t: italic g]                            # 0x1d628
 - "": [t: italic h]                            # 0xf389
 - "𝘩": [t: italic h]                            # 0x1d629
 - "": [t: italic i]                            # 0xf38a
 - "𝘪": [t: italic i]                            # 0x1d62a
 - "": [t: italic j]                            # 0xf38b
 - "𝘫": [t: italic j]                            # 0x1d62b
 - "": [t: italic k]                            # 0xf38c
 - "𝘬": [t: italic k]                            # 0x1d62c
 - "": [t: italic l]                            # 0xf38d
 - "𝘭": [t: italic l]                            # 0x1d62d
 - "": [t: italic m]                            # 0xf38e
 - "𝘮": [t: italic m]                            # 0x1d62e
 - "": [t: italic n]                            # 0xf38f
 - "𝘯": [t: italic n]                            # 0x1d62f
 - "": [t: italic o]                            # 0xf390
 - "𝘰": [t: italic o]                            # 0x1d630
 - "": [t: italic p]                            # 0xf391
 - "𝘱": [t: italic p]                            # 0x1d631
 - "": [t: italic q]                            # 0xf392
 - "𝘲": [t: italic q]                            # 0x1d632
 - "": [t: italic r]                            # 0xf393
 - "𝘳": [t: italic r]                            # 0x1d633
 - "": [t: italic s]                            # 0xf394
 - "𝘴": [t: italic s]                            # 0x1d634
 - "": [t: italic t]                            # 0xf395
 - "𝘵": [t: italic t]                            # 0x1d635
 - "": [t: italic u]                            # 0xf396
 - "𝘶": [t: italic u]                            # 0x1d636
 - "": [t: italic v]                            # 0xf397
 - "𝘷": [t: italic v]                            # 0x1d637
 - "": [t: italic w]                            # 0xf398
 - "𝘸": [t: italic w]                            # 0x1d638
 - "": [t: italic x]                            # 0xf399
 - "𝘹": [t: italic x]                            # 0x1d639
 - "": [t: italic y]                            # 0xf39a
 - "𝘺": [t: italic y]                            # 0x1d63a
 - "": [t: italic z]                            # 0xf39b
 - "𝘻": [t: italic z]                            # 0x1d63b
 - "":                                          # 0xf39c
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: a
 - "𝘼":                                          # 0x1d63c
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: a
 - "":                                          # 0xf39d
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: b
 - "𝘽":                                          # 0x1d63d
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: b
 - "":                                          # 0xf39e
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: c
 - "𝘾":                                          # 0x1d63e
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: c
 - "":                                          # 0xf39f
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: d
 - "𝘿":                                          # 0x1d63f
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: d
 - "":                                          # 0xf3a0
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: e
 - "𝙀":                                          # 0x1d640
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: e
 - "":                                          # 0xf3a1
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: f
 - "𝙁":                                          # 0x1d641
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: f
 - "":                                          # 0xf3a2
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: g
 - "𝙂":                                          # 0x1d642
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: g
 - "":                                          # 0xf3a3
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: h
 - "𝙃":                                          # 0x1d643
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: h
 - "":                                          # 0xf3a4
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: i
 - "𝙄":                                          # 0x1d644
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: i
 - "":                                          # 0xf3a5
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: j
 - "𝙅":                                          # 0x1d645
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: j
 - "":                                          # 0xf3a6
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: k
 - "𝙆":                                          # 0x1d646
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: k
 - "":                                          # 0xf3a7
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: l
 - "𝙇":                                          # 0x1d647
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: l
 - "":                                          # 0xf3a8
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: m
 - "𝙈":                                          # 0x1d648
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: m
 - "":                                          # 0xf3a9
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: n
 - "𝙉":                                          # 0x1d649
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: n
 - "":                                          # 0xf3aa
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: o
 - "𝙊":                                          # 0x1d64a
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: o
 - "":                                          # 0xf3ab
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: p
 - "𝙋":                                          # 0x1d64b
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: p
 - "":                                          # 0xf3ac
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: q
 - "𝙌":                                          # 0x1d64c
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: q
 - "":                                          # 0xf3ad
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: r
 - "𝙍":                                          # 0x1d64d
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: r
 - "":                                          # 0xf3ae
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: s
 - "𝙎":                                          # 0x1d64e
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: s
 - "":                                          # 0xf3af
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: t
 - "𝙏":                                          # 0x1d64f
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: t
 - "":                                          # 0xf3b0
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: u
 - "𝙐":                                          # 0x1d650
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: u
 - "":                                          # 0xf3b1
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: v
 - "𝙑":                                          # 0x1d651
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: v
 - "":                                          # 0xf3b2
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: w
 - "𝙒":                                          # 0x1d652
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: w
 - "":                                          # 0xf3b3
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: x
 - "𝙓":                                          # 0x1d653
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: x
 - "":                                          # 0xf3b4
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: y
 - "𝙔":                                          # 0x1d654
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: y
 - "":                                          # 0xf3b5
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: z
 - "𝙕":                                          # 0x1d655
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: z
 - "": [t: bold italic a]                       # 0xf3b6
 - "𝙖": [t: bold italic a]                       # 0x1d656
 - "": [t: bold italic b]                       # 0xf3b7
 - "𝙗": [t: bold italic b]                       # 0x1d657
 - "": [t: bold italic c]                       # 0xf3b8
 - "𝙘": [t: bold italic c]                       # 0x1d658
 - "": [t: bold italic d]                       # 0xf3b9
 - "𝙙": [t: bold italic d]                       # 0x1d659
 - "": [t: bold italic e]                       # 0xf3ba
 - "𝙚": [t: bold italic e]                       # 0x1d65a
 - "": [t: bold italic f]                       # 0xf3bb
 - "𝙛": [t: bold italic f]                       # 0x1d65b
 - "": [t: bold italic g]                       # 0xf3bc
 - "𝙜": [t: bold italic g]                       # 0x1d65c
 - "": [t: bold italic h]                       # 0xf3bd
 - "𝙝": [t: bold italic h]                       # 0x1d65d
 - "": [t: bold italic i]                       # 0xf3be
 - "𝙞": [t: bold italic i]                       # 0x1d65e
 - "": [t: bold italic j]                       # 0xf3bf
 - "𝙟": [t: bold italic j]                       # 0x1d65f
 - "": [t: bold italic k]                       # 0xf3c0
 - "𝙠": [t: bold italic k]                       # 0x1d660
 - "": [t: bold italic l]                       # 0xf3c1
 - "𝙡": [t: bold italic l]                       # 0x1d661
 - "": [t: bold italic m]                       # 0xf3c2
 - "𝙢": [t: bold italic m]                       # 0x1d662
 - "": [t: bold italic n]                       # 0xf3c3
 - "𝙣": [t: bold italic n]                       # 0x1d663
 - "": [t: bold italic o]                       # 0xf3c4
 - "𝙤": [t: bold italic o]                       # 0x1d664
 - "": [t: bold italic p]                       # 0xf3c5
 - "𝙥": [t: bold italic p]                       # 0x1d665
 - "": [t: bold italic q]                       # 0xf3c6
 - "𝙦": [t: bold italic q]                       # 0x1d666
 - "": [t: bold italic r]                       # 0xf3c7
 - "𝙧": [t: bold italic r]                       # 0x1d667
 - "": [t: bold italic s]                       # 0xf3c8
 - "𝙨": [t: bold italic s]                       # 0x1d668
 - "": [t: bold italic t]                       # 0xf3c9
 - "𝙩": [t: bold italic t]                       # 0x1d669
 - "": [t: bold italic u]                       # 0xf3ca
 - "𝙪": [t: bold italic u]                       # 0x1d66a
 - "": [t: bold italic v]                       # 0xf3cb
 - "𝙫": [t: bold italic v]                       # 0x1d66b
 - "": [t: bold italic w]                       # 0xf3cc
 - "𝙬": [t: bold italic w]                       # 0x1d66c
 - "": [t: bold italic x]                       # 0xf3cd
 - "𝙭": [t: bold italic x]                       # 0x1d66d
 - "": [t: bold italic y]                       # 0xf3ce
 - "𝙮": [t: bold italic y]                       # 0x1d66e
 - "": [t: bold italic z]                       # 0xf3cf
 - "𝙯": [t: bold italic z]                       # 0x1d66f
 - "":                                          # 0xf3d0
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: a
 - "𝙰":                                          # 0x1d670
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: a
 - "":                                          # 0xf3d1
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: b
 - "𝙱":                                          # 0x1d671
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: b
 - "":                                          # 0xf3d2
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: c
 - "𝙲":                                          # 0x1d672
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: c
 - "":                                          # 0xf3d3
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: d
 - "𝙳":                                          # 0x1d673
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: d
 - "":                                          # 0xf3d4
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: e
 - "𝙴":                                          # 0x1d674
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: e
 - "":                                          # 0xf3d5
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: f
 - "𝙵":                                          # 0x1d675
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: f
 - "":                                          # 0xf3d6
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: g
 - "𝙶":                                          # 0x1d676
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: g
 - "":                                          # 0xf3d7
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: h
 - "𝙷":                                          # 0x1d677
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: h
 - "":                                          # 0xf3d8
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: i
 - "𝙸":                                          # 0x1d678
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: i
 - "":                                          # 0xf3d9
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: j
 - "𝙹":                                          # 0x1d679
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: j
 - "":                                          # 0xf3da
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: k
 - "𝙺":                                          # 0x1d67a
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: k
 - "":                                          # 0xf3db
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: l
 - "𝙻":                                          # 0x1d67b
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: l
 - "":                                          # 0xf3dc
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: m
 - "𝙼":                                          # 0x1d67c
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: m
 - "":                                          # 0xf3dd
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: n
 - "𝙽":                                          # 0x1d67d
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: n
 - "":                                          # 0xf3de
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: o
 - "𝙾":                                          # 0x1d67e
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: o
 - "":                                          # 0xf3df
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: p
 - "𝙿":                                          # 0x1d67f
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: p
 - "":                                          # 0xf3e0
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: q
 - "𝚀":                                          # 0x1d680
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: q
 - "":                                          # 0xf3e1
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: r
 - "𝚁":                                          # 0x1d681
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: r
 - "":                                          # 0xf3e2
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: s
 - "𝚂":                                          # 0x1d682
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: s
 - "":                                          # 0xf3e3
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: t
 - "𝚃":                                          # 0x1d683
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: t
 - "":                                          # 0xf3e4
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: u
 - "𝚄":                                          # 0x1d684
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: u
 - "":                                          # 0xf3e5
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: v
 - "𝚅":                                          # 0x1d685
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: v
 - "":                                          # 0xf3e6
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: w
 - "𝚆":                                          # 0x1d686
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: w
 - "":                                          # 0xf3e7
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: x
 - "𝚇":                                          # 0x1d687
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: x
 - "":                                          # 0xf3e8
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: y
 - "𝚈":                                          # 0x1d688
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: y
 - "":                                          # 0xf3e9
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: z
 - "𝚉":                                          # 0x1d689
     - t: ""
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: z
 - "": [t: a]                                   # 0xf3ea
 - "𝚊": [t: a]                                   # 0x1d68a
 - "": [t: b]                                   # 0xf3eb
 - "𝚋": [t: b]                                   # 0x1d68b
 - "": [t: c]                                   # 0xf3ec
 - "𝚌": [t: c]                                   # 0x1d68c
 - "": [t: d]                                   # 0xf3ed
 - "𝚍": [t: d]                                   # 0x1d68d
 - "": [t: e]                                   # 0xf3ee
 - "𝚎": [t: e]                                   # 0x1d68e
 - "": [t: f]                                   # 0xf3ef
 - "𝚏": [t: f]                                   # 0x1d68f
 - "": [t: g]                                   # 0xf3f0
 - "𝚐": [t: g]                                   # 0x1d690
 - "": [t: h]                                   # 0xf3f1
 - "𝚑": [t: h]                                   # 0x1d691
 - "": [t: i]                                   # 0xf3f2
 - "𝚒": [t: i]                                   # 0x1d692
 - "": [t: j]                                   # 0xf3f3
 - "𝚓": [t: j]                                   # 0x1d693
 - "": [t: k]                                   # 0xf3f4
 - "𝚔": [t: k]                                   # 0x1d694
 - "": [t: l]                                   # 0xf3f5
 - "𝚕": [t: l]                                   # 0x1d695
 - "": [t: m]                                   # 0xf3f6
 - "𝚖": [t: m]                                   # 0x1d696
 - "": [t: n]                                   # 0xf3f7
 - "𝚗": [t: n]                                   # 0x1d697
 - "": [t: o]                                   # 0xf3f8
 - "𝚘": [t: o]                                   # 0x1d698
 - "": [t: p]                                   # 0xf3f9
 - "𝚙": [t: p]                                   # 0x1d699
 - "": [t: q]                                   # 0xf3fa
 - "𝚚": [t: q]                                   # 0x1d69a
 - "": [t: r]                                   # 0xf3fb
 - "𝚛": [t: r]                                   # 0x1d69b
 - "": [t: s]                                   # 0xf3fc
 - "𝚜": [t: s]                                   # 0x1d69c
 - "": [t: t]                                   # 0xf3fd
 - "𝚝": [t: t]                                   # 0x1d69d
 - "": [t: u]                                   # 0xf3fe
 - "𝚞": [t: u]                                   # 0x1d69e
 - "": [t: v]                                   # 0xf3ff
 - "𝚟": [t: v]                                   # 0x1d69f
 - "": [t: w]                                   # 0xf400
 - "𝚠": [t: w]                                   # 0x1d6a0
 - "": [t: x]                                   # 0xf401
 - "𝚡": [t: x]                                   # 0x1d6a1
 - "": [t: y]                                   # 0xf402
 - "𝚢": [t: y]                                   # 0x1d6a2
 - "": [t: z]                                   # 0xf403
 - "𝚣": [t: z]                                   # 0x1d6a3
 - "": [t: dotless i]                           # 0xf404
 - "𝚤": [t: dotless i]                           # 0x1d6a4
 - "𝚥": [t: dotless j]                           # 0x1d6a5
 - "":                                          # 0xf408
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: alpha
 - "𝚨":                                          # 0x1d6a8
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: alpha
 - "":                                          # 0xf409
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: beta
 - "𝚩":                                          # 0x1d6a9
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: beta
 - "":                                          # 0xf40a
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: gamma
 - "𝚪":                                          # 0x1d6aa
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: gamma
 - "":                                          # 0xf40b
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: delta
 - "𝚫":                                          # 0x1d6ab
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: delta
 - "":                                          # 0xf40c
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: epsilon
 - "𝚬":                                          # 0x1d6ac
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: epsilon
 - "":                                          # 0xf40d
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: zeta
 - "𝚭":                                          # 0x1d6ad
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: zeta
 - "":                                          # 0xf40e
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: eta
 - "𝚮":                                          # 0x1d6ae
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: eta
 - "":                                          # 0xf40f
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: theta
 - "𝚯":                                          # 0x1d6af
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: theta
 - "":                                          # 0xf410
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: iota
 - "𝚰":                                          # 0x1d6b0
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: iota
 - "":                                          # 0xf411
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: kappa
 - "𝚱":                                          # 0x1d6b1
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: kappa
 - "":                                          # 0xf412
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: lamda
 - "𝚲":                                          # 0x1d6b2
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: lamda
 - "":                                          # 0xf413
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: mu
 - "𝚳":                                          # 0x1d6b3
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: mu
 - "":                                          # 0xf414
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: nu
 - "𝚴":                                          # 0x1d6b4
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: nu
 - "":                                          # 0xf415
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: xi
 - "𝚵":                                          # 0x1d6b5
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: xi
 - "":                                          # 0xf416
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: omicron
 - "𝚶":                                          # 0x1d6b6
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: omicron
 - "":                                          # 0xf417
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: pi
 - "𝚷":                                          # 0x1d6b7
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: pi
 - "":                                          # 0xf418
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: rho
 - "𝚸":                                          # 0x1d6b8
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: rho
 - "":                                          # 0xf419
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: theta
 - "𝚹":                                          # 0x1d6b9
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: theta
 - "":                                          # 0xf41a
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: sigma
 - "𝚺":                                          # 0x1d6ba
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: sigma
 - "":                                          # 0xf41b
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: tau
 - "𝚻":                                          # 0x1d6bb
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: tau
 - "":                                          # 0xf41c
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: upsilon
 - "𝚼":                                          # 0x1d6bc
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: upsilon
 - "":                                          # 0xf41d
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: phi
 - "𝚽":                                          # 0x1d6bd
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: phi
 - "":                                          # 0xf41e
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: chi
 - "𝚾":                                          # 0x1d6be
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: chi
 - "":                                          # 0xf41f
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: psi
 - "𝚿":                                          # 0x1d6bf
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: psi
 - "":                                          # 0xf420
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: omega
 - "𝛀":                                          # 0x1d6c0
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: omega
 - "": [t: bold nabla]                          # 0xf421
 - "𝛁": [t: bold nabla]                          # 0x1d6c1
 - "": [t: bold  alpha]                         # 0xf422
 - "𝛂": [t: bold  alpha]                         # 0x1d6c2
 - "": [t: bold  beta]                          # 0xf423
 - "𝛃": [t: bold  beta]                          # 0x1d6c3
 - "": [t: bold  gamma]                         # 0xf424
 - "𝛄": [t: bold  gamma]                         # 0x1d6c4
 - "": [t: bold  delta]                         # 0xf425
 - "𝛅": [t: bold  delta]                         # 0x1d6c5
 - "": [t: bold  epsilon]                       # 0xf426
 - "𝛆": [t: bold  epsilon]                       # 0x1d6c6
 - "": [t: bold  zeta]                          # 0xf427
 - "𝛇": [t: bold  zeta]                          # 0x1d6c7
 - "": [t: bold  eta]                           # 0xf428
 - "𝛈": [t: bold  eta]                           # 0x1d6c8
 - "": [t: bold  theta]                         # 0xf429
 - "𝛉": [t: bold  theta]                         # 0x1d6c9
 - "": [t: bold  iota]                          # 0xf42a
 - "𝛊": [t: bold  iota]                          # 0x1d6ca
 - "": [t: bold  kappa]                         # 0xf42b
 - "𝛋": [t: bold  kappa]                         # 0x1d6cb
 - "": [t: bold  lamda]                         # 0xf42c
 - "𝛌": [t: bold  lamda]                         # 0x1d6cc
 - "": [t: bold  mu]                            # 0xf42d
 - "𝛍": [t: bold  mu]                            # 0x1d6cd
 - "": [t: bold  nu]                            # 0xf42e
 - "𝛎": [t: bold  nu]                            # 0x1d6ce
 - "": [t: bold  xi]                            # 0xf42f
 - "𝛏": [t: bold  xi]                            # 0x1d6cf
 - "": [t: bold  omicron]                       # 0xf430
 - "𝛐": [t: bold  omicron]                       # 0x1d6d0
 - "": [t: bold  pi]                            # 0xf431
 - "𝛑": [t: bold  pi]                            # 0x1d6d1
 - "": [t: bold  rho]                           # 0xf432
 - "𝛒": [t: bold  rho]                           # 0x1d6d2
 - "": [t: bold  final sigma]                   # 0xf433
 - "𝛓": [t: bold  final sigma]                   # 0x1d6d3
 - "": [t: bold  sigma]                         # 0xf434
 - "𝛔": [t: bold  sigma]                         # 0x1d6d4
 - "": [t: bold  tau]                           # 0xf435
 - "𝛕": [t: bold  tau]                           # 0x1d6d5
 - "": [t: bold  upsilon]                       # 0xf436
 - "𝛖": [t: bold  upsilon]                       # 0x1d6d6
 - "": [t: bold  phi]                           # 0xf437
 - "𝛗": [t: bold  phi]                           # 0x1d6d7
 - "": [t: bold  chi]                           # 0xf438
 - "𝛘": [t: bold  chi]                           # 0x1d6d8
 - "": [t: bold  psi]                           # 0xf439
 - "𝛙": [t: bold  psi]                           # 0x1d6d9
 - "": [t: bold  omega]                         # 0xf43a
 - "𝛚": [t: bold  omega]                         # 0x1d6da
 - "": [t: bold partial differential]           # 0xf43b
 - "𝛛": [t: bold partial differential]           # 0x1d6db
 - "": [t: bold epsilon]                        # 0xf43c
 - "𝛜": [t: bold epsilon]                        # 0x1d6dc
 - "": [t: bold theta]                          # 0xf43d
 - "𝛝": [t: bold theta]                          # 0x1d6dd
 - "": [t: bold kappa]                          # 0xf43e
 - "𝛞": [t: bold kappa]                          # 0x1d6de
 - "": [t: bold phi]                            # 0xf43f
 - "𝛟": [t: bold phi]                            # 0x1d6df
 - "": [t: bold rho]                            # 0xf440
 - "𝛠": [t: bold rho]                            # 0x1d6e0
 - "": [t: bold pi]                             # 0xf441
 - "𝛡": [t: bold pi]                             # 0x1d6e1
 - "":                                          # 0xf442
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: alpha
 - "𝛢":                                          # 0x1d6e2
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: alpha
 - "":                                          # 0xf443
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: beta
 - "𝛣":                                          # 0x1d6e3
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: beta
 - "":                                          # 0xf444
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: gamma
 - "𝛤":                                          # 0x1d6e4
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: gamma
 - "":                                          # 0xf445
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: delta
 - "𝛥":                                          # 0x1d6e5
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: delta
 - "":                                          # 0xf446
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: epsilon
 - "𝛦":                                          # 0x1d6e6
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: epsilon
 - "":                                          # 0xf447
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: zeta
 - "𝛧":                                          # 0x1d6e7
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: zeta
 - "":                                          # 0xf448
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: eta
 - "𝛨":                                          # 0x1d6e8
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: eta
 - "":                                          # 0xf449
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: theta
 - "𝛩":                                          # 0x1d6e9
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: theta
 - "":                                          # 0xf44a
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: iota
 - "𝛪":                                          # 0x1d6ea
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: iota
 - "":                                          # 0xf44b
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: kappa
 - "𝛫":                                          # 0x1d6eb
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: kappa
 - "":                                          # 0xf44c
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: lamda
 - "𝛬":                                          # 0x1d6ec
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: lamda
 - "":                                          # 0xf44d
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: mu
 - "𝛭":                                          # 0x1d6ed
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: mu
 - "":                                          # 0xf44e
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: nu
 - "𝛮":                                          # 0x1d6ee
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: nu
 - "":                                          # 0xf44f
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: xi
 - "𝛯":                                          # 0x1d6ef
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: xi
 - "":                                          # 0xf450
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: omicron
 - "𝛰":                                          # 0x1d6f0
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: omicron
 - "":                                          # 0xf451
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: pi
 - "𝛱":                                          # 0x1d6f1
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: pi
 - "":                                          # 0xf452
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: rho
 - "𝛲":                                          # 0x1d6f2
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: rho
 - "":                                          # 0xf453
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: theta
 - "𝛳":                                          # 0x1d6f3
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: theta
 - "":                                          # 0xf454
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: sigma
 - "𝛴":                                          # 0x1d6f4
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: sigma
 - "":                                          # 0xf455
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: tau
 - "𝛵":                                          # 0x1d6f5
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: tau
 - "":                                          # 0xf456
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: upsilon
 - "𝛶":                                          # 0x1d6f6
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: upsilon
 - "":                                          # 0xf457
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: phi
 - "𝛷":                                          # 0x1d6f7
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: phi
 - "":                                          # 0xf458
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: chi
 - "𝛸":                                          # 0x1d6f8
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: chi
 - "":                                          # 0xf459
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: psi
 - "𝛹":                                          # 0x1d6f9
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: psi
 - "":                                          # 0xf45a
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: omega
 - "𝛺":                                          # 0x1d6fa
     - t: italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: omega
 - "": [t: bold nabla]                          # 0xf45b
 - "𝛻": [t: bold nabla]                          # 0x1d6fb
 - "": [t: italic  alpha]                       # 0xf45c
 - "𝛼": [t: italic  alpha]                       # 0x1d6fc
 - "": [t: italic  beta]                        # 0xf45d
 - "𝛽": [t: italic  beta]                        # 0x1d6fd
 - "": [t: italic  gamma]                       # 0xf45e
 - "𝛾": [t: italic  gamma]                       # 0x1d6fe
 - "": [t: italic  delta]                       # 0xf45f
 - "𝛿": [t: italic  delta]                       # 0x1d6ff
 - "": [t: italic  epsilon]                     # 0xf460
 - "𝜀": [t: italic  epsilon]                     # 0x1d700
 - "": [t: italic  zeta]                        # 0xf461
 - "𝜁": [t: italic  zeta]                        # 0x1d701
 - "": [t: italic  eta]                         # 0xf462
 - "𝜂": [t: italic  eta]                         # 0x1d702
 - "": [t: italic  theta]                       # 0xf463
 - "𝜃": [t: italic  theta]                       # 0x1d703
 - "": [t: italic  iota]                        # 0xf464
 - "𝜄": [t: italic  iota]                        # 0x1d704
 - "": [t: italic  kappa]                       # 0xf465
 - "𝜅": [t: italic  kappa]                       # 0x1d705
 - "": [t: italic  lamda]                       # 0xf466
 - "𝜆": [t: italic  lamda]                       # 0x1d706
 - "": [t: italic  mu]                          # 0xf467
 - "𝜇": [t: italic  mu]                          # 0x1d707
 - "": [t: italic  nu]                          # 0xf468
 - "𝜈": [t: italic  nu]                          # 0x1d708
 - "": [t: italic  xi]                          # 0xf469
 - "𝜉": [t: italic  xi]                          # 0x1d709
 - "": [t: italic  omicron]                     # 0xf46a
 - "𝜊": [t: italic  omicron]                     # 0x1d70a
 - "": [t: italic  pi]                          # 0xf46b
 - "𝜋": [t: italic  pi]                          # 0x1d70b
 - "": [t: italic  rho]                         # 0xf46c
 - "𝜌": [t: italic  rho]                         # 0x1d70c
 - "": [t: italic  final sigma]                 # 0xf46d
 - "𝜍": [t: italic  final sigma]                 # 0x1d70d
 - "": [t: italic  sigma]                       # 0xf46e
 - "𝜎": [t: italic  sigma]                       # 0x1d70e
 - "": [t: italic  tau]                         # 0xf46f
 - "𝜏": [t: italic  tau]                         # 0x1d70f
 - "": [t: italic  upsilon]                     # 0xf470
 - "𝜐": [t: italic  upsilon]                     # 0x1d710
 - "": [t: italic  phi]                         # 0xf471
 - "𝜑": [t: italic  phi]                         # 0x1d711
 - "": [t: italic  chi]                         # 0xf472
 - "𝜒": [t: italic  chi]                         # 0x1d712
 - "": [t: italic  psi]                         # 0xf473
 - "𝜓": [t: italic  psi]                         # 0x1d713
 - "": [t: italic  omega]                       # 0xf474
 - "𝜔": [t: italic  omega]                       # 0x1d714
 - "": [t: bold partial differential]           # 0xf475
 - "𝜕": [t: bold partial differential]           # 0x1d715
 - "": [t: italic epsilon]                      # 0xf476
 - "𝜖": [t: italic epsilon]                      # 0x1d716
 - "": [t: italic theta]                        # 0xf477
 - "𝜗": [t: italic theta]                        # 0x1d717
 - "": [t: italic kappa]                        # 0xf478
 - "𝜘": [t: italic kappa]                        # 0x1d718
 - "": [t: italic phi]                          # 0xf479
 - "𝜙": [t: italic phi]                          # 0x1d719
 - "": [t: italic rho]                          # 0xf47a
 - "𝜚": [t: italic rho]                          # 0x1d71a
 - "": [t: italic pi]                           # 0xf47b
 - "𝜛": [t: italic pi]                           # 0x1d71b
 - "":                                          # 0xf47c
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: alpha
 - "𝜜":                                          # 0x1d71c
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: alpha
 - "":                                          # 0xf47d
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: beta
 - "𝜝":                                          # 0x1d71d
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: beta
 - "":                                          # 0xf47e
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: gamma
 - "𝜞":                                          # 0x1d71e
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: gamma
 - "":                                          # 0xf47f
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: delta
 - "𝜟":                                          # 0x1d71f
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: delta
 - "":                                          # 0xf480
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: epsilon
 - "𝜠":                                          # 0x1d720
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: epsilon
 - "":                                          # 0xf481
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: zeta
 - "𝜡":                                          # 0x1d721
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: zeta
 - "":                                          # 0xf482
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: eta
 - "𝜢":                                          # 0x1d722
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: eta
 - "":                                          # 0xf483
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: theta
 - "𝜣":                                          # 0x1d723
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: theta
 - "":                                          # 0xf484
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: iota
 - "𝜤":                                          # 0x1d724
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: iota
 - "":                                          # 0xf485
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: kappa
 - "𝜥":                                          # 0x1d725
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: kappa
 - "":                                          # 0xf486
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: lamda
 - "𝜦":                                          # 0x1d726
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: lamda
 - "":                                          # 0xf487
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: mu
 - "𝜧":                                          # 0x1d727
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: mu
 - "":                                          # 0xf488
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: nu
 - "𝜨":                                          # 0x1d728
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: nu
 - "":                                          # 0xf489
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: xi
 - "𝜩":                                          # 0x1d729
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: xi
 - "":                                          # 0xf48a
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: omicron
 - "𝜪":                                          # 0x1d72a
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: omicron
 - "":                                          # 0xf48b
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: pi
 - "𝜫":                                          # 0x1d72b
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: pi
 - "":                                          # 0xf48c
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: rho
 - "𝜬":                                          # 0x1d72c
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: rho
 - "":                                          # 0xf48d
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: theta
 - "𝜭":                                          # 0x1d72d
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: theta
 - "":                                          # 0xf48e
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: sigma
 - "𝜮":                                          # 0x1d72e
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: sigma
 - "":                                          # 0xf48f
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: tau
 - "𝜯":                                          # 0x1d72f
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: tau
 - "":                                          # 0xf490
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: upsilon
 - "𝜰":                                          # 0x1d730
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: upsilon
 - "":                                          # 0xf491
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: phi
 - "𝜱":                                          # 0x1d731
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: phi
 - "":                                          # 0xf492
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: chi
 - "𝜲":                                          # 0x1d732
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: chi
 - "":                                          # 0xf493
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: psi
 - "𝜳":                                          # 0x1d733
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: psi
 - "":                                          # 0xf494
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: omega
 - "𝜴":                                          # 0x1d734
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: omega
 - "": [t: bold nabla]                          # 0xf495
 - "𝜵": [t: bold nabla]                          # 0x1d735
 - "": [t: bold italic  alpha]                  # 0xf496
 - "𝜶": [t: bold italic  alpha]                  # 0x1d736
 - "": [t: bold italic  beta]                   # 0xf497
 - "𝜷": [t: bold italic  beta]                   # 0x1d737
 - "": [t: bold italic  gamma]                  # 0xf498
 - "𝜸": [t: bold italic  gamma]                  # 0x1d738
 - "": [t: bold italic  delta]                  # 0xf499
 - "𝜹": [t: bold italic  delta]                  # 0x1d739
 - "": [t: bold italic  epsilon]                # 0xf49a
 - "𝜺": [t: bold italic  epsilon]                # 0x1d73a
 - "": [t: bold italic  zeta]                   # 0xf49b
 - "𝜻": [t: bold italic  zeta]                   # 0x1d73b
 - "": [t: bold italic  eta]                    # 0xf49c
 - "𝜼": [t: bold italic  eta]                    # 0x1d73c
 - "": [t: bold italic  theta]                  # 0xf49d
 - "𝜽": [t: bold italic  theta]                  # 0x1d73d
 - "": [t: bold italic  iota]                   # 0xf49e
 - "𝜾": [t: bold italic  iota]                   # 0x1d73e
 - "": [t: bold italic  kappa]                  # 0xf49f
 - "𝜿": [t: bold italic  kappa]                  # 0x1d73f
 - "": [t: bold italic  lamda]                  # 0xf4a0
 - "𝝀": [t: bold italic  lamda]                  # 0x1d740
 - "": [t: bold italic  mu]                     # 0xf4a1
 - "𝝁": [t: bold italic  mu]                     # 0x1d741
 - "": [t: bold italic  nu]                     # 0xf4a2
 - "𝝂": [t: bold italic  nu]                     # 0x1d742
 - "": [t: bold italic  xi]                     # 0xf4a3
 - "𝝃": [t: bold italic  xi]                     # 0x1d743
 - "": [t: bold italic  omicron]                # 0xf4a4
 - "𝝄": [t: bold italic  omicron]                # 0x1d744
 - "": [t: bold italic  pi]                     # 0xf4a5
 - "𝝅": [t: bold italic  pi]                     # 0x1d745
 - "": [t: bold italic  rho]                    # 0xf4a6
 - "𝝆": [t: bold italic  rho]                    # 0x1d746
 - "": [t: bold italic  final sigma]            # 0xf4a7
 - "𝝇": [t: bold italic  final sigma]            # 0x1d747
 - "": [t: bold italic  sigma]                  # 0xf4a8
 - "𝝈": [t: bold italic  sigma]                  # 0x1d748
 - "": [t: bold italic  tau]                    # 0xf4a9
 - "𝝉": [t: bold italic  tau]                    # 0x1d749
 - "": [t: bold italic  upsilon]                # 0xf4aa
 - "𝝊": [t: bold italic  upsilon]                # 0x1d74a
 - "": [t: bold italic  phi]                    # 0xf4ab
 - "𝝋": [t: bold italic  phi]                    # 0x1d74b
 - "": [t: bold italic  chi]                    # 0xf4ac
 - "𝝌": [t: bold italic  chi]                    # 0x1d74c
 - "": [t: bold italic  psi]                    # 0xf4ad
 - "𝝍": [t: bold italic  psi]                    # 0x1d74d
 - "": [t: bold italic  omega]                  # 0xf4ae
 - "𝝎": [t: bold italic  omega]                  # 0x1d74e
 - "": [t: bold partial differential]           # 0xf4af
 - "𝝏": [t: bold partial differential]           # 0x1d74f
 - "": [t: bold italic epsilon]                 # 0xf4b0
 - "𝝐": [t: bold italic epsilon]                 # 0x1d750
 - "": [t: bold italic theta]                   # 0xf4b1
 - "𝝑": [t: bold italic theta]                   # 0x1d751
 - "": [t: bold italic kappa]                   # 0xf4b2
 - "𝝒": [t: bold italic kappa]                   # 0x1d752
 - "": [t: bold italic phi]                     # 0xf4b3
 - "𝝓": [t: bold italic phi]                     # 0x1d753
 - "": [t: bold italic rho]                     # 0xf4b4
 - "𝝔": [t: bold italic rho]                     # 0x1d754
 - "": [t: bold italic pi]                      # 0xf4b5
 - "𝝕": [t: bold italic pi]                      # 0x1d755
 - "":                                          # 0xf4b6
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: alpha
 - "𝝖":                                          # 0x1d756
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: alpha
 - "":                                          # 0xf4b7
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: beta
 - "𝝗":                                          # 0x1d757
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: beta
 - "":                                          # 0xf4b8
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: gamma
 - "𝝘":                                          # 0x1d758
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: gamma
 - "":                                          # 0xf4b9
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: delta
 - "𝝙":                                          # 0x1d759
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: delta
 - "":                                          # 0xf4ba
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: epsilon
 - "𝝚":                                          # 0x1d75a
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: epsilon
 - "":                                          # 0xf4bb
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: zeta
 - "𝝛":                                          # 0x1d75b
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: zeta
 - "":                                          # 0xf4bc
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: eta
 - "𝝜":                                          # 0x1d75c
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: eta
 - "":                                          # 0xf4bd
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: theta
 - "𝝝":                                          # 0x1d75d
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: theta
 - "":                                          # 0xf4be
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: iota
 - "𝝞":                                          # 0x1d75e
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: iota
 - "":                                          # 0xf4bf
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: kappa
 - "𝝟":                                          # 0x1d75f
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: kappa
 - "":                                          # 0xf4c0
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: lamda
 - "𝝠":                                          # 0x1d760
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: lamda
 - "":                                          # 0xf4c1
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: mu
 - "𝝡":                                          # 0x1d761
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: mu
 - "":                                          # 0xf4c2
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: nu
 - "𝝢":                                          # 0x1d762
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: nu
 - "":                                          # 0xf4c3
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: xi
 - "𝝣":                                          # 0x1d763
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: xi
 - "":                                          # 0xf4c4
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: omicron
 - "𝝤":                                          # 0x1d764
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: omicron
 - "":                                          # 0xf4c5
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: pi
 - "𝝥":                                          # 0x1d765
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: pi
 - "":                                          # 0xf4c6
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: rho
 - "𝝦":                                          # 0x1d766
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: rho
 - "":                                          # 0xf4c7
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: theta
 - "𝝧":                                          # 0x1d767
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: theta
 - "":                                          # 0xf4c8
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: sigma
 - "𝝨":                                          # 0x1d768
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: sigma
 - "":                                          # 0xf4c9
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: tau
 - "𝝩":                                          # 0x1d769
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: tau
 - "":                                          # 0xf4ca
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: upsilon
 - "𝝪":                                          # 0x1d76a
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: upsilon
 - "":                                          # 0xf4cb
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: phi
 - "𝝫":                                          # 0x1d76b
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: phi
 - "":                                          # 0xf4cc
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: chi
 - "𝝬":                                          # 0x1d76c
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: chi
 - "":                                          # 0xf4cd
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: psi
 - "𝝭":                                          # 0x1d76d
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: psi
 - "":                                          # 0xf4ce
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: omega
 - "𝝮":                                          # 0x1d76e
     - t: bold
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: omega
 - "": [t: bold nabla]                          # 0xf4cf
 - "𝝯": [t: bold nabla]                          # 0x1d76f
 - "": [t: bold  alpha]                         # 0xf4d0
 - "𝝰": [t: bold  alpha]                         # 0x1d770
 - "": [t: bold  beta]                          # 0xf4d1
 - "𝝱": [t: bold  beta]                          # 0x1d771
 - "": [t: bold  gamma]                         # 0xf4d2
 - "𝝲": [t: bold  gamma]                         # 0x1d772
 - "": [t: bold  delta]                         # 0xf4d3
 - "𝝳": [t: bold  delta]                         # 0x1d773
 - "": [t: bold  epsilon]                       # 0xf4d4
 - "𝝴": [t: bold  epsilon]                       # 0x1d774
 - "": [t: bold  zeta]                          # 0xf4d5
 - "𝝵": [t: bold  zeta]                          # 0x1d775
 - "": [t: bold  eta]                           # 0xf4d6
 - "𝝶": [t: bold  eta]                           # 0x1d776
 - "": [t: bold  theta]                         # 0xf4d7
 - "𝝷": [t: bold  theta]                         # 0x1d777
 - "": [t: bold  iota]                          # 0xf4d8
 - "𝝸": [t: bold  iota]                          # 0x1d778
 - "": [t: bold  kappa]                         # 0xf4d9
 - "𝝹": [t: bold  kappa]                         # 0x1d779
 - "": [t: bold  lamda]                         # 0xf4da
 - "𝝺": [t: bold  lamda]                         # 0x1d77a
 - "": [t: bold  mu]                            # 0xf4db
 - "𝝻": [t: bold  mu]                            # 0x1d77b
 - "": [t: bold  nu]                            # 0xf4dc
 - "𝝼": [t: bold  nu]                            # 0x1d77c
 - "": [t: bold  xi]                            # 0xf4dd
 - "𝝽": [t: bold  xi]                            # 0x1d77d
 - "": [t: bold  omicron]                       # 0xf4de
 - "𝝾": [t: bold  omicron]                       # 0x1d77e
 - "": [t: bold  pi]                            # 0xf4df
 - "𝝿": [t: bold  pi]                            # 0x1d77f
 - "": [t: bold  rho]                           # 0xf4e0
 - "𝞀": [t: bold  rho]                           # 0x1d780
 - "": [t: bold  final sigma]                   # 0xf4e1
 - "𝞁": [t: bold  final sigma]                   # 0x1d781
 - "": [t: bold  sigma]                         # 0xf4e2
 - "𝞂": [t: bold  sigma]                         # 0x1d782
 - "": [t: bold  tau]                           # 0xf4e3
 - "𝞃": [t: bold  tau]                           # 0x1d783
 - "": [t: bold  upsilon]                       # 0xf4e4
 - "𝞄": [t: bold  upsilon]                       # 0x1d784
 - "": [t: bold  phi]                           # 0xf4e5
 - "𝞅": [t: bold  phi]                           # 0x1d785
 - "": [t: bold  chi]                           # 0xf4e6
 - "𝞆": [t: bold  chi]                           # 0x1d786
 - "": [t: bold  psi]                           # 0xf4e7
 - "𝞇": [t: bold  psi]                           # 0x1d787
 - "": [t: bold  omega]                         # 0xf4e8
 - "𝞈": [t: bold  omega]                         # 0x1d788
 - "": [t: bold partial differential]           # 0xf4e9
 - "𝞉": [t: bold partial differential]           # 0x1d789
 - "": [t: bold epsilon]                        # 0xf4ea
 - "𝞊": [t: bold epsilon]                        # 0x1d78a
 - "": [t: bold theta]                          # 0xf4eb
 - "𝞋": [t: bold theta]                          # 0x1d78b
 - "": [t: bold kappa]                          # 0xf4ec
 - "𝞌": [t: bold kappa]                          # 0x1d78c
 - "": [t: bold phi]                            # 0xf4ed
 - "𝞍": [t: bold phi]                            # 0x1d78d
 - "": [t: bold rho]                            # 0xf4ee
 - "𝞎": [t: bold rho]                            # 0x1d78e
 - "": [t: bold pi]                             # 0xf4ef
 - "𝞏": [t: bold pi]                             # 0x1d78f
 - "":                                          # 0xf4f0
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: alpha
 - "𝞐":                                          # 0x1d790
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: alpha
 - "":                                          # 0xf4f1
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: beta
 - "𝞑":                                          # 0x1d791
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: beta
 - "":                                          # 0xf4f2
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: gamma
 - "𝞒":                                          # 0x1d792
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: gamma
 - "":                                          # 0xf4f3
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: delta
 - "𝞓":                                          # 0x1d793
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: delta
 - "":                                          # 0xf4f4
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: epsilon
 - "𝞔":                                          # 0x1d794
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: epsilon
 - "":                                          # 0xf4f5
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: zeta
 - "𝞕":                                          # 0x1d795
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: zeta
 - "":                                          # 0xf4f6
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: eta
 - "𝞖":                                          # 0x1d796
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: eta
 - "":                                          # 0xf4f7
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: theta
 - "𝞗":                                          # 0x1d797
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: theta
 - "":                                          # 0xf4f8
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: iota
 - "𝞘":                                          # 0x1d798
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: iota
 - "":                                          # 0xf4f9
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: kappa
 - "𝞙":                                          # 0x1d799
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: kappa
 - "":                                          # 0xf4fa
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: lamda
 - "𝞚":                                          # 0x1d79a
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: lamda
 - "":                                          # 0xf4fb
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: mu
 - "𝞛":                                          # 0x1d79b
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: mu
 - "":                                          # 0xf4fc
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: nu
 - "𝞜":                                          # 0x1d79c
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: nu
 - "":                                          # 0xf4fd
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: xi
 - "𝞝":                                          # 0x1d79d
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: xi
 - "":                                          # 0xf4fe
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: omicron
 - "𝞞":                                          # 0x1d79e
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: omicron
 - "":                                          # 0xf4ff
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: pi
 - "𝞟":                                          # 0x1d79f
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: pi
 - "":                                          # 0xf500
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: rho
 - "𝞠":                                          # 0x1d7a0
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: rho
 - "":                                          # 0xf501
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: theta
 - "𝞡":                                          # 0x1d7a1
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: theta
 - "":                                          # 0xf502
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: sigma
 - "𝞢":                                          # 0x1d7a2
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: sigma
 - "":                                          # 0xf503
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: tau
 - "𝞣":                                          # 0x1d7a3
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: tau
 - "":                                          # 0xf504
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: upsilon
 - "𝞤":                                          # 0x1d7a4
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: upsilon
 - "":                                          # 0xf505
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: phi
 - "𝞥":                                          # 0x1d7a5
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: phi
 - "":                                          # 0xf506
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: chi
 - "𝞦":                                          # 0x1d7a6
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: chi
 - "":                                          # 0xf507
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: psi
 - "𝞧":                                          # 0x1d7a7
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: psi
 - "":                                          # 0xf508
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: omega
 - "𝞨":                                          # 0x1d7a8
     - t: bold italic
     - test: 
         if: "($Blind or $Verbosity!='Terse')"
         then: {t: cap}
     - t: omega
 - "": [t: bold nabla]                          # 0xf509
 - "𝞩": [t: bold nabla]                          # 0x1d7a9
 - "": [t: bold italic  alpha]                  # 0xf50a
 - "𝞪": [t: bold italic  alpha]                  # 0x1d7aa
 - "": [t: bold italic  beta]                   # 0xf50b
 - "𝞫": [t: bold italic  beta]                   # 0x1d7ab
 - "": [t: bold italic  gamma]                  # 0xf50c
 - "𝞬": [t: bold italic  gamma]                  # 0x1d7ac
 - "": [t: bold italic  delta]                  # 0xf50d
 - "𝞭": [t: bold italic  delta]                  # 0x1d7ad
 - "": [t: bold italic  epsilon]                # 0xf50e
 - "𝞮": [t: bold italic  epsilon]                # 0x1d7ae
 - "": [t: bold italic  zeta]                   # 0xf50f
 - "𝞯": [t: bold italic  zeta]                   # 0x1d7af
 - "": [t: bold italic  eta]                    # 0xf510
 - "𝞰": [t: bold italic  eta]                    # 0x1d7b0
 - "": [t: bold italic  theta]                  # 0xf511
 - "𝞱": [t: bold italic  theta]                  # 0x1d7b1
 - "": [t: bold italic  iota]                   # 0xf512
 - "𝞲": [t: bold italic  iota]                   # 0x1d7b2
 - "": [t: bold italic  kappa]                  # 0xf513
 - "𝞳": [t: bold italic  kappa]                  # 0x1d7b3
 - "": [t: bold italic  lamda]                  # 0xf514
 - "𝞴": [t: bold italic  lamda]                  # 0x1d7b4
 - "": [t: bold italic  mu]                     # 0xf515
 - "𝞵": [t: bold italic  mu]                     # 0x1d7b5
 - "": [t: bold italic  nu]                     # 0xf516
 - "𝞶": [t: bold italic  nu]                     # 0x1d7b6
 - "": [t: bold italic  xi]                     # 0xf517
 - "𝞷": [t: bold italic  xi]                     # 0x1d7b7
 - "": [t: bold italic  omicron]                # 0xf518
 - "𝞸": [t: bold italic  omicron]                # 0x1d7b8
 - "": [t: bold italic  pi]                     # 0xf519
 - "𝞹": [t: bold italic  pi]                     # 0x1d7b9
 - "": [t: bold italic  rho]                    # 0xf51a
 - "𝞺": [t: bold italic  rho]                    # 0x1d7ba
 - "": [t: bold italic  final sigma]            # 0xf51b
 - "𝞻": [t: bold italic  final sigma]            # 0x1d7bb
 - "": [t: bold italic  sigma]                  # 0xf51c
 - "𝞼": [t: bold italic  sigma]                  # 0x1d7bc
 - "": [t: bold italic  tau]                    # 0xf51d
 - "𝞽": [t: bold italic  tau]                    # 0x1d7bd
 - "": [t: bold italic  upsilon]                # 0xf51e
 - "𝞾": [t: bold italic  upsilon]                # 0x1d7be
 - "": [t: bold italic  phi]                    # 0xf51f
 - "𝞿": [t: bold italic  phi]                    # 0x1d7bf
 - "": [t: bold italic  chi]                    # 0xf520
 - "𝟀": [t: bold italic  chi]                    # 0x1d7c0
 - "": [t: bold italic  psi]                    # 0xf521
 - "𝟁": [t: bold italic  psi]                    # 0x1d7c1
 - "": [t: bold italic  omega]                  # 0xf522
 - "𝟂": [t: bold italic  omega]                  # 0x1d7c2
 - "": [t: bold partial differential]           # 0xf523
 - "𝟃": [t: bold partial differential]           # 0x1d7c3
 - "": [t: bold italic epsilon]                 # 0xf524
 - "𝟄": [t: bold italic epsilon]                 # 0x1d7c4
 - "": [t: bold italic theta]                   # 0xf525
 - "𝟅": [t: bold italic theta]                   # 0x1d7c5
 - "": [t: bold italic kappa]                   # 0xf526
 - "𝟆": [t: bold italic kappa]                   # 0x1d7c6
 - "": [t: bold italic phi]                     # 0xf527
 - "𝟇": [t: bold italic phi]                     # 0x1d7c7
 - "": [t: bold italic rho]                     # 0xf528
 - "𝟈": [t: bold italic rho]                     # 0x1d7c8
 - "": [t: bold italic pi]                      # 0xf529
 - "𝟉": [t: bold italic pi]                      # 0x1d7c9
 - "": [t: bold zero]                           # 0xf52e
 - "𝟎": [t: bold zero]                           # 0x1d7ce
 - "": [t: bold one]                            # 0xf52f
 - "𝟏": [t: bold one]                            # 0x1d7cf
 - "": [t: bold two]                            # 0xf530
 - "𝟐": [t: bold two]                            # 0x1d7d0
 - "": [t: bold three]                          # 0xf531
 - "𝟑": [t: bold three]                          # 0x1d7d1
 - "": [t: bold four]                           # 0xf532
 - "𝟒": [t: bold four]                           # 0x1d7d2
 - "": [t: bold five]                           # 0xf533
 - "𝟓": [t: bold five]                           # 0x1d7d3
 - "": [t: bold six]                            # 0xf534
 - "𝟔": [t: bold six]                            # 0x1d7d4
 - "": [t: bold seven]                          # 0xf535
 - "𝟕": [t: bold seven]                          # 0x1d7d5
 - "": [t: bold eight]                          # 0xf536
 - "𝟖": [t: bold eight]                          # 0x1d7d6
 - "": [t: bold nine]                           # 0xf537
 - "𝟗": [t: bold nine]                           # 0x1d7d7
 - "": [t: zero]                                # 0xf542
 - "𝟢": [t: zero]                                # 0x1d7e2
 - "": [t: one]                                 # 0xf543
 - "𝟣": [t: one]                                 # 0x1d7e3
 - "": [t: two]                                 # 0xf544
 - "𝟤": [t: two]                                 # 0x1d7e4
 - "": [t: three]                               # 0xf545
 - "𝟥": [t: three]                               # 0x1d7e5
 - "": [t: four]                                # 0xf546
 - "𝟦": [t: four]                                # 0x1d7e6
 - "": [t: five]                                # 0xf547
 - "𝟧": [t: five]                                # 0x1d7e7
 - "": [t: six]                                 # 0xf548
 - "𝟨": [t: six]                                 # 0x1d7e8
 - "": [t: seven]                               # 0xf549
 - "𝟩": [t: seven]                               # 0x1d7e9
 - "": [t: eight]                               # 0xf54a
 - "𝟪": [t: eight]                               # 0x1d7ea
 - "": [t: nine]                                # 0xf54b
 - "𝟫": [t: nine]                                # 0x1d7eb
 - "": [t: bold zero]                           # 0xf54c
 - "𝟬": [t: bold zero]                           # 0x1d7ec
 - "": [t: bold one]                            # 0xf54d
 - "𝟭": [t: bold one]                            # 0x1d7ed
 - "": [t: bold two]                            # 0xf54e
 - "𝟮": [t: bold two]                            # 0x1d7ee
 - "": [t: bold three]                          # 0xf54f
 - "𝟯": [t: bold three]                          # 0x1d7ef
 - "": [t: bold four]                           # 0xf550
 - "𝟰": [t: bold four]                           # 0x1d7f0
 - "": [t: bold five]                           # 0xf551
 - "𝟱": [t: bold five]                           # 0x1d7f1
 - "": [t: bold six]                            # 0xf552
 - "𝟲": [t: bold six]                            # 0x1d7f2
 - "": [t: bold seven]                          # 0xf553
 - "𝟳": [t: bold seven]                          # 0x1d7f3
 - "": [t: bold eight]                          # 0xf554
 - "𝟴": [t: bold eight]                          # 0x1d7f4
 - "": [t: bold nine]                           # 0xf555
 - "𝟵": [t: bold nine]                           # 0x1d7f5
 - "": [t: zero]                                # 0xf556
 - "𝟶": [t: zero]                                # 0x1d7f6
 - "": [t: one]                                 # 0xf557
 - "𝟷": [t: one]                                 # 0x1d7f7
 - "": [t: two]                                 # 0xf558
 - "𝟸": [t: two]                                 # 0x1d7f8
 - "": [t: three]                               # 0xf559
 - "𝟹": [t: three]                               # 0x1d7f9
 - "": [t: four]                                # 0xf55a
 - "𝟺": [t: four]                                # 0x1d7fa
 - "": [t: five]                                # 0xf55b
 - "𝟻": [t: five]                                # 0x1d7fb
 - "": [t: six]                                 # 0xf55c
 - "𝟼": [t: six]                                 # 0x1d7fc
 - "": [t: seven]                               # 0xf55d
 - "𝟽": [t: seven]                               # 0x1d7fd
 - "": [t: eight]                               # 0xf55e
 - "𝟾": [t: eight]                               # 0x1d7fe
 - "": [t: nine]                                # 0xf55f
 - "𝟿": [t: nine]                                # 0x1d7ff
 - "": [t: unknown character]                   # 0xf700
 - "": [t: lower right and lower left triangles] # 0xf726
 - "": [t: horizontal ellipsis extender]        # 0xf72d
 - "": [t: midline horizontal ellipsis extender] # 0xf72e
 - "": [t: radical extender]                    # 0xf8e5
 - "": [t: vertical arrow extender]             # 0xf8e6
 - "": [t: horizontal arrow extender]           # 0xf8e7
 - "": [t: registered sign sans serif]          # 0xf8e8
 - "": [t: copyright sign sans serif]           # 0xf8e9
 - "": [t: trade mark sign sans serif]          # 0xf8ea
 - "": [t: left paren top]                      # 0xf8eb
 - "": [t: left paren extender]                 # 0xf8ec
 - "": [t: left paren bottom]                   # 0xf8ed
 - "": [t: left bracket top]                    # 0xf8ee
 - "": [t: left bracket extender]               # 0xf8ef
 - "": [t: left bracket bottom]                 # 0xf8f0
 - "": [t: left brace top]                      # 0xf8f1
 - "": [t: left brace mid]                      # 0xf8f2
 - "": [t: left brace bottom]                   # 0xf8f3
 - "": [t: brace extender]                      # 0xf8f4
 - "": [t: integral extender]                   # 0xf8f5
 - "": [t: right paren top]                     # 0xf8f6
 - "": [t: right paren extender]                # 0xf8f7
 - "": [t: right paren bottom]                  # 0xf8f8
 - "": [t: right bracket top]                   # 0xf8f9
 - "": [t: right bracket extender]              # 0xf8fa
 - "": [t: right bracket bottom]                # 0xf8fb
 - "": [t: right brace top]                     # 0xf8fc
 - "": [t: right brace mid]                     # 0xf8fd
 - "": [t: right brace bottom]                  # 0xf8fe
 - "": [t: apple logo]                          # 0xf8ff
 - "ﬀ": [t: ff]                                  # 0xfb00
 - "ﬁ": [t: fi]                                  # 0xfb01
 - "ﬂ": [t: fl]                                  # 0xfb02
 - "ﬃ": [t: ffi]                                 # 0xfb03
 - "ﬄ": [t: ffl]                                 # 0xfb04
 - "ﬅ": [t: ft]                                  # 0xfb05
 - "ﬆ": [t: st]                                  # 0xfb06
 - "︠": [t: ligature left half embellishment]    # 0xfe20
 - "︡": [t: ligature right half embellishment]   # 0xfe21
 - "︢": [t: double tilde left half embellishment] # 0xfe22
 - "︣": [t: double tilde right half embellishment] # 0xfe23
 - "︤": [t: macron left half embellishment]      # 0xfe24
 - "︥": [t: macron right half embellishment]     # 0xfe25
 - "︦": [t: conjoining macron embellishment]     # 0xfe26
 - "︵": [t: over paren]                          # 0xfe35
 - "︶": [t: under paren]                         # 0xfe36
 - "︷": [t: over brace]                          # 0xfe37
 - "︸": [t: under brace]                         # 0xfe38
 - "︿": [t: over angle bracket]                  # 0xfe3f
 - "﹀": [t: under angle bracket]                 # 0xfe40
 - "﹨": [t: integer divide]                      # 0xfe68
 - "￼": [t: unknown or missing object]           # 0xfffc
 - "�": [t: unknown or missing character]        # 0xfffd